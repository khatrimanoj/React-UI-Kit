{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/indicatorSlider.js\";\nimport React, { Component } from 'react';\nimport SingleEditableSlider from './singleEditableSlider';\nimport IndicatorSlider from './indicatorSlider';\n\nclass EditableSlider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderWidth: 0,\n      offsetSliderWidht: 0,\n      minV: 0,\n      maxV: 100,\n      minValueBetween: 10,\n      currentMin: this.props.currentMin,\n      inputMin: this.props.inputMin,\n      currentMax: this.props.currentMax,\n      inputMax: this.props.inputMax,\n      className: this.props.className\n    };\n\n    this.setMin = e => {\n      const {\n        minV,\n        maxV,\n        currentMax,\n        minValueBetween\n      } = this.state;\n      const inputMin = e.target.value;\n      this.setState({\n        inputMin\n      });\n\n      if (inputMin >= minV && inputMin <= currentMax - minValueBetween) {\n        this.setState({\n          currentMin: parseInt(inputMin)\n        });\n        this.minValue.style.width = inputMin * 100 / maxV + \"%\";\n      }\n    };\n\n    this.changeMinValue = e => {\n      e.preventDefault();\n      document.addEventListener('mousemove', this.onMouseMoveMin);\n      document.addEventListener('mouseup', this.onMouseUpMin);\n      document.addEventListener('touchmove', this.onMouseMoveMin);\n      document.addEventListener('touchend', this.onMouseUpMin);\n    };\n\n    this.onMouseMoveMin = e => {\n      const {\n        minV,\n        maxV,\n        currentMax,\n        minValueBetween,\n        sliderWidth,\n        offsetSliderWidht\n      } = this.state;\n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = dragedWidht * 100 / sliderWidth;\n      const currentMin = Math.abs(parseInt(maxV * dragedWidhtInPercent / 100)); // console.log(e.pageX, e.clientX, offsetSliderWidht);\n      // console.log(currentMin , (currentMax-minValueBetween));\n      // console.log((max * dragedWidhtInPercent)/100);\n\n      if (currentMin >= minV && currentMin <= currentMax - minValueBetween) {\n        this.minValue.style.width = dragedWidhtInPercent + \"%\";\n        this.minValue.dataset.content = currentMin;\n        this.setState({\n          currentMin,\n          inputMin: currentMin\n        });\n      }\n    };\n\n    this.onMouseUpMin = () => {\n      document.removeEventListener('mouseup', this.onMouseUpMin);\n      document.removeEventListener('mousemove', this.onMouseMoveMin);\n      document.removeEventListener('touchend', this.onMouseMoveMin);\n      document.removeEventListener('touchmove', this.onMouseUpMin);\n    };\n\n    this.setMax = e => {\n      const {\n        minV,\n        maxV,\n        currentMin,\n        currentMax,\n        minValueBetween\n      } = this.state;\n      const inputMax = e.target.value;\n      this.setState({\n        inputMax\n      });\n\n      if (inputMax >= currentMin + minValueBetween && inputMax <= maxV) {\n        this.setState({\n          currentMax: parseInt(inputMax)\n        });\n        this.maxValue.style.width = inputMax * 100 / maxV + \"%\";\n      }\n    };\n\n    this.changeMaxValue = e => {\n      e.preventDefault();\n      document.addEventListener('mousemove', this.onMouseMoveMax);\n      document.addEventListener('mouseup', this.onMouseUpMax);\n      document.addEventListener('touchmove', this.onMouseMoveMax);\n      document.addEventListener('touchend', this.onMouseUpMax);\n    };\n\n    this.onMouseMoveMax = e => {\n      const {\n        maxV,\n        currentMin,\n        minValueBetween,\n        sliderWidth,\n        offsetSliderWidht\n      } = this.state;\n      const maxWalueThumb = this.maxValue;\n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = dragedWidht * 100 / sliderWidth;\n      const currentMax = Math.abs(parseInt(maxV * dragedWidhtInPercent / 100));\n\n      if (currentMax >= currentMin + minValueBetween && currentMax <= maxV) {\n        maxWalueThumb.style.width = dragedWidhtInPercent + \"%\";\n        maxWalueThumb.dataset.content = currentMax;\n        this.setState({\n          currentMax,\n          inputMax: currentMax\n        });\n      }\n    };\n\n    this.onMouseUpMax = () => {\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('mousemove', this.onMouseMoveMax);\n      document.removeEventListener('touchend', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onMouseMoveMax);\n    };\n\n    this.maxForMin = () => {\n      const {\n        currentMax,\n        minValueBetween\n      } = this.state;\n      return currentMax - minValueBetween;\n    };\n\n    this.minForMax = () => {\n      const {\n        currentMin,\n        minValueBetween\n      } = this.state;\n      return currentMin + minValueBetween;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentMin,\n      currentMax,\n      maxV\n    } = this.state;\n    this.minValue.style.width = currentMin * 100 / maxV + \"%\";\n    this.maxValue.style.width = currentMax * 100 / maxV + \"%\";\n    this.setState({\n      sliderWidth: this.slider.offsetWidth,\n      offsetSliderWidht: this.slider.offsetLeft\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"editable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current-value inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.slider = ref,\n      id: \"range-slider\",\n      className: `${this.state.className} double-range-slider`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.minValue = ref,\n      id: \"min\",\n      \"data-content\": this.state.currentMin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.minValueDrag = ref,\n      id: \"min-drag\",\n      onMouseDown: this.changeMinValue,\n      onTouchStart: this.changeMinValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(SingleEditableSlider, {\n      value: 64,\n      min: 0,\n      max: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(IndicatorSlider, {\n      value: 64,\n      min: 0,\n      max: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EditableSlider;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/indicatorSlider.js"],"names":["React","Component","SingleEditableSlider","IndicatorSlider","EditableSlider","state","sliderWidth","offsetSliderWidht","minV","maxV","minValueBetween","currentMin","props","inputMin","currentMax","inputMax","className","setMin","e","target","value","setState","parseInt","minValue","style","width","changeMinValue","preventDefault","document","addEventListener","onMouseMoveMin","onMouseUpMin","dragedWidht","clientX","dragedWidhtInPercent","Math","abs","dataset","content","removeEventListener","setMax","maxValue","changeMaxValue","onMouseMoveMax","onMouseUpMax","maxWalueThumb","onMouseUp","maxForMin","minForMax","componentDidMount","slider","offsetWidth","offsetLeft","render","ref","minValueDrag"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SingleEditableSlider from './singleEditableSlider'\nimport IndicatorSlider from './indicatorSlider';\nclass EditableSlider extends Component {\n    state = {\n        sliderWidth: 0,\n        offsetSliderWidht: 0,\n        minV: 0,\n        maxV: 100,\n        minValueBetween: 10,\n        \n        currentMin: this.props.currentMin,\n        inputMin: this.props.inputMin,\n        \n        currentMax: this.props.currentMax,\n        inputMax: this.props.inputMax,\n\n        className: this.props.className,\n    };\n\n    componentDidMount() {\n        const { currentMin, currentMax, maxV } = this.state;\n        \n        this.minValue.style.width = (currentMin*100)/maxV + \"%\";\n        this.maxValue.style.width = (currentMax*100)/maxV + \"%\";\n        \n        this.setState({\n            sliderWidth: this.slider.offsetWidth,\n            offsetSliderWidht: this.slider.offsetLeft,\n        })\n    }\n\n    setMin = (e) => {\n        const { minV, maxV, currentMax, minValueBetween } = this.state;\n        const inputMin = e.target.value;\n        \n        this.setState({\n            inputMin\n        });\n        \n        if((inputMin >= minV) && (inputMin <= (currentMax-minValueBetween))){\n        this.setState({\n            currentMin: parseInt(inputMin)\n        }); \n\n        this.minValue.style.width = (inputMin*100)/maxV + \"%\";\n        }\n    }\n\n    changeMinValue = (e) => {\n        e.preventDefault();\n\n        document.addEventListener('mousemove', this.onMouseMoveMin);\n        document.addEventListener('mouseup', this.onMouseUpMin);\n        \n        document.addEventListener('touchmove', this.onMouseMoveMin);\n        document.addEventListener('touchend', this.onMouseUpMin);\n    }\n\n    onMouseMoveMin = (e) => {\n        const { minV, maxV, currentMax, minValueBetween, sliderWidth, offsetSliderWidht } = this.state;\n        \n        const dragedWidht = e.clientX - offsetSliderWidht;\n        const dragedWidhtInPercent = (dragedWidht*100)/sliderWidth;\n        const currentMin = Math.abs(parseInt((maxV * dragedWidhtInPercent)/100));\n        \n        // console.log(e.pageX, e.clientX, offsetSliderWidht);\n        \n        // console.log(currentMin , (currentMax-minValueBetween));\n        \n        // console.log((max * dragedWidhtInPercent)/100);\n    \n        if( (currentMin >= minV) && (currentMin <= (currentMax-minValueBetween))){\n            this.minValue.style.width = dragedWidhtInPercent + \"%\";\n            this.minValue.dataset.content = currentMin;\n\n            this.setState({\n                currentMin,\n                inputMin: currentMin\n            })\n        }\n    }\n\n    onMouseUpMin = () => {\n        document.removeEventListener('mouseup', this.onMouseUpMin);\n        document.removeEventListener('mousemove', this.onMouseMoveMin);\n        \n        document.removeEventListener('touchend', this.onMouseMoveMin);\n        document.removeEventListener('touchmove', this.onMouseUpMin);\n    }\n    \n    \n    setMax = (e) => {\n        const { minV, maxV, currentMin, currentMax, minValueBetween } = this.state;\n\n        const inputMax = e.target.value;\n        \n        this.setState({\n            inputMax\n        });\n\n        if((inputMax >= currentMin + minValueBetween) && (inputMax <= maxV)){\n        \n            this.setState({\n                currentMax: parseInt(inputMax)\n            });\n            this.maxValue.style.width = (inputMax*100)/maxV + \"%\";\n        }\n        \n    }\n    \n    changeMaxValue = (e) => {\n        e.preventDefault();\n\n        document.addEventListener('mousemove', this.onMouseMoveMax);\n        document.addEventListener('mouseup', this.onMouseUpMax);\n        \n        document.addEventListener('touchmove', this.onMouseMoveMax);\n        document.addEventListener('touchend', this.onMouseUpMax);\n    }\n\n    onMouseMoveMax = (e) => {\n        const { maxV, currentMin, minValueBetween, sliderWidth, offsetSliderWidht} = this.state; \n        const maxWalueThumb = this.maxValue;\n        const dragedWidht = e.clientX - offsetSliderWidht;\n        const dragedWidhtInPercent = (dragedWidht*100)/sliderWidth;\n        const currentMax = Math.abs(parseInt((maxV * dragedWidhtInPercent)/100));\n        \n        if( (currentMax >= (currentMin + minValueBetween)) && (currentMax <= maxV)){\n        \n            maxWalueThumb.style.width = dragedWidhtInPercent + \"%\";\n            maxWalueThumb.dataset.content = currentMax;\n            this.setState({\n                currentMax,\n                inputMax: currentMax\n            })\n        }\n    }\n\n    onMouseUpMax = () => {\n        document.removeEventListener('mouseup', this.onMouseUp);\n        document.removeEventListener('mousemove', this.onMouseMoveMax);\n        \n        document.removeEventListener('touchend', this.onMouseUp);\n        document.removeEventListener('touchmove', this.onMouseMoveMax);\n    }\n    \n    maxForMin = () => {\n        const { currentMax, minValueBetween} = this.state; \n        return currentMax - minValueBetween;\n    }\n    \n    minForMax = () => {\n        const { currentMin, minValueBetween} = this.state; \n        return currentMin + minValueBetween;\n    }\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <div className=\"editable\">\n                        <div className=\"current-value inline\">\n                            <div ref={ref => this.slider = ref} id=\"range-slider\" className={`${this.state.className} double-range-slider`}>\n                                <div ref={ref => this.minValue = ref} id=\"min\" data-content={this.state.currentMin}>\n                                    <div ref={ref => this.minValueDrag = ref} id=\"min-drag\" onMouseDown ={this.changeMinValue} onTouchStart={this.changeMinValue}></div>\n                                </div>\n                            </div> \n                            \n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-3\">\n                    <SingleEditableSlider value={64} min={0} max={100} /> \n                </div>\n                <div className=\"col-md-3\">\n                    <IndicatorSlider value={64} min={0} max={100} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EditableSlider;"]},"metadata":{},"sourceType":"module"}