{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/inputChips.js\";\nimport React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\nimport { x } from 'react-icons-kit/feather/x';\nimport { mapPin } from 'react-icons-kit/feather/mapPin';\nconst Default = ['form-group input-chips default-chips left-icon'];\nconst outline = ['form-group input-chips outline-chips left-icon'];\nconst filled = ['form-group input-chips filled-chips left-icon'];\nconst filter = ['', 'disabled', 'focus'];\n\nclass inputChips extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DivclassName: this.props.DivclassName,\n      LeftIcon: this.state.LeftIcon,\n      inputTitle: this.props.inputValue\n    };\n\n    this.deleteChips = chipsIndex => {\n      const inputChips = this.state.inputChips;\n      inputChips.splice(chipsIndex, 1);\n      this.setState({\n        inputChips: inputChips\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: `${Default} ${filter[i]}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: chipsList.disabled,\n      autoFocus: filter[i],\n      readOnly: true,\n      id: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })))) // {/* <div className=\"input-chips-wrapper\">\n    //     <div className=\"row\">\n    //         <div className=\"col-md-4\">\n    //             <div className=\"default\">\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${Default} ${filter[i]}`} key={i}> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} autoFocus={filter[i]} readOnly id={i.id} />\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${Default} ${filter[i]}`} key={i} id={chipsList.id}> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled}  readOnly id={i.id} className=\"rounded\"/>\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //             </div>\n    //         </div> \n    //         <div className=\"col-md-4\">\n    //             <div className=\"outline\">\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${outline} ${filter[i]}`} key={i} id=\"outline\"> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${outline} ${filter[i]}`} key={i} id={chipsList.id}> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //             </div>\n    //         </div>\n    //         <div className=\"col-md-4\">\n    //             {this.state.inputChips.map((chipsList, i) => \n    //                 <div className={`${filled} ${filter[i]}`} key={i} id=\"filled\"> \n    //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n    //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                 </div>\n    //             )}\n    //             {this.state.inputChips.map((chipsList, i) => \n    //                 <div className={`${filled} ${filter[i]}`} key={i} id={chipsList.id}> \n    //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n    //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                 </div>\n    //             )}\n    //         </div> \n    //     </div>\n    // </div> */}\n    ;\n  }\n\n}\n\nexport default inputChips;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/inputChips.js"],"names":["React","Component","Icon","x","mapPin","Default","outline","filled","filter","inputChips","state","DivclassName","props","LeftIcon","inputTitle","inputValue","deleteChips","chipsIndex","splice","setState","render","i","chipsList","Title","disabled","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAAQC,CAAR,QAAgB,2BAAhB;AACA,SAAQC,MAAR,QAAqB,gCAArB;AAEA,MAAMC,OAAO,GAAG,CAAC,gDAAD,CAAhB;AACA,MAAMC,OAAO,GAAG,CAAC,gDAAD,CAAhB;AACA,MAAMC,MAAM,GAAG,CAAC,+CAAD,CAAf;AACA,MAAMC,MAAM,GAAG,CAAC,EAAD,EAAK,UAAL,EAAiB,OAAjB,CAAf;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BS,KAD+B,GACvB;AACJC,MAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWD,YADrB;AAEJE,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFjB;AAGJC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG;AAHnB,KADuB;;AAAA,SAS/BC,WAT+B,GAShBC,UAAD,IAAgB;AAC1B,YAAMR,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA9B;AAEAA,MAAAA,UAAU,CAACS,MAAX,CAAkBD,UAAlB,EAA8B,CAA9B;AACA,WAAKE,QAAL,CAAc;AAAEV,QAAAA,UAAU,EAAEA;AAAd,OAAd;AACH,KAd8B;AAAA;;AAgB/BW,EAAAA,MAAM,GAAG;AACL,WACI,0CACI;AAAK,MAAA,SAAS,EAAG,GAAEf,OAAQ,IAAGG,MAAM,CAACa,CAAD,CAAI,EAAxC;AAA2C,MAAA,GAAG,EAAEA,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEjB,MAAZ;AAAoB,MAAA,IAAI,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CADJ,EAEI;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,KAAK,EAAEkB,SAAS,CAACC,KAArD;AAA4D,MAAA,QAAQ,EAAED,SAAS,CAACE,QAAhF;AAA0F,MAAA,SAAS,EAAEhB,MAAM,CAACa,CAAD,CAA3G;AAAgH,MAAA,QAAQ,MAAxH;AAAyH,MAAA,EAAE,EAAEA,CAAC,CAACI,EAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,MAAA,OAAO,EAAE,MAAI,KAAKT,WAAL,CAAiBK,CAAjB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4D,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAElB,CAAZ;AAAe,MAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5D,CAHJ,CADJ,CADJ,CAQI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DJ;AAiEH;;AAlF8B;;AAqFnC,eAAeM,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\nimport {x} from 'react-icons-kit/feather/x';\nimport {mapPin} from 'react-icons-kit/feather/mapPin'\n\nconst Default = ['form-group input-chips default-chips left-icon'];\nconst outline = ['form-group input-chips outline-chips left-icon'];\nconst filled = ['form-group input-chips filled-chips left-icon'];\nconst filter = ['', 'disabled', 'focus'];\n\nclass inputChips extends Component {\n    state = {\n        DivclassName: this.props.DivclassName,\n        LeftIcon: this.state.LeftIcon,\n        inputTitle: this.props.inputValue,\n    \n\n    }\n\n    deleteChips = (chipsIndex) => {\n        const inputChips = this.state.inputChips;\n\n        inputChips.splice(chipsIndex, 1);\n        this.setState({ inputChips: inputChips });\n    }\n\n    render() {\n        return (\n            <>\n                <div className={`${Default} ${filter[i]}`} key={i}> \n                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} autoFocus={filter[i]} readOnly id={i.id} />\n                    <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n                </div>\n            </>\n            // {/* <div className=\"input-chips-wrapper\">\n            //     <div className=\"row\">\n            //         <div className=\"col-md-4\">\n            //             <div className=\"default\">\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${Default} ${filter[i]}`} key={i}> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} autoFocus={filter[i]} readOnly id={i.id} />\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${Default} ${filter[i]}`} key={i} id={chipsList.id}> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled}  readOnly id={i.id} className=\"rounded\"/>\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //             </div>\n            //         </div> \n            //         <div className=\"col-md-4\">\n            //             <div className=\"outline\">\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${outline} ${filter[i]}`} key={i} id=\"outline\"> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${outline} ${filter[i]}`} key={i} id={chipsList.id}> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //             </div>\n            //         </div>\n            //         <div className=\"col-md-4\">\n            //             {this.state.inputChips.map((chipsList, i) => \n            //                 <div className={`${filled} ${filter[i]}`} key={i} id=\"filled\"> \n            //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n            //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                 </div>\n            //             )}\n            //             {this.state.inputChips.map((chipsList, i) => \n            //                 <div className={`${filled} ${filter[i]}`} key={i} id={chipsList.id}> \n            //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n            //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                 </div>\n            //             )}\n            //         </div> \n            //     </div>\n            // </div> */}\n        );\n    }\n}\n\nexport default inputChips;"]},"metadata":{},"sourceType":"module"}