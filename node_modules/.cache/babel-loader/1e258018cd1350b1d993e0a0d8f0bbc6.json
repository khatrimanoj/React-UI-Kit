{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js\";\nimport React, { Component, useState } from 'react';\nimport UserAvatar from '../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml';\nimport AvitarIcon from '../../../images/avitar.png';\nimport more from \"../../../images/More_Vertical.svg\";\nimport { grid } from 'react-icons-kit/feather/grid';\nimport { Icon } from 'react-icons-kit'; // const toggleCollectionProperty = ({\n//     arrCollection, \n//     targetId, \n//     itemIdProp,\n//     itemProp, \n//     itemVal, \n//     itemOppVal,\n//   }) => {\n//     const tplCollection = [...arrCollection];\n//     for(let i = 0, l=tplCollection.length; i < l; i += 1) {\n//       if(tplCollection[i][itemIdProp] === targetId) {\n//         tplCollection[i][itemProp] = itemVal;\n//       } else {\n//         tplCollection[i][itemProp] = itemOppVal;\n//       }\n//     }\n//     return tplCollection;\n//   };\n// const withActiveProp = Component => props => {\n//   return (\n//     props.active && <Component\n//       {...props}\n//     />\n//   );\n// };\n\nconst toggleText = (bool, val1, val2) => {\n  return bool ? val1 : val2;\n};\n\nconst ListComponent = ({\n  data: listData,\n  Component,\n  className\n}) => {\n  if (!listData) {\n    return false;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, Component && listData.map((item, itemIndex) => React.createElement(React.Fragment, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, Component(item, itemIndex))));\n};\n\nconst BoxContainer = ({\n  className,\n  children\n}) => {\n  return React.createElement(\"div\", {\n    class: `${className ? className : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, children);\n};\n\nconst TextAndButton = ({\n  className,\n  btnState,\n  brandName,\n  text,\n  handleClick\n}) => {\n  function BrandName(props) {\n    if (props.active == true) {\n      return React.createElement(\"h1\", {\n        className: `${toggleText(className, className, '')}--text`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, text);\n    } else {\n      return null;\n    }\n  }\n\n  let [Status = \"online\", setStatus] = useState('online');\n\n  let selectStatus = e => {\n    setStatus(e.target.value);\n  };\n\n  console.log(Status);\n  return React.createElement(\"div\", {\n    className: `${toggleText(className, className, '')}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    onClick: handleClick,\n    title: \"Benjamin Parker\",\n    subtitle: React.createElement(\"span\", {\n      className: `${Status} status`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: selectStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Online\"), React.createElement(\"option\", {\n      value: \"offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Offline\"), React.createElement(\"option\", {\n      value: \"away\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Away\"), React.createElement(\"option\", {\n      value: \"dnd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Don't disturb\"))),\n    avitar: AvitarIcon,\n    hasRound: true,\n    haslg: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"\",\n    src: AvitarIcon,\n    alt: \"User Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), toggleText(btnState)), React.createElement(\"div\", {\n    className: \"more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: more,\n    alt: \"More Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(BrandName, {\n    active: brandName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n};\n\nclass LightVersion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sideNav: {\n        active: true\n      },\n      pages: [{\n        name: 'Dashboard',\n        title: 'Dashboard',\n        itemIcon: grid,\n        active: true // items: [\n        //   {\n        //     name: 'item11',\n        //     active: true,\n        //   },\n        //   {\n        //     name: 'item12',\n        //     active: false,\n        //   },\n        //   {\n        //     name: 'item13',\n        //     active: false,\n        //   },\n        // ],\n\n      }, {\n        name: 'People',\n        title: 'People',\n        active: false // items: [\n        //   {\n        //     name: 'item21',\n        //     active: true,\n        //   },\n        //   {\n        //     name: 'item22',\n        //     active: false,\n        //   },\n        //   {\n        //     name: 'item23',\n        //     active: false,\n        //   },\n        // ],\n\n      }, {\n        name: 'Favorites',\n        title: 'Favorites',\n        active: false // items: [\n        //   {\n        //     name: 'item31',\n        //     active: true,\n        //   },\n        //   {\n        //     name: 'item32',\n        //     active: false,\n        //   },\n        //   {\n        //     name: 'item33',\n        //     active: false,\n        //   },\n        // ],\n\n      }, {\n        name: 'Updates',\n        title: 'Updates'\n      }, {\n        name: 'Uploads',\n        title: 'Uploads'\n      }, {\n        name: 'Settings',\n        title: 'Settings'\n      }]\n    };\n    this.toggleSideNav = this.toggleSideNav.bind(this);\n    this.togglePages = this.togglePages.bind(this);\n  }\n\n  toggleSideNav() {\n    const {\n      sideNav\n    } = this.state;\n    sideNav.active = !this.state.sideNav.active;\n    this.setState({\n      sideNav\n    });\n  } // togglePages(collection, collTargetId, subpageIndex) {\n  //   let pages = '';\n  //   if (typeof subpageIndex !== 'number' && !subpageIndex) {\n  //     pages = toggleCollectionProperty ({\n  //       arrCollection: collection, \n  //       targetId: collTargetId, \n  //       itemIdProp: 'name',\n  //       itemProp: 'active', \n  //       itemVal: true, \n  //       itemOppVal: false,\n  //     });\n  //   } else {\n  //     const subpages = toggleCollectionProperty ({\n  //       arrCollection: collection, \n  //       targetId: collTargetId, \n  //       itemIdProp: 'name',\n  //       itemProp: 'active', \n  //       itemVal: true, \n  //       itemOppVal: false,\n  //     });\n  //     pages = this.state.pages;\n  //     pages[subpageIndex].items = subpages;   \n  //   }\n  //   this.setState({ pages });\n  // }\n\n\n  render() {\n    const {\n      icon,\n      Lefticon,\n      Righticon\n    } = this.props;\n\n    function Lefticons(props) {\n      if (props.active == true) {\n        return React.createElement(\"span\", {\n          className: \"lefticon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, icon);\n      } else {\n        return null;\n      }\n    }\n\n    function Righticons(props) {\n      if (props.active == true) {\n        return React.createElement(\"span\", {\n          className: \"righticon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, icon);\n      } else {\n        return null;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(BoxContainer, {\n      className: `sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(TextAndButton, {\n      className: \"sidebar-head\",\n      btnState: this.state.sideNav.active,\n      handleClick: this.toggleSideNav,\n      text: \"Brand Name\",\n      brandName: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(ListComponent, {\n      data: this.state.pages,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `menu-item ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#/\",\n        onClick: () => this.togglePages(this.state.pages, item.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, item.title), item.items && React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(ListComponent, {\n        data: item.items,\n        Component: subitem => React.createElement(\"li\", {\n          className: `${toggleText(subitem.active, 'active', '')}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#/\",\n          onClick: () => this.togglePages(item.items, subitem.name, itemIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, subitem.name)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default LightVersion;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js"],"names":["React","Component","useState","UserAvatar","AvitarIcon","grid","Icon","toggleText","bool","val1","val2","ListComponent","data","listData","className","map","item","itemIndex","id","BoxContainer","children","TextAndButton","btnState","brandName","text","handleClick","BrandName","props","active","Status","setStatus","selectStatus","e","target","value","console","log","more","LightVersion","constructor","state","sideNav","pages","name","title","itemIcon","toggleSideNav","bind","togglePages","setState","render","icon","Lefticon","Righticon","Lefticons","Righticons","items","subitem"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport UserAvatar from '../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml'\nimport AvitarIcon from '../../../images/avitar.png';\nimport more from '../../../images/More_Vertical.svg';\nimport {grid} from 'react-icons-kit/feather/grid';\nimport { Icon } from 'react-icons-kit';\n\n// const toggleCollectionProperty = ({\n//     arrCollection, \n//     targetId, \n//     itemIdProp,\n//     itemProp, \n//     itemVal, \n//     itemOppVal,\n//   }) => {\n//     const tplCollection = [...arrCollection];\n//     for(let i = 0, l=tplCollection.length; i < l; i += 1) {\n//       if(tplCollection[i][itemIdProp] === targetId) {\n//         tplCollection[i][itemProp] = itemVal;\n//       } else {\n//         tplCollection[i][itemProp] = itemOppVal;\n//       }\n//     }\n    \n//     return tplCollection;\n//   };\n  \n  \n  // const withActiveProp = Component => props => {\n  //   return (\n  //     props.active && <Component\n  //       {...props}\n  //     />\n  //   );\n  // };\n    \n  const toggleText = (bool, val1, val2) => {\n    return bool ? val1 : val2;\n  };\n  \n  \n  const ListComponent = ({ data: listData, Component, className }) => {\n  \n    if (!listData) {\n  \n      return false;\n  \n    }\n  \n    return (\n      <React.Fragment>\n        {\n          \n          Component && listData.map((item, itemIndex) => (\n            <React.Fragment key={item.id}>\n              { Component(item, itemIndex) }\n            </React.Fragment>\n          ))\n        }\n      </React.Fragment>\n    );\n  \n  };\n  \n  \n  const BoxContainer = ({ className, children }) => {\n    return (\n      <div class={`${className?className:''}`}>\n        { children }\n      </div>\n    );\n  };\n  \n  const TextAndButton = ({ className, btnState, brandName, text, handleClick }) => {\n    function BrandName(props){\n      if(props.active == true){\n      return <h1 className={`${toggleText(className, className, '')}--text`}>{ text }</h1>\n      \n        }\n        else{\n          return null;\n        }\n    }\n    \n    let [Status=\"online\", setStatus] = useState('online');\n    let selectStatus = (e) => {\n      setStatus(e.target.value)\n    }\n    console.log(Status);\n    return (\n      <div className={`${toggleText(className, className, '')}`}>\n        <UserAvatar\n          onClick={handleClick}\n          title=\"Benjamin Parker\"  \n          subtitle={\n            <span className={`${Status} status`}>\n              <select onChange={selectStatus}>\n                <option value=\"online\">Online</option>\n                <option value=\"offline\">Offline</option>\n                <option value=\"away\">Away</option>\n                <option value=\"dnd\">Don't disturb</option>\n              </select>\n            </span>\n          }  \n          avitar={AvitarIcon} hasRound haslg> \n          <img className=\"\" src={AvitarIcon} alt=\"User Avatar\"/>\n          {\n            toggleText(btnState) \n          }\n        </UserAvatar> \n        <div className=\"more\">\n          <img src={more} alt=\"More Icon\"/>\n          {/* <button onClick={handleClick}>\n            {\n              toggleText(btnState, 'Close', 'Open') \n            }\n          </button> */}\n        </div>\n        <BrandName active={brandName} />\n        {/* <button onClick={handleClick}>\n          {\n            toggleText(btnState, 'Close', 'Open') \n          }\n        </button> */}\n      </div>\n    );\n  };\n  \nclass LightVersion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n          sideNav: {\n            active: true,\n          },\n          pages: [\n            {\n              name: 'Dashboard',\n              title: 'Dashboard',\n              itemIcon: grid,\n              active: true,\n              // items: [\n              //   {\n              //     name: 'item11',\n              //     active: true,\n              //   },\n              //   {\n              //     name: 'item12',\n              //     active: false,\n              //   },\n              //   {\n              //     name: 'item13',\n              //     active: false,\n              //   },\n              // ],\n            },\n            {\n              name: 'People',\n              title: 'People',\n              active: false,\n              // items: [\n              //   {\n              //     name: 'item21',\n              //     active: true,\n              //   },\n              //   {\n              //     name: 'item22',\n              //     active: false,\n              //   },\n              //   {\n              //     name: 'item23',\n              //     active: false,\n              //   },\n              // ],\n            },\n            {\n              name: 'Favorites',\n              title: 'Favorites',\n              active: false,\n              // items: [\n              //   {\n              //     name: 'item31',\n              //     active: true,\n              //   },\n              //   {\n              //     name: 'item32',\n              //     active: false,\n              //   },\n              //   {\n              //     name: 'item33',\n              //     active: false,\n              //   },\n              // ],\n            },\n            {\n              name: 'Updates',\n              title: 'Updates',\n            },\n            {\n              name: 'Uploads',\n              title: 'Uploads',\n            },\n            {\n              name: 'Settings',\n              title: 'Settings',\n            }\n          ],  \n        }; \n        \n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.togglePages = this.togglePages.bind(this);\n      }\n      \n      \n      toggleSideNav() {\n        const { sideNav } = this.state;\n        sideNav.active = !this.state.sideNav.active\n        this.setState({ sideNav });\n      }\n      \n \n      // togglePages(collection, collTargetId, subpageIndex) {\n      //   let pages = '';\n      //   if (typeof subpageIndex !== 'number' && !subpageIndex) {\n      //     pages = toggleCollectionProperty ({\n      //       arrCollection: collection, \n      //       targetId: collTargetId, \n      //       itemIdProp: 'name',\n      //       itemProp: 'active', \n      //       itemVal: true, \n      //       itemOppVal: false,\n      //     });\n      //   } else {\n      //     const subpages = toggleCollectionProperty ({\n      //       arrCollection: collection, \n      //       targetId: collTargetId, \n      //       itemIdProp: 'name',\n      //       itemProp: 'active', \n      //       itemVal: true, \n      //       itemOppVal: false,\n      //     });\n      //     pages = this.state.pages;\n      //     pages[subpageIndex].items = subpages;   \n      //   }\n        \n      //   this.setState({ pages });\n      // }\n    render() {\n      const {icon, Lefticon, Righticon} = this.props;\n      function Lefticons(props){\n        if(props.active == true){\n              return <span className=\"lefticon\">\n                            {icon}\n                        </span>\n          }\n          else{\n            return null;\n          }\n  \n      }\n      function Righticons(props){\n        if(props.active == true){\n              return <span className=\"righticon\">\n                            {icon}\n                        </span>\n          }\n          else{\n            return null;\n          }\n  \n      }\n        return (\n            <div className=\"sidebar\">\n                <BoxContainer className={`sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`}>\n                    {/* Brand and sidebar toggle button */}\n                    <TextAndButton\n                        className=\"sidebar-head\"\n                        btnState={this.state.sideNav.active}\n                        handleClick={this.toggleSideNav}  \n                        text=\"Brand Name\"\n                        brandName={false}\n\n                    />\n                    <div className=\"sidebar-content\">\n                      <ListComponent\n                        data={this.state.pages}\n                        Component={\n                          (item, itemIndex)=>(\n                            <div className={`menu-item ${toggleText(item.active, 'active', '')}`}>\n                              <a href=\"#/\"\n                                  onClick={()=>this.togglePages(this.state.pages, item.name)}\n                              >{ item.title }</a>\n                              {\n                                  item.items &&\n                                  <ul>\n                                      <ListComponent\n                                        data={item.items}\n                                        Component={\n                                            (subitem)=>(\n                                            <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                                <a href=\"#/\"\n                                                onClick={()=>this.togglePages(item.items, subitem.name, itemIndex)}\n                                                >{ subitem.name }</a>\n                                            </li>\n                                            )\n                                        }\n                                      />\n                                  </ul>\n                              }\n                            </div>\n                          )\n                        }\n                      />\n                    </div>\n                </BoxContainer>\n            </div>\n        );\n    }\n}\n\nexport default LightVersion;"]},"metadata":{},"sourceType":"module"}