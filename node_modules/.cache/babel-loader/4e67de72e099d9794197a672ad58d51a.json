{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion/UserSidebarcopy.js\";\nimport React, { Component, useState } from 'react';\nimport UserAvatar from '../../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml';\nimport AvitarIcon from '../../../../images/avitar.png';\nimport more from \"../../../../images/More_Vertical.svg\";\nimport Tags from '../../../ChipsTags/Types/Tags';\n\nconst toggleCollectionProperty = ({\n  arrCollection,\n  targetId,\n  itemIdProp,\n  itemProp,\n  itemVal,\n  itemOppVal\n}) => {\n  const tplCollection = [...arrCollection];\n\n  for (let i = 0, l = tplCollection.length; i < l; i += 1) {\n    if (tplCollection[i][itemIdProp] === targetId) {\n      tplCollection[i][itemProp] = itemVal;\n    } else {\n      tplCollection[i][itemProp] = itemOppVal;\n    }\n  }\n\n  return tplCollection;\n};\n\nconst withActiveProp = Component => props => {\n  return props.active && React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nconst toggleText = (bool, val1, val2) => {\n  return bool ? val1 : val2;\n};\n\nconst ListComponent = ({\n  data: listData,\n  Component,\n  className\n}) => {\n  if (!listData) {\n    return false;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, Component && listData.map((item, itemIndex) => React.createElement(React.Fragment, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, Component(item, itemIndex))));\n};\n\nconst BoxContainer = ({\n  className,\n  children\n}) => {\n  return React.createElement(\"div\", {\n    className: `${className ? className : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, children);\n};\n\nconst TextAndButton = ({\n  className,\n  btnState,\n  brandName,\n  text,\n  handleClick,\n  logo\n}) => {\n  const BrandSection = props => {\n    if (props.BrandActive === true) {\n      return React.createElement(\"img\", {\n        src: logo,\n        height: \"40px\",\n        width: \"40px\",\n        alt: \"toolbar-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(UserAvatar, {\n        title: \"Benjamin Parker\",\n        subtitle: React.createElement(\"span\", {\n          className: `${Status} status`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          onChange: selectStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"online\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Online\"), React.createElement(\"option\", {\n          value: \"offline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Offline\"), React.createElement(\"option\", {\n          value: \"away\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Away\"), React.createElement(\"option\", {\n          value: \"dnd\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Don't disturb\"))),\n        avitar: AvitarIcon,\n        hasRound: true,\n        haslg: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"\",\n        src: AvitarIcon,\n        alt: \"User Avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n  };\n\n  function BrandName(props) {\n    if (props.active == true) {\n      return React.createElement(\"h1\", {\n        className: `${toggleText(className, className, '')}--text`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, text);\n    } else {\n      return null;\n    }\n  }\n\n  let [Status, setStatus] = useState('online');\n\n  let selectStatus = e => {\n    setStatus(e.target.value);\n  }; // console.log(Status);\n\n\n  return React.createElement(\"div\", {\n    className: `${toggleText(className, className, '')}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    onClick: handleClick,\n    title: \"Benjamin Parker\",\n    subtitle: React.createElement(\"span\", {\n      className: `${Status} status`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: selectStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Online\"), React.createElement(\"option\", {\n      value: \"offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Offline\"), React.createElement(\"option\", {\n      value: \"away\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Away\"), React.createElement(\"option\", {\n      value: \"dnd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Don't disturb\"))),\n    avitar: AvitarIcon,\n    hasRound: true,\n    haslg: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"\",\n    src: AvitarIcon,\n    alt: \"User Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), toggleText(btnState)), React.createElement(\"div\", {\n    className: \"more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: more,\n    alt: \"More Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(BrandName, {\n    active: brandName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n};\n\nclass UserSidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sideNav: {\n        active: true\n      },\n      navLinks: this.props.navLinks,\n      otherLinks: this.props.otherLinks,\n      badgeBg: this.props.badgeStyle,\n      badgeStyle: this.props.badgeStyle\n    };\n    this.toggleSideNav = this.toggleSideNav.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.toggleMenu2 = this.toggleMenu2.bind(this);\n  }\n\n  toggleSideNav() {\n    const {\n      sideNav\n    } = this.state;\n    sideNav.active = !this.state.sideNav.active;\n    this.setState({\n      sideNav\n    });\n  }\n\n  toggleMenu(collection, collTargetId, submenuIndex) {\n    let Menu = '';\n\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n    } else {\n      const submenu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;\n    }\n\n    this.setState({\n      Menu\n    });\n  }\n\n  toggleMenu2(collection, collTargetId, submenuIndex) {\n    let Menu = '';\n\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n    } else {\n      const submenu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;\n    }\n\n    this.setState({\n      Menu\n    });\n  }\n\n  render() {\n    const Badges = props => {\n      if (props.BadgeActive === true) {\n        return React.createElement(\"span\", {\n          className: \"badge\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(Tags, {\n          DivclassName: \"form-group tag number mb-20\",\n          LabelclassName: `${props.badgeBg}`,\n          Title: props.badgeText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }));\n      } else {\n        return null;\n      }\n    };\n\n    const MenuIcon = props => {\n      if (props.iconActive === true) {\n        // return <Icon Icon={props.menuIcon} />\n        return React.createElement(\"span\", {\n          className: \"menu-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, props.menuIcon);\n      } else {\n        return null;\n      }\n    };\n\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(BoxContainer, {\n      className: `sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(TextAndButton, {\n      className: \"sidebar-head\",\n      btnState: this.state.sideNav.active,\n      handleClick: this.toggleSideNav,\n      text: \"Brand Name\",\n      brandName: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(ListComponent, {\n      data: this.state.navLinks,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `menu-item ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#/\",\n        onClick: () => this.toggleMenu(this.state.navLinks, item.text),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        iconActive: item.iconActive,\n        menuIcon: item.menuIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), item.text, React.createElement(Badges, {\n        BadgeActive: item.BadgeActive,\n        badgeText: item.badgeText,\n        badgeBg: item.badgeBg,\n        badgeStyle: item.badgeStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      })), item.items && React.createElement(\"ul\", {\n        className: \"sub-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(ListComponent, {\n        data: item.items,\n        Component: subitem => React.createElement(\"li\", {\n          className: `${toggleText(subitem.active, 'active', '')}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#/\",\n          onClick: () => this.toggleMenu(item.items, subitem.text, itemIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, subitem.text)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(ListComponent, {\n      data: this.state.otherLinks,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `my-collection ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sub-title\",\n        onClick: () => this.toggleMenu2(this.state.otherLinks, item.text),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, item.text), item.items && React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(ListComponent, {\n        data: item.items,\n        Component: subitem => React.createElement(\"li\", {\n          className: `${toggleText(subitem.active, 'active', '')}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#/\",\n          onClick: () => this.toggleMenu2(item.items, subitem.text, itemIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, subitem.text)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UserSidebar;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion/UserSidebarcopy.js"],"names":["React","Component","useState","UserAvatar","AvitarIcon","Tags","toggleCollectionProperty","arrCollection","targetId","itemIdProp","itemProp","itemVal","itemOppVal","tplCollection","i","l","length","withActiveProp","props","active","toggleText","bool","val1","val2","ListComponent","data","listData","className","map","item","itemIndex","id","BoxContainer","children","TextAndButton","btnState","brandName","text","handleClick","logo","BrandSection","BrandActive","Status","selectStatus","BrandName","setStatus","e","target","value","more","UserSidebar","constructor","state","sideNav","navLinks","otherLinks","badgeBg","badgeStyle","toggleSideNav","bind","toggleMenu","toggleMenu2","setState","collection","collTargetId","submenuIndex","Menu","submenu","pages","items","render","Badges","BadgeActive","badgeText","MenuIcon","iconActive","menuIcon","subitem"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport UserAvatar from '../../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml';\nimport AvitarIcon from '../../../../images/avitar.png';\nimport more from '../../../../images/More_Vertical.svg';\nimport Tags from '../../../ChipsTags/Types/Tags'\n\nconst toggleCollectionProperty = ({\n  arrCollection, \n  targetId, \n  itemIdProp,\n  itemProp, \n  itemVal, \n  itemOppVal,\n}) => {\n  const tplCollection = [...arrCollection];\n  for(let i = 0, l=tplCollection.length; i < l; i += 1) {\n    if(tplCollection[i][itemIdProp] === targetId) {\n      tplCollection[i][itemProp] = itemVal;\n    } else {\n      tplCollection[i][itemProp] = itemOppVal;\n    }\n  }\n  \n  return tplCollection;\n};\n  \n  \nconst withActiveProp = Component => props => {\n  return (\n    props.active && <Component\n      {...props}\n    />\n  );\n};\n  \nconst toggleText = (bool, val1, val2) => {\n  return bool ? val1 : val2;\n};\n  \n  \nconst ListComponent = ({ data: listData, Component, className }) => {\n\n  if (!listData) {\n\n    return false;\n\n  }\n\n  return (\n    <React.Fragment>\n      {\n        \n        Component && listData.map((item, itemIndex) => (\n          <React.Fragment key={item.id}>\n            { Component(item, itemIndex) }\n          </React.Fragment>\n        ))\n      }\n    </React.Fragment>\n  );\n\n};\n  \n  \nconst BoxContainer = ({ className, children }) => {\n  return (\n    <div className={`${className?className:''}`}>\n      { children }\n    </div>\n  );\n};\n  \nconst TextAndButton = ({ className, btnState, brandName, text, handleClick, logo }) => {\n  const BrandSection = (props) => {\n    if(props.BrandActive === true) {\n        return  <img src={ logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\n    }else {\n        return <UserAvatar\n        title=\"Benjamin Parker\"  \n        subtitle={\n            <span className={`${Status} status`}>\n                <select onChange={selectStatus}>\n                    <option value=\"online\">Online</option>\n                    <option value=\"offline\">Offline</option>\n                    <option value=\"away\">Away</option>\n                    <option value=\"dnd\">Don't disturb</option>\n                </select>\n            </span>\n        }  \n        avitar={AvitarIcon} hasRound haslg> \n        <img className=\"\" src={AvitarIcon} alt=\"User Avatar\"/>\n      </UserAvatar> \n    }\n}\n  function BrandName(props){\n    if(props.active == true){\n    return <h1 className={`${toggleText(className, className, '')}--text`}>{ text }</h1>\n    \n      }\n      else{\n        return null;\n      }\n  }\n  \n  let [Status, setStatus] = useState('online');\n  let selectStatus = (e) => {\n    setStatus(e.target.value)\n  }\n  // console.log(Status);\n  return (\n    <div className={`${toggleText(className, className, '')}`}>\n      <UserAvatar\n        onClick={handleClick}\n        title=\"Benjamin Parker\"  \n        subtitle={\n          <span className={`${Status} status`}>\n            <select onChange={selectStatus}>\n              <option value=\"online\">Online</option>\n              <option value=\"offline\">Offline</option>\n              <option value=\"away\">Away</option>\n              <option value=\"dnd\">Don't disturb</option>\n            </select>\n          </span>\n        }  \n        avitar={AvitarIcon} hasRound haslg> \n        <img className=\"\" src={AvitarIcon} alt=\"User Avatar\"/>\n        {\n          toggleText(btnState) \n        }\n      </UserAvatar> \n      <div className=\"more\">\n        <img src={more} alt=\"More Icon\"/>\n        {/* <button onClick={handleClick}>\n          {\n            toggleText(btnState, 'Close', 'Open') \n          }\n        </button> */}\n      </div>\n      <BrandName active={brandName} />\n      {/* <button onClick={handleClick}>\n        {\n          toggleText(btnState, 'Close', 'Open') \n        }\n      </button> */}\n    </div>\n  );\n};\nclass UserSidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      sideNav: {\n        active: true,\n      },\n      navLinks: this.props.navLinks,\n      otherLinks: this.props.otherLinks,\n      badgeBg: this.props.badgeStyle,\n      badgeStyle: this.props.badgeStyle\n    }; \n    this.toggleSideNav = this.toggleSideNav.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.toggleMenu2 = this.toggleMenu2.bind(this);\n  }\n      \n      \n  toggleSideNav() {\n    const { sideNav } = this.state;\n    sideNav.active = !this.state.sideNav.active\n    this.setState({ sideNav });\n  }\n      \n \n  toggleMenu(collection, collTargetId, submenuIndex) {\n    let Menu = '';\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n    } else {\n      const submenu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;   \n    }\n    \n    this.setState({ Menu });\n  }\n  toggleMenu2 (collection, collTargetId, submenuIndex) {\n    let Menu = '';\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n    } else {\n      const submenu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;   \n    }\n    \n    this.setState({ Menu });\n  }\n  \n  render() {\n    const Badges = (props) => {\n      if(props.BadgeActive === true) {\n          return <span className=\"badge\"><Tags DivclassName=\"form-group tag number mb-20\" LabelclassName={`${props.badgeBg}`} Title={props.badgeText} /></span>\n      }else {\n          return null\n      }\n    }\n    const MenuIcon = (props) => {\n        if(props.iconActive === true) {\n            // return <Icon Icon={props.menuIcon} />\n            return <span className=\"menu-icon\">{props.menuIcon}</span>\n        }else {\n            return null\n        }\n    }\n    return (\n      <div className=\"sidebar\">\n        <BoxContainer className={`sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`}>\n            {/* Brand and sidebar toggle button */}\n            <TextAndButton\n              className=\"sidebar-head\"\n              btnState={this.state.sideNav.active}\n              handleClick={this.toggleSideNav}  \n              text=\"Brand Name\"\n              brandName={false}\n            />\n            <div className=\"sidebar-content\">\n              <ListComponent\n                data={this.state.navLinks}\n                Component={\n                  (item, itemIndex)=>(\n                    <div className={`menu-item ${toggleText(item.active, 'active', '')}`}>\n                      <a href=\"#/\"\n                          onClick={()=>this.toggleMenu(this.state.navLinks, item.text)}\n                      >\n                      <MenuIcon iconActive={item.iconActive} menuIcon={item.menuIcon}></MenuIcon>\n                      { item.text } \n                      <Badges BadgeActive={item.BadgeActive} badgeText={item.badgeText} badgeBg={item.badgeBg} badgeStyle={item.badgeStyle}></Badges>\n                      </a>\n                        {\n                          item.items &&\n                          <ul className=\"sub-menu\">\n                              <ListComponent\n                                data={item.items}\n                                Component={\n                                    (subitem)=>(\n                                    <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                        <a href=\"#/\"\n                                        onClick={()=>this.toggleMenu(item.items, subitem.text, itemIndex)}\n                                        >{ subitem.text }</a>\n                                    </li>\n                                    )\n                                }\n                              />\n                          </ul>\n                      }\n                    </div>\n                  )\n                }\n              />\n              <ListComponent\n                data={this.state.otherLinks}\n                Component={\n                  (item, itemIndex)=>(\n                    <div className={`my-collection ${toggleText(item.active, 'active', '')}`}>\n                      <span className=\"sub-title\" onClick={()=>this.toggleMenu2(this.state.otherLinks, item.text)}>{ item.text }</span>\n                        {\n                          item.items &&\n                          <ul>\n                              <ListComponent\n                                data={item.items}\n                                Component={\n                                    (subitem)=>(\n                                    <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                        <a href=\"#/\"\n                                        onClick={()=>this.toggleMenu2(item.items, subitem.text, itemIndex)}\n                                        >{ subitem.text }</a>\n                                    </li>\n                                    )\n                                }\n                              />\n                          </ul>\n                      }\n                    </div>\n                  )\n                }\n              />\n            </div>\n        </BoxContainer>\n      </div>\n    );\n  }\n}\n\nexport default UserSidebar;"]},"metadata":{},"sourceType":"module"}