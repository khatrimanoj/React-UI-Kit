{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownew/Dropdown.js\";\nimport React, { Component } from 'react';\nimport DropDownItems from './dropdownitem';\nimport PropTypes from 'prop-types';\n\nclass Dropdown extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: false\n    };\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.handleSelection = this.handleSelection.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n    this.renderSelectionCont = this.renderSelectionCont.bind(this);\n  }\n\n  toggleDropDown(action, e) {\n    switch (action) {\n      case 'close':\n        this.setState({\n          active: false\n        });\n        document.removeEventListener('click', this.handleDocumentClick);\n        break;\n\n      default:\n        this.setState({\n          active: true\n        });\n        document.addEventListener('click', this.handleDocumentClick);\n        break;\n    }\n  }\n\n  handleSelection(item) {\n    this.props.onClick(item);\n    this.toggleDropDown('close');\n  }\n\n  handleDocumentClick() {\n    this.toggleDropDown('close');\n  }\n\n  handleOutsideClick(e) {\n    e.nativeEvent.stopImmediatePropagation();\n  }\n\n  renderSelectionCont() {\n    if (!this.state.active) return;\n    return React.createElement(DropDownItems, {\n      options: this.props.options,\n      onClick: this.handleSelection,\n      displayField: this.props.displayField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    let wrapperClassName = 'bd-dropdown' + (this.props.className ? ' ' + this.props.className : '');\n    let caretClass = 'fa fa-chevron-down';\n    let toggle = 'open';\n\n    if (this.state.active) {\n      caretClass = 'fa fa-chevron-up';\n      wrapperClassName = wrapperClassName + ' __active';\n      toggle = 'close';\n    }\n\n    return React.createElement(\"div\", {\n      className: wrapperClassName,\n      onClick: this.handleOutsideClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"__control\",\n      onClick: this.toggleDropDown.bind(this, toggle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.value), React.createElement(\"i\", {\n      className: caretClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), this.renderSelectionCont());\n  }\n\n}\n\nDropdown.propTypes = {\n  className: PropTypes.string\n};\nDropdown.defaultProps = {\n  className: ''\n};\nexport default Dropdown;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownew/Dropdown.js"],"names":["React","Component","DropDownItems","PropTypes","Dropdown","constructor","args","state","active","toggleDropDown","bind","handleSelection","handleOutsideClick","handleDocumentClick","renderSelectionCont","action","e","setState","document","removeEventListener","addEventListener","item","props","onClick","nativeEvent","stopImmediatePropagation","options","displayField","render","wrapperClassName","className","caretClass","toggle","value","propTypes","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAO7BI,EAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACjB,UAAM,GAAGA,IAAT;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKG,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKI,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBJ,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AACDD,EAAAA,cAAc,CAACM,MAAD,EAASC,CAAT,EAAY;AACtB,YAAQD,MAAR;AACI,WAAK,OAAL;AACI,aAAKE,QAAL,CAAc;AACVT,UAAAA,MAAM,EAAE;AADE,SAAd;AAGAU,QAAAA,QAAQ,CAACC,mBAAT,CAA6B,OAA7B,EAAsC,KAAKN,mBAA3C;AACA;;AACJ;AACI,aAAKI,QAAL,CAAc;AACVT,UAAAA,MAAM,EAAE;AADE,SAAd;AAGAU,QAAAA,QAAQ,CAACE,gBAAT,CAA0B,OAA1B,EAAmC,KAAKP,mBAAxC;AACA;AAZR;AAcH;;AACDF,EAAAA,eAAe,CAACU,IAAD,EAAO;AAClB,SAAKC,KAAL,CAAWC,OAAX,CAAmBF,IAAnB;AACA,SAAKZ,cAAL,CAAoB,OAApB;AACH;;AACDI,EAAAA,mBAAmB,GAAG;AAClB,SAAKJ,cAAL,CAAoB,OAApB;AACH;;AACDG,EAAAA,kBAAkB,CAACI,CAAD,EAAI;AAClBA,IAAAA,CAAC,CAACQ,WAAF,CAAcC,wBAAd;AACH;;AACDX,EAAAA,mBAAmB,GAAG;AAClB,QAAI,CAAC,KAAKP,KAAL,CAAWC,MAAhB,EAAwB;AAExB,WAAO,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAE,KAAKc,KAAL,CAAWI,OAAnC;AAA4C,MAAA,OAAO,EAAE,KAAKf,eAA1D;AAA2E,MAAA,YAAY,EAAE,KAAKW,KAAL,CAAWK,YAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,gBAAgB,GAAG,iBAAiB,KAAKP,KAAL,CAAWQ,SAAX,GAAuB,MAAM,KAAKR,KAAL,CAAWQ,SAAxC,GAAoD,EAArE,CAAvB;AACA,QAAIC,UAAU,GAAG,oBAAjB;AACA,QAAIC,MAAM,GAAG,MAAb;;AACA,QAAI,KAAKzB,KAAL,CAAWC,MAAf,EAAuB;AACnBuB,MAAAA,UAAU,GAAG,kBAAb;AACAF,MAAAA,gBAAgB,GAAGA,gBAAgB,GAAG,WAAtC;AACAG,MAAAA,MAAM,GAAG,OAAT;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAEH,gBAAhB;AAAkC,MAAA,OAAO,EAAE,KAAKjB,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,KAAKH,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,EAA+BsB,MAA/B,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKV,KAAL,CAAWW,KAAjB,CADJ,EAEI;AAAG,MAAA,SAAS,EAAEF,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKK,KAAKjB,mBAAL,EALL,CADJ;AASH;;AArE4B;;AAA3BV,Q,CACK8B,S,GAAY;AACfJ,EAAAA,SAAS,EAAE3B,SAAS,CAACgC;AADN,C;AADjB/B,Q,CAIKgC,Y,GAAe;AAClBN,EAAAA,SAAS,EAAE;AADO,C;AAoE1B,eAAe1B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport DropDownItems from './dropdownitem';\nimport PropTypes from 'prop-types'; \n\nclass Dropdown extends Component {\n    static propTypes = {\n        className: PropTypes.string\n    };\n    static defaultProps = {\n        className: ''\n    };\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n            active: false\n        };\n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.handleDocumentClick = this.handleDocumentClick.bind(this);\n        this.renderSelectionCont = this.renderSelectionCont.bind(this);\n    }\n    toggleDropDown(action, e) {\n        switch (action) {\n            case 'close':\n                this.setState({\n                    active: false\n                });\n                document.removeEventListener('click', this.handleDocumentClick);\n                break;\n            default:\n                this.setState({\n                    active: true\n                });\n                document.addEventListener('click', this.handleDocumentClick);\n                break\n        }\n    }\n    handleSelection(item) {\n        this.props.onClick(item);\n        this.toggleDropDown('close');\n    }\n    handleDocumentClick() {\n        this.toggleDropDown('close');\n    }\n    handleOutsideClick(e) {\n        e.nativeEvent.stopImmediatePropagation();\n    }\n    renderSelectionCont() {\n        if (!this.state.active) return;\n\n        return <DropDownItems options={this.props.options} onClick={this.handleSelection} displayField={this.props.displayField} />;\n    }\n    render() {\n        let wrapperClassName = 'bd-dropdown' + (this.props.className ? ' ' + this.props.className : '');\n        let caretClass = 'fa fa-chevron-down';\n        let toggle = 'open';\n        if (this.state.active) {\n            caretClass = 'fa fa-chevron-up';\n            wrapperClassName = wrapperClassName + ' __active';\n            toggle = 'close';\n        }\n\n        return (\n            <div className={wrapperClassName} onClick={this.handleOutsideClick}>\n                <div className='__control' onClick={this.toggleDropDown.bind(this, toggle)}>\n                    <div>{this.props.value}</div>\n                    <i className={caretClass}></i>\n                </div>\n                {this.renderSelectionCont()}\n            </div>\n        );\n    }\n}\n\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}