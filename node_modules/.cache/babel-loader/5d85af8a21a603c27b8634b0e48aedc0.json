{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion/UserSidebar.js\";\nexport default class NestedDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.shape = {\n      id: Prop.Type.string.isRequired,\n      message: Prop.Type.node.isRequired,\n      link: Prop.Type.string,\n      options: Prop.Type.arrayOf(Prop.Type.shape(NestedDropdown.shape))\n    };\n\n    this.handleDropdownToggle = () => {\n      let nextState = !this.state.showDropdown;\n      this.setState({\n        showDropdown: nextState,\n        selectedIds: []\n      });\n    };\n\n    this.handleDropdownClose = () => {\n      this.setState({\n        showDropdown: false,\n        selectedIds: []\n      });\n    };\n\n    this.handleSelectedId = (selected, depthLevel) => {\n      return () => {\n        const updatedArray = this.state.selectedIds.slice(0);\n        updatedArray[depthLevel] = selected;\n        this.setState({\n          selectedIds: updatedArray\n        });\n      };\n    };\n\n    this.state = {\n      showDropdown: false,\n      selectedIds: []\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.options !== nextProps.options || this.state.showDropdown !== nextState.showDropdown || this.state.selectedIds !== nextState.selectedIds;\n  }\n\n  renderDisplay() {\n    const classes = classNames({\n      'dropdown__display': true,\n      //eslint-disable-line quote-props\n      'dropdown__display--with-caret': this.props.hasCaret\n    }),\n          caret = React.createElement(Icon, {\n      classes: ['dropdown__display-caret'],\n      glyph: iconChevronDown,\n      size: 'small',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.displayText, this.props.hasCaret ? caret : null);\n  }\n\n  renderSubMenu(options, depthLevel = 0) {\n    if (this.state.showDropdown !== true) {\n      return null;\n    }\n\n    const classes = ['dropdown__options'];\n    classes.push(`dropdown__options--${this.props.openDirection}-align`);\n    const menuOptions = options.map(option => {\n      const display = option.link ? React.createElement(\"a\", {\n        href: option.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, option.message) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, option.message),\n            hasOptions = option.options && option.options.length > 0;\n      let subMenu; // only render selected submenu and only if nested options exist\n\n      if (this.state.selectedIds[depthLevel] === option.id && hasOptions) {\n        const newDepthLevel = depthLevel + 1;\n        subMenu = this.renderSubMenu(option.options, newDepthLevel);\n      }\n\n      return React.createElement(\"li\", {\n        key: option.id,\n        onMouseEnter: this.handleSelectedId(option.id, depthLevel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, display, subMenu);\n    });\n    return React.createElement(\"div\", {\n      className: classNames.apply(null, classes),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, menuOptions));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dropdown dropdown--nested\",\n      onClick: this.handleDropdownToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.renderDisplay(), this.renderSubMenu(this.props.options));\n  }\n\n}\nNestedDropdown.displayName = 'NestedDropdown';\nNestedDropdown.propTypes = {\n  openDirection: Prop.Type.enumOf(['left', 'right']),\n  displayText: Prop.Type.node.isRequired,\n  hasCaret: Prop.Type.bool,\n  options: Prop.Type.arrayOf(Prop.Type.shape(NestedDropdown.shape).isRequired).isRequired\n};\nNestedDropdown.defaultProps = {\n  hasCaret: true,\n  openDirection: 'left'\n};","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion/UserSidebar.js"],"names":["NestedDropdown","React","Component","constructor","props","shape","id","Prop","Type","string","isRequired","message","node","link","options","arrayOf","handleDropdownToggle","nextState","state","showDropdown","setState","selectedIds","handleDropdownClose","handleSelectedId","selected","depthLevel","updatedArray","slice","shouldComponentUpdate","nextProps","renderDisplay","classes","classNames","hasCaret","caret","iconChevronDown","displayText","renderSubMenu","push","openDirection","menuOptions","map","option","display","hasOptions","length","subMenu","newDepthLevel","apply","render","displayName","propTypes","enumOf","bool","defaultProps"],"mappings":"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","sourcesContent":["export default class NestedDropdown extends React.Component {\n\n  static displayName = 'NestedDropdown';\n\n  shape = {\n    id: Prop.Type.string.isRequired,\n    message: Prop.Type.node.isRequired,\n    link: Prop.Type.string,\n    options:Prop.Type.arrayOf(\n      Prop.Type.shape(NestedDropdown.shape)\n    )\n  };\n\n  static propTypes = {\n    openDirection: Prop.Type.enumOf(['left', 'right']),\n    displayText: Prop.Type.node.isRequired,\n    hasCaret: Prop.Type.bool,\n    options: Prop.Type.arrayOf(\n      Prop.Type.shape(NestedDropdown.shape).isRequired\n    ).isRequired\n  };\n\n  static defaultProps = {\n    hasCaret: true,\n    openDirection: 'left'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDropdown: false,\n      selectedIds: []\n    };\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.options !== nextProps.options\n      || this.state.showDropdown !== nextState.showDropdown\n      || this.state.selectedIds !== nextState.selectedIds;\n  }\n\n  handleDropdownToggle = () => {\n    let nextState = !this.state.showDropdown;\n\n    this.setState({\n      showDropdown: nextState,\n      selectedIds: []\n    });\n  };\n\n  handleDropdownClose = () => {\n    this.setState({\n      showDropdown: false,\n      selectedIds: []\n    });\n  };\n\n  handleSelectedId = (selected, depthLevel) => {\n    return () => {\n      const updatedArray = this.state.selectedIds.slice(0);\n\n      updatedArray[depthLevel] = selected;\n\n      this.setState({\n        selectedIds: updatedArray\n      });\n    };\n  };\n\n  renderDisplay() {\n    const classes = classNames({\n            'dropdown__display': true, //eslint-disable-line quote-props\n            'dropdown__display--with-caret': this.props.hasCaret\n          }),\n          caret = (\n            <Icon\n              classes={ ['dropdown__display-caret'] }\n              glyph={ iconChevronDown }\n              size={ 'small' }\n            />\n          );\n\n    return (\n      <div className={ classes }>\n        { this.props.displayText }\n        { this.props.hasCaret ? caret : null }\n      </div>\n    );\n  }\n\n  renderSubMenu(options, depthLevel = 0) {\n    if (this.state.showDropdown !== true) {\n      return null;\n    }\n\n    const classes = ['dropdown__options'];\n\n    classes.push(`dropdown__options--${this.props.openDirection}-align`);\n\n    const menuOptions = options.map(option => {\n      const display   = (option.link\n              ? <a href={ option.link }>{ option.message }</a>\n              : <span>{ option.message }</span>\n            ),\n            hasOptions = (option.options\n              && option.options.length > 0\n            );\n\n      let subMenu;\n\n      // only render selected submenu and only if nested options exist\n      if ((this.state.selectedIds[depthLevel] === option.id)\n        && hasOptions\n      ) {\n        const newDepthLevel = depthLevel + 1;\n\n        subMenu = this.renderSubMenu(option.options, newDepthLevel);\n      }\n\n      return (\n        <li\n          key={ option.id }\n          onMouseEnter={ this.handleSelectedId(option.id, depthLevel) }\n        >\n          { display }\n          { subMenu }\n        </li>\n      );\n    });\n\n    return (\n      <div className={ classNames.apply(null, classes) }>\n        <ul>\n          { menuOptions }\n        </ul>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        className='dropdown dropdown--nested'\n        onClick={ this.handleDropdownToggle }\n      >\n        { this.renderDisplay() }\n        { this.renderSubMenu(this.props.options) }\n      </div>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}