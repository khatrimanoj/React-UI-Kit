{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js\";\nimport React, { Component, useState } from 'react';\nconst [navOpen, setNavOpen] = useState(0);\nconst [hoverIndex, setHoverIndex] = useState(-1);\n\nclass LightVersion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      background: this.props.background,\n      hoverBackground: this.props.hoverBackground,\n      linkColor: this.props.linkColor,\n      navLinks: this.props.navLinks,\n      logo: this.props.logo,\n      iconActive: this.props.iconActive,\n      menuIcon: this.props.menuIcon,\n      BadgeActive: this.props.BadgeActive,\n      badgeText: this.props.badgeText\n    };\n  }\n\n  render() {\n    const Badges = props => {\n      if (props.BadgeActive === true) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, props.badgeText);\n      } else {\n        return null;\n      }\n    };\n\n    return React.createElement(\"nav\", {\n      className: \"responsive-toolbar sidebar\",\n      style: {\n        background: this.state.background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      style: {\n        background: this.state.background\n      },\n      className: this.state.navOpen ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      className: \"image-logo\",\n      onClick: () => {\n        setNavOpen(!navOpen);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.logo,\n      height: \"40px\",\n      width: \"40px\",\n      alt: \"toolbar-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), this.state.navLinks.map((link, index) => React.createElement(\"li\", {\n      key: index,\n      onMouseEnter: () => {\n        setHoverIndex(index);\n      },\n      onMouseLeave: () => {\n        setHoverIndex(-1);\n      },\n      style: {\n        background: this.state.hoverIndex === index ? this.state.hoverBackground || '#999' : ''\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: link.path,\n      style: {\n        color: this.state.linkColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: link.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), link.text, React.createElement(Badges, {\n      BadgeActive: link.BadgeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, link.badgeText))))));\n  }\n\n}\n\nexport default LightVersion;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js"],"names":["React","Component","useState","navOpen","setNavOpen","hoverIndex","setHoverIndex","LightVersion","constructor","props","state","background","hoverBackground","linkColor","navLinks","logo","iconActive","menuIcon","BadgeActive","badgeText","render","Badges","map","link","index","path","color","icon","text"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\n\nconst [ navOpen, setNavOpen ] = useState(0)\nconst [ hoverIndex, setHoverIndex ] = useState(-1)\nclass LightVersion extends Component {\n    constructor(props) {\n        super(props) \n            this.state = {\n                background: this.props.background,\n                hoverBackground: this.props.hoverBackground,\n                linkColor: this.props.linkColor,\n                navLinks: this.props.navLinks,\n                logo: this.props.logo,\n                iconActive: this.props.iconActive,\n                menuIcon: this.props.menuIcon,\n                BadgeActive: this.props.BadgeActive,\n                badgeText: this.props.badgeText\n            }   \n    }\n    \n    render() {\n        const Badges = (props) => {\n            if(props.BadgeActive === true) {\n                return <span>{props.badgeText}</span>\n            }else {\n                return null\n            }\n        }\n        return (\n            <nav\n            className=\"responsive-toolbar sidebar\"\n            style={{ background: this.state.background }}>\n            <ul\n                style={{ background: this.state.background }}\n                className={ this.state.navOpen ? 'active' : '' }\n            >\n                <figure className=\"image-logo\" onClick={ () => { setNavOpen(!navOpen) } }>\n                    <img src={ this.state.logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\n                </figure>\n                { this.state.navLinks.map((link, index) => \n                    <li\n                        key={ index }\n                        onMouseEnter={ () => { setHoverIndex(index) } }\n                        onMouseLeave={ () => { setHoverIndex(-1) } }\n                        style={{ background: this.state.hoverIndex === index ? (this.state.hoverBackground || '#999') : '' }}\n                    >\n                        <a\n                            href={link.path}\n                            style={{ color: this.state.linkColor }}\n                        >   \n                            <i className={ link.icon } />\n                            { link.text }\n                            <Badges BadgeActive={link.BadgeActive}>{link.badgeText}</Badges>\n                        </a>\n                    </li>\n                )}\n            </ul>\n        </nav>\n        );\n    }\n}\n\nexport default LightVersion;"]},"metadata":{},"sourceType":"module"}