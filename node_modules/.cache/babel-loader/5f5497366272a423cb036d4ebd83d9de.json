{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Carousel/CarouselDots.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport '../styles/CarouselDots.scss';\n\nclass CarouselDots extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = index => () => {\n      const numberOfSlides = this.props.number || this.props.thumbnails.length;\n      const moduloItem = this.calculateButtonValue() % numberOfSlides;\n      return this.props.onChange(this.props.value - (moduloItem - index));\n    };\n\n    this.calculateButtonValue = () => {\n      const numberOfSlides = this.props.number || this.props.thumbnails.length;\n      return this.props.value >= 0 ? this.props.value : this.props.value + numberOfSlides * Math.ceil(Math.abs(this.props.value / numberOfSlides));\n    };\n  }\n\n  renderCarouselDots() {\n    if (this.props.thumbnails) {\n      const dotsLength = isNaN(this.props.number) ? this.props.thumbnails.length : this.props.number;\n      return this.props.thumbnails.slice(0, dotsLength).map((thumbnail, index) => /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames('BrainhubCarousel__thumbnail', {\n          'BrainhubCarousel__thumbnail--selected': index === this.calculateButtonValue() % dotsLength\n        }),\n        type: \"button\",\n        onClick: this.onChange(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, thumbnail)));\n    }\n\n    const dots = [];\n\n    for (let i = 0; i < this.props.number; i++) {\n      dots.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames('BrainhubCarousel__dot', {\n          'BrainhubCarousel__dot--selected': i === this.calculateButtonValue() % this.props.number\n        }),\n        type: \"button\",\n        onClick: this.onChange(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, i + 1)));\n    }\n\n    return dots;\n  }\n\n  render() {\n    const {\n      className,\n      rtl\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      className: classnames('BrainhubCarousel__dots', className, rtl ? 'BrainhubCarousel__dots--isRTL' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, this.renderCarouselDots());\n  }\n\n}\n\nCarouselDots.propTypes = {\n  number: PropTypes.number,\n  thumbnails: PropTypes.arrayOf(PropTypes.node),\n  value: PropTypes.number,\n  onChange: PropTypes.func,\n  rtl: PropTypes.bool,\n  className: PropTypes.string\n};\nexport default CarouselDots;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Carousel/CarouselDots.js"],"names":["React","Component","PropTypes","classnames","CarouselDots","onChange","index","numberOfSlides","props","number","thumbnails","length","moduloItem","calculateButtonValue","value","Math","ceil","abs","renderCarouselDots","dotsLength","isNaN","slice","map","thumbnail","dots","i","push","render","className","rtl","propTypes","arrayOf","node","func","bool","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport '../styles/CarouselDots.scss';\n\nclass CarouselDots extends Component {\n  static propTypes = {\n    number: PropTypes.number,\n    thumbnails: PropTypes.arrayOf(PropTypes.node),\n    value: PropTypes.number,\n    onChange: PropTypes.func,\n    rtl: PropTypes.bool,\n    className: PropTypes.string,\n  };\n\n  onChange = index => () => {\n    const numberOfSlides = this.props.number || this.props.thumbnails.length;\n    const moduloItem = this.calculateButtonValue() % numberOfSlides;\n\n    return this.props.onChange(this.props.value - ( moduloItem - index));\n  };\n\n  calculateButtonValue = () => {\n    const numberOfSlides = this.props.number || this.props.thumbnails.length;\n    return this.props.value >= 0\n      ? this.props.value\n      : this.props.value + numberOfSlides * Math.ceil(Math.abs(this.props.value/numberOfSlides));\n  };\n\n  renderCarouselDots() {\n    if (this.props.thumbnails) {\n      const dotsLength = isNaN(this.props.number) ? this.props.thumbnails.length : this.props.number;\n\n      return this.props.thumbnails.slice(0, dotsLength).map((thumbnail, index) => (\n        <li key={index}>\n          <div\n            className={classnames(\n              'BrainhubCarousel__thumbnail',\n              { 'BrainhubCarousel__thumbnail--selected': index === this.calculateButtonValue() % dotsLength },\n            )}\n            type=\"button\"\n            onClick={this.onChange(index)}\n          >\n            {thumbnail}\n          </div>\n        </li>\n      ));\n    }\n\n    const dots = [];\n    for (let i = 0; i < this.props.number; i++) {\n      dots.push(\n        <li key={i}>\n          <div\n            className={classnames(\n              'BrainhubCarousel__dot',\n              { 'BrainhubCarousel__dot--selected': i === this.calculateButtonValue() % this.props.number },\n            )}\n            type=\"button\"\n            onClick={this.onChange(i)}\n          >\n            {i + 1}\n          </div>\n        </li>,\n      );\n    }\n    return dots;\n  }\n\n  render() {\n    const { className, rtl } = this.props;\n    return (\n      <ul className={classnames('BrainhubCarousel__dots', className, rtl ? 'BrainhubCarousel__dots--isRTL' : '')}>\n        {this.renderCarouselDots()}\n      </ul>\n    );\n  }\n}\n\nexport default CarouselDots;"]},"metadata":{},"sourceType":"module"}