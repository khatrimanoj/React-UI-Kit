{"ast":null,"code":"import _slicedToArray from\"/home/mindbox/Documents/manoj/nexus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import LinearIndicator from'./LinearIndicator';export default function LinearBuffer(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),completed=_React$useState2[0],setCompleted=_React$useState2[1];var _React$useState3=React.useState(10),_React$useState4=_slicedToArray(_React$useState3,2),buffer=_React$useState4[0],setBuffer=_React$useState4[1];var progress=React.useRef(function(){});React.useEffect(function(){progress.current=function(){if(completed>100){setCompleted(0);setBuffer(10);}else{var diff=Math.random()*10;var diff2=Math.random()*10;setCompleted(completed+diff);setBuffer(completed+diff+diff2);}};});React.useEffect(function(){function tick(){progress.current();}var timer=setInterval(tick,500);return function(){clearInterval(timer);};},[]);return React.createElement(\"div\",{className:\"buff-indicator\"},React.createElement(LinearIndicator,{variant:\"buffer\",value:completed,valueBuffer:buffer}));}","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ProgressIndicators/Types/BufferingIndicator.js"],"names":["React","LinearIndicator","LinearBuffer","useState","completed","setCompleted","buffer","setBuffer","progress","useRef","useEffect","current","diff","Math","random","diff2","tick","timer","setInterval","clearInterval"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,cAAe,SAASC,CAAAA,YAAT,EAAwB,qBACDF,KAAK,CAACG,QAAN,CAAe,CAAf,CADC,oDAC5BC,SAD4B,qBACjBC,YADiB,0CAEPL,KAAK,CAACG,QAAN,CAAe,EAAf,CAFO,qDAE5BG,MAF4B,qBAEpBC,SAFoB,qBAInC,GAAMC,CAAAA,QAAQ,CAAGR,KAAK,CAACS,MAAN,CAAa,UAAM,CAAE,CAArB,CAAjB,CACAT,KAAK,CAACU,SAAN,CAAgB,UAAM,CACpBF,QAAQ,CAACG,OAAT,CAAmB,UAAM,CACvB,GAAIP,SAAS,CAAG,GAAhB,CAAqB,CACnBC,YAAY,CAAC,CAAD,CAAZ,CACAE,SAAS,CAAC,EAAD,CAAT,CACD,CAHD,IAGO,CACL,GAAMK,CAAAA,IAAI,CAAGC,IAAI,CAACC,MAAL,GAAgB,EAA7B,CACA,GAAMC,CAAAA,KAAK,CAAGF,IAAI,CAACC,MAAL,GAAgB,EAA9B,CACAT,YAAY,CAACD,SAAS,CAAGQ,IAAb,CAAZ,CACAL,SAAS,CAACH,SAAS,CAAGQ,IAAZ,CAAmBG,KAApB,CAAT,CACD,CACF,CAVD,CAWD,CAZD,EAcAf,KAAK,CAACU,SAAN,CAAgB,UAAM,CACpB,QAASM,CAAAA,IAAT,EAAgB,CACdR,QAAQ,CAACG,OAAT,GACD,CACD,GAAMM,CAAAA,KAAK,CAAGC,WAAW,CAACF,IAAD,CAAO,GAAP,CAAzB,CAEA,MAAO,WAAM,CACXG,aAAa,CAACF,KAAD,CAAb,CACD,CAFD,CAGD,CATD,CASG,EATH,EAWA,MACE,4BAAK,SAAS,CAAC,gBAAf,EACE,oBAAC,eAAD,EAAiB,OAAO,CAAC,QAAzB,CAAkC,KAAK,CAAEb,SAAzC,CAAoD,WAAW,CAAEE,MAAjE,EADF,CADF,CAKD","sourcesContent":["import React from 'react';\nimport LinearIndicator from './LinearIndicator';\n\nexport default function LinearBuffer() {\n    const [completed, setCompleted] = React.useState(0);\n    const [buffer, setBuffer] = React.useState(10);\n  \n    const progress = React.useRef(() => {});\n    React.useEffect(() => {\n      progress.current = () => {\n        if (completed > 100) {\n          setCompleted(0);\n          setBuffer(10);\n        } else {\n          const diff = Math.random() * 10;\n          const diff2 = Math.random() * 10;\n          setCompleted(completed + diff);\n          setBuffer(completed + diff + diff2);\n        }\n      };\n    });\n  \n    React.useEffect(() => {\n      function tick() {\n        progress.current();\n      }\n      const timer = setInterval(tick, 500);\n  \n      return () => {\n        clearInterval(timer);\n      };\n    }, []);\n  \n    return (\n      <div className=\"buff-indicator\">\n        <LinearIndicator variant=\"buffer\" value={completed} valueBuffer={buffer} />\n      </div>\n    );\n  }\n"]},"metadata":{},"sourceType":"module"}