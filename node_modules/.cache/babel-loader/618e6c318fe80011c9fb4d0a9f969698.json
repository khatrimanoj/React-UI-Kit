{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js\";\nimport React, { useState } from 'react';\n\nfunction ResponsiveNavigation({\n  background,\n  hoverBackground,\n  linkColor,\n  navLinks,\n  logo,\n  iconActive,\n  badgeText,\n  BadgeActive,\n  Badges\n}) {\n  const [navOpen, setNavOpen] = useState(0);\n  const [hoverIndex, setHoverIndex] = useState(-1);\n  return React.createElement(\"nav\", {\n    className: \"responsive-toolbar sidebar\",\n    style: {\n      background: background\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    style: {\n      background: background\n    },\n    className: navOpen ? 'active' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"image-logo\",\n    onClick: () => {\n      setNavOpen(!navOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    height: \"40px\",\n    width: \"40px\",\n    alt: \"toolbar-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), navLinks.map((link, index) => React.createElement(\"li\", {\n    key: index,\n    onMouseEnter: () => {\n      setHoverIndex(index);\n    },\n    onMouseLeave: () => {\n      setHoverIndex(-1);\n    },\n    style: {\n      background: hoverIndex === index ? hoverBackground || '#999' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: link.path,\n    style: {\n      color: linkColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"   \", link.text, React.createElement(\"i\", {\n    className: link.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), `if (props.BadgeActive === true) {\n                              return <span BadgeActive={link.BadgeActive}>{link.badgeText}</span>\n                            }else {\n                              return null\n                            }`)))));\n}\n\nexport default ResponsiveNavigation;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js"],"names":["React","useState","ResponsiveNavigation","background","hoverBackground","linkColor","navLinks","logo","iconActive","badgeText","BadgeActive","Badges","navOpen","setNavOpen","hoverIndex","setHoverIndex","map","link","index","path","color","text","icon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,eAAd;AAA+BC,EAAAA,SAA/B;AAA0CC,EAAAA,QAA1C;AAAoDC,EAAAA,IAApD;AAA0DC,EAAAA,UAA1D;AAAsEC,EAAAA,SAAtE;AAAiFC,EAAAA,WAAjF;AAA6FC,EAAAA;AAA7F,CAA9B,EAAoI;AAChI,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAEa,UAAF,EAAcC,aAAd,IAAgCd,QAAQ,CAAC,CAAC,CAAF,CAA9C;AAEA,SACI;AACI,IAAA,SAAS,EAAC,4BADd;AAEI,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAU,EAAEA;AAAd,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AACI,IAAA,KAAK,EAAE;AAAEA,MAAAA,UAAU,EAAEA;AAAd,KADX;AAEI,IAAA,SAAS,EAAGS,OAAO,GAAG,QAAH,GAAc,EAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAG,MAAM;AAAEC,MAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAAsB,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAGL,IAAX;AAAkB,IAAA,MAAM,EAAC,MAAzB;AAAgC,IAAA,KAAK,EAAC,MAAtC;AAA6C,IAAA,GAAG,EAAC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOMD,QAAQ,CAACU,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KACX;AACI,IAAA,GAAG,EAAGA,KADV;AAEI,IAAA,YAAY,EAAG,MAAM;AAAEH,MAAAA,aAAa,CAACG,KAAD,CAAb;AAAsB,KAFjD;AAGI,IAAA,YAAY,EAAG,MAAM;AAAEH,MAAAA,aAAa,CAAC,CAAC,CAAF,CAAb;AAAmB,KAH9C;AAII,IAAA,KAAK,EAAE;AAAEZ,MAAAA,UAAU,EAAEW,UAAU,KAAKI,KAAf,GAAwBd,eAAe,IAAI,MAA3C,GAAqD;AAAnE,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaI;AACI,IAAA,IAAI,EAAEa,IAAI,CAACE,IADf;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEf;AAAT,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAGMY,IAAI,CAACI,IAHX,EAII;AAAG,IAAA,SAAS,EAAGJ,IAAI,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAMM;;;;8BANN,CAbJ,CADF,CAPN,CAHJ,CADJ;AA0CH;;AAED,eAAepB,oBAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction ResponsiveNavigation({ background, hoverBackground, linkColor, navLinks, logo, iconActive, badgeText, BadgeActive,Badges}) {\n    const [ navOpen, setNavOpen ] = useState(0)\n    const [ hoverIndex, setHoverIndex ] = useState(-1)\n    \n    return (\n        <nav\n            className=\"responsive-toolbar sidebar\"\n            style={{ background: background }}>\n            <ul\n                style={{ background: background }}\n                className={ navOpen ? 'active' : '' }\n            >\n                <figure className=\"image-logo\" onClick={ () => { setNavOpen(!navOpen) } }>\n                    <img src={ logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\n                </figure>\n                { navLinks.map((link, index) => \n                    <li\n                        key={ index }\n                        onMouseEnter={ () => { setHoverIndex(index) } }\n                        onMouseLeave={ () => { setHoverIndex(-1) } }\n                        style={{ background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\n                    >\n                    {/* {function Badge (props) {\n                      if(props.BadgeActive === true) {\n                          return <span>{badgeText}</span> \n                      }else {\n                          return null\n                      }\n                    }} */}\n                        <a\n                            href={link.path}\n                            style={{ color: linkColor }}\n                        >   { link.text }\n                            <i className={ link.icon } />\n                            {/* <Badges BadgeActive={link.BadgeActive}>{link.badgeText}</Badges> */}\n                            {`if (props.BadgeActive === true) {\n                              return <span BadgeActive={link.BadgeActive}>{link.badgeText}</span>\n                            }else {\n                              return null\n                            }`}\n                        </a>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    )\n}\n\nexport default ResponsiveNavigation"]},"metadata":{},"sourceType":"module"}