{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Carousel/DemoCarousel.js\";\nimport React, { Component } from \"react\"; // import \"./carousel.scss\";\n\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clearTimer = () => {\n      var vm = this;\n\n      if (!vm.props.pouseMouseEnter) {\n        clearInterval(vm.carouselTimer);\n      }\n    };\n\n    this.startTimer = () => {\n      const vm = this;\n\n      if (vm.props.autoScroll) {\n        this.carouselTimer = setInterval(() => {\n          let carousel = this.carousel.getBoundingClientRect();\n          let containerWidth = carousel.width;\n          let carouselWidth = this.props.sliderType === \"fullScreen\" ? containerWidth * this.props.children.length : this.carouselInnerContent.getBoundingClientRect().width;\n          let totalSlide = Math.ceil(carouselWidth / containerWidth);\n          let currentSlide = vm.state.currentSlide + 1;\n\n          if (currentSlide >= totalSlide) {\n            currentSlide = 0;\n          }\n\n          let transform = 0;\n\n          if (currentSlide * containerWidth + containerWidth > carouselWidth) {\n            let prevWidth = currentSlide * containerWidth;\n            transform = prevWidth - ((currentSlide + 1) * containerWidth - carouselWidth);\n          } else {\n            transform = currentSlide * containerWidth;\n          }\n\n          vm.setState({\n            currentSlide: currentSlide,\n            transform: transform * -1,\n            totalSlide\n          }, () => vm.showArrow(currentSlide));\n        }, vm.state.autoScrollTimer);\n      }\n    };\n\n    this.showArrow = currentSlide => {\n      if (currentSlide === 0) {\n        this.setState({\n          showLeftArrow: false\n        });\n      } else {\n        this.setState({\n          showLeftArrow: true\n        });\n      }\n\n      if (currentSlide === this.state.totalSlide - 1) {\n        this.setState({\n          showRightArrow: false\n        });\n      } else {\n        this.setState({\n          showRightArrow: true\n        });\n      }\n    };\n\n    this.startCarousel = () => {\n      let vm = this;\n\n      if (!vm.props.pouseMouseEnter) {\n        vm.startTimer();\n      }\n    };\n\n    this.state = {\n      transform: 0,\n      currentSlide: 0,\n      totalSlide: 0,\n      autoScrollTimer: this.props.autoScrollTimer || 5000,\n      showLeftArrow: false,\n      showRightArrow: true\n    };\n    this.carouselTimer = \"\";\n    this.slideLeft = this.slideLeft.bind(this);\n    this.slideRight = this.slideRight.bind(this);\n    this.clearTimer = this.clearTimer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.arrowMaker = this.arrowMaker.bind(this);\n  }\n\n  componentDidMount() {\n    let carousel = this.carousel.getBoundingClientRect();\n    let containerWidth = carousel.width;\n    let carouselWidth = this.props.sliderType === \"fullScreen\" ? containerWidth * this.props.children.length : this.carouselInnerContent.getBoundingClientRect().width;\n    let totalSlide = Math.ceil(carouselWidth / containerWidth);\n    this.setState({\n      totalSlide\n    }, () => {\n      this.startTimer();\n    });\n  }\n\n  slideLeft(e) {\n    if (e && !e.target.classList.contains(\"arrowClick\")) {\n      return;\n    }\n\n    let carousel = this.carousel.getBoundingClientRect();\n    let carouselWidth = carousel.width;\n    let carouselInnerWidth = this.props.sliderType === \"fullScreen\" ? carouselWidth * this.props.children.length : this.carouselInnerContent.getBoundingClientRect().width;\n    let currentSlide = this.state.currentSlide - 1;\n    this.setState({\n      totalSlide: Math.ceil(carouselInnerWidth / carouselWidth)\n    }, () => {\n      this.showArrow(currentSlide);\n    });\n\n    if (this.state.currentSlide !== 0) {\n      if (this.state.transform + carouselWidth <= 0) {\n        let currentTransform = this.state.transform;\n        this.setState({\n          currentSlide: currentSlide,\n          transform: currentTransform + carouselWidth\n        });\n      } else {\n        this.setState({\n          currentSlide: currentSlide,\n          transform: 0\n        });\n      }\n    }\n  }\n\n  slideRight(e) {\n    if (e && !e.target.classList.contains(\"arrowClick\")) {\n      return;\n    }\n\n    let carousel = this.carousel.getBoundingClientRect();\n    let carouselWidth = carousel.width;\n    let carouselInnerWidth = this.props.sliderType === \"fullScreen\" ? carouselWidth * this.props.children.length : this.carouselInnerContent.getBoundingClientRect().width;\n    let currentSlide = this.state.currentSlide + 1;\n    this.setState({\n      totalSlide: Math.ceil(carouselInnerWidth / carouselWidth)\n    }, () => {\n      this.showArrow(currentSlide);\n    });\n\n    if (this.state.currentSlide !== this.state.totalSlide - 1) {\n      if (carouselWidth * (currentSlide + 1) <= carouselInnerWidth) {\n        this.setState({\n          currentSlide: currentSlide,\n          transform: carouselWidth * currentSlide * -1\n        });\n      } else {\n        let prevPos = this.state.transform * -1;\n        this.setState({\n          currentSlide: currentSlide,\n          transform: (prevPos + (carouselInnerWidth - (prevPos + carouselWidth))) * -1\n        });\n      }\n    }\n  }\n\n  arrowMaker(arrowType) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrowBg arrowBg-left arrowClick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, this.props[arrowType]);\n  }\n\n  render() {\n    const {\n      showLeftArrow,\n      showRightArrow\n    } = this.state;\n    const classes = `carousel${this.props.classes ? \" \" + this.props.classes : \"\"} \n    ${this.props.sliderType === \"grid\" ? \"gridSlider\" : \"\"} \n    ${this.props.sliderType === \"fullScreen\" ? \"fullScreen-slider\" : \"\"}`;\n    const showArrowBg = this.props.showArrowBg ? true : false;\n    const slideUnit = \"px\";\n    const {\n      hideArrow\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: this.clearTimer,\n      onMouseLeave: this.startCarousel,\n      id: \"ns-carousel\",\n      ref: div => {\n        this.carousel = div;\n      },\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, !hideArrow && showLeftArrow && (showArrowBg ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrowBg arrowBg-left arrowClick\",\n      onClick: this.slideLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-chevron-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    })) : this.arrowMaker(\"leftArrow\")), !hideArrow && showRightArrow && (showArrowBg ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"arrowBg arrowBg-right arrowClick\",\n      onClick: this.slideRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-chevron-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    })) : this.arrowMaker(\"leftArrow\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"carousel-inner-container\",\n      style: {\n        transform: `translateX(${this.state.transform}${slideUnit})`\n      },\n      ref: div => {\n        this.carouselInnerContent = div;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, this.props.children.map((slide, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"carousel-item\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }\n      }, slide);\n    })));\n  }\n\n}\n\nCarousel.defaultProps = {\n  autoScroll: true,\n  sliderType: \"grid\"\n};\nexport default Carousel;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Carousel/DemoCarousel.js"],"names":["React","Component","Carousel","constructor","props","clearTimer","vm","pouseMouseEnter","clearInterval","carouselTimer","startTimer","autoScroll","setInterval","carousel","getBoundingClientRect","containerWidth","width","carouselWidth","sliderType","children","length","carouselInnerContent","totalSlide","Math","ceil","currentSlide","state","transform","prevWidth","setState","showArrow","autoScrollTimer","showLeftArrow","showRightArrow","startCarousel","slideLeft","bind","slideRight","arrowMaker","componentDidMount","e","target","classList","contains","carouselInnerWidth","currentTransform","prevPos","arrowType","render","classes","showArrowBg","slideUnit","hideArrow","div","map","slide","index","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import \"./carousel.scss\";\nclass Carousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transform: 0,\n      currentSlide: 0,\n      totalSlide: 0,\n      autoScrollTimer: this.props.autoScrollTimer || 5000,\n      showLeftArrow: false,\n      showRightArrow: true\n    };\n    this.carouselTimer = \"\";\n    this.slideLeft = this.slideLeft.bind(this);\n    this.slideRight = this.slideRight.bind(this);\n    this.clearTimer = this.clearTimer.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.arrowMaker = this.arrowMaker.bind(this);\n  }\n\n  componentDidMount() {\n    let carousel = this.carousel.getBoundingClientRect();\n    let containerWidth = carousel.width;\n    let carouselWidth =\n      this.props.sliderType === \"fullScreen\"\n        ? containerWidth * this.props.children.length\n        : this.carouselInnerContent.getBoundingClientRect().width;\n    let totalSlide = Math.ceil(carouselWidth / containerWidth);\n    this.setState(\n      {\n        totalSlide\n      },\n      () => {\n        this.startTimer();\n      }\n    );\n  }\n  clearTimer = () => {\n    var vm = this;\n    if (!vm.props.pouseMouseEnter) {\n      clearInterval(vm.carouselTimer);\n    }\n  };\n  startTimer = () => {\n    const vm = this;\n    if (vm.props.autoScroll) {\n      this.carouselTimer = setInterval(() => {\n        let carousel = this.carousel.getBoundingClientRect();\n\n        let containerWidth = carousel.width;\n        let carouselWidth =\n          this.props.sliderType === \"fullScreen\"\n            ? containerWidth * this.props.children.length\n            : this.carouselInnerContent.getBoundingClientRect().width;\n        let totalSlide = Math.ceil(carouselWidth / containerWidth);\n\n        let currentSlide = vm.state.currentSlide + 1;\n        if (currentSlide >= totalSlide) {\n          currentSlide = 0;\n        }\n        let transform = 0;\n        if (currentSlide * containerWidth + containerWidth > carouselWidth) {\n          let prevWidth = currentSlide * containerWidth;\n          transform =\n            prevWidth - ((currentSlide + 1) * containerWidth - carouselWidth);\n        } else {\n          transform = currentSlide * containerWidth;\n        }\n        vm.setState(\n          {\n            currentSlide: currentSlide,\n            transform: transform * -1,\n            totalSlide\n          },\n          () => vm.showArrow(currentSlide)\n        );\n      }, vm.state.autoScrollTimer);\n    }\n  };\n  showArrow = currentSlide => {\n    if (currentSlide === 0) {\n      this.setState({\n        showLeftArrow: false\n      });\n    } else {\n      this.setState({\n        showLeftArrow: true\n      });\n    }\n    if (currentSlide === this.state.totalSlide - 1) {\n      this.setState({\n        showRightArrow: false\n      });\n    } else {\n      this.setState({\n        showRightArrow: true\n      });\n    }\n  };\n  slideLeft(e) {\n    if (e && !e.target.classList.contains(\"arrowClick\")) {\n      return;\n    }\n    let carousel = this.carousel.getBoundingClientRect();\n    let carouselWidth = carousel.width;\n    let carouselInnerWidth =\n      this.props.sliderType === \"fullScreen\"\n        ? carouselWidth * this.props.children.length\n        : this.carouselInnerContent.getBoundingClientRect().width;\n\n    let currentSlide = this.state.currentSlide - 1;\n    this.setState(\n      {\n        totalSlide: Math.ceil(carouselInnerWidth / carouselWidth)\n      },\n      () => {\n        this.showArrow(currentSlide);\n      }\n    );\n\n    if (this.state.currentSlide !== 0) {\n      if (this.state.transform + carouselWidth <= 0) {\n        let currentTransform = this.state.transform;\n        this.setState({\n          currentSlide: currentSlide,\n          transform: currentTransform + carouselWidth\n        });\n      } else {\n        this.setState({\n          currentSlide: currentSlide,\n          transform: 0\n        });\n      }\n    }\n  }\n  slideRight(e) {\n    if (e && !e.target.classList.contains(\"arrowClick\")) {\n      return;\n    }\n    let carousel = this.carousel.getBoundingClientRect();\n    let carouselWidth = carousel.width;\n    let carouselInnerWidth =\n      this.props.sliderType === \"fullScreen\"\n        ? carouselWidth * this.props.children.length\n        : this.carouselInnerContent.getBoundingClientRect().width;\n\n    let currentSlide = this.state.currentSlide + 1;\n    this.setState(\n      {\n        totalSlide: Math.ceil(carouselInnerWidth / carouselWidth)\n      },\n      () => {\n        this.showArrow(currentSlide);\n      }\n    );\n\n    if (this.state.currentSlide !== this.state.totalSlide - 1) {\n      if (carouselWidth * (currentSlide + 1) <= carouselInnerWidth) {\n        this.setState({\n          currentSlide: currentSlide,\n          transform: carouselWidth * currentSlide * -1\n        });\n      } else {\n        let prevPos = this.state.transform * -1;\n        this.setState({\n          currentSlide: currentSlide,\n          transform:\n            (prevPos + (carouselInnerWidth - (prevPos + carouselWidth))) * -1\n        });\n      }\n    }\n  }\n  startCarousel = () => {\n    let vm = this;\n    if (!vm.props.pouseMouseEnter) {\n      vm.startTimer();\n    }\n  };\n  arrowMaker(arrowType) {\n    return (\n      <div className=\"arrowBg arrowBg-left arrowClick\">\n        {this.props[arrowType]}\n      </div>\n    );\n  }\n\n  render() {\n    const { showLeftArrow, showRightArrow } = this.state;\n    const classes = `carousel${\n      this.props.classes ? \" \" + this.props.classes : \"\"\n    } \n    ${this.props.sliderType === \"grid\" ? \"gridSlider\" : \"\"} \n    ${this.props.sliderType === \"fullScreen\" ? \"fullScreen-slider\" : \"\"}`;\n    const showArrowBg = this.props.showArrowBg ? true : false;\n    const slideUnit = \"px\";\n    const { hideArrow } = this.props;\n    return (\n      <div\n        onMouseEnter={this.clearTimer}\n        onMouseLeave={this.startCarousel}\n        id=\"ns-carousel\"\n        ref={div => {\n          this.carousel = div;\n        }}\n        className={classes}\n      >\n        {!hideArrow &&\n          showLeftArrow &&\n          (showArrowBg ? (\n            <div\n              className=\"arrowBg arrowBg-left arrowClick\"\n              onClick={this.slideLeft}\n            >\n              <i className=\"fa fa-chevron-left\" />\n            </div>\n          ) : (\n            this.arrowMaker(\"leftArrow\")\n          ))}\n        {!hideArrow &&\n          showRightArrow &&\n          (showArrowBg ? (\n            <div\n              className=\"arrowBg arrowBg-right arrowClick\"\n              onClick={this.slideRight}\n            >\n              <i className=\"fa fa-chevron-right\" />\n            </div>\n          ) : (\n            this.arrowMaker(\"leftArrow\")\n          ))}\n        <div\n          className=\"carousel-inner-container\"\n          style={{\n            transform: `translateX(${this.state.transform}${slideUnit})`\n          }}\n          ref={div => {\n            this.carouselInnerContent = div;\n          }}\n        >\n          {this.props.children.map((slide, index) => {\n            return (\n              <div className={\"carousel-item\"} key={index}>\n                {slide}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nCarousel.defaultProps = {\n  autoScroll: true,\n  sliderType: \"grid\"\n};\nexport default Carousel;"]},"metadata":{},"sourceType":"module"}