{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js\";\nimport React, { useState } from 'react';\n\nclass LightVersion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      background: this.props.background,\n      hoverBackground: this.props.hoverBackground,\n      linkColor: this.props.linkColor,\n      navLinks: this.props.navLinks,\n      logo: this.props.logo,\n      iconActive: this.props.iconActive,\n      menuIcon: this.props.menuIcon,\n      BadgeActive: this.props.BadgeActive,\n      badgeText: this.props.badgeText\n    };\n  }\n\n  render() {\n    Badges = props => {\n      if (props.BadgeActive === true) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, props.badgeText);\n      } else {\n        return null;\n      }\n    };\n\n    return React.createElement(\"nav\", {\n      className: \"responsive-toolbar sidebar\",\n      style: {\n        background: background\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      style: {\n        background: background\n      },\n      className: this.statenavOpen ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      className: \"image-logo\",\n      onClick: () => {\n        setNavOpen(!navOpen);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.logo,\n      height: \"40px\",\n      width: \"40px\",\n      alt: \"toolbar-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), this.state.navLinks.map((link, index) => React.createElement(\"li\", {\n      key: index,\n      onMouseEnter: () => {\n        setHoverIndex(index);\n      },\n      onMouseLeave: () => {\n        setHoverIndex(-1);\n      },\n      style: {\n        background: hoverIndex === index ? hoverBackground || '#999' : ''\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: link.path,\n      style: {\n        color: linkColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: link.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), link.text, React.createElement(Badges, {\n      BadgeActive: link.BadgeActive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, link.badgeText))))));\n  }\n\n}\n\nexport default LightVersion; // function ResponsiveNavigation({ background, hoverBackground, linkColor, navLinks, logo, iconActive, badgeText, BadgeActive}) {\n//     const [ navOpen, setNavOpen ] = useState(0)\n//     const [ hoverIndex, setHoverIndex ] = useState(-1)\n//     const Badges = (props) => {\n//       if(props.BadgeActive === true) {\n//           return <span>{props.badgeText}</span>\n//       }else {\n//           return null\n//       }\n//   }\n//     return (\n//         <nav\n//             className=\"responsive-toolbar sidebar\"\n//             style={{ background: background }}>\n//             <ul\n//                 style={{ background: background }}\n//                 className={ navOpen ? 'active' : '' }\n//             >\n//                 <figure className=\"image-logo\" onClick={ () => { setNavOpen(!navOpen) } }>\n//                     <img src={ logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\n//                 </figure>\n//                 { navLinks.map((link, index) => \n//                     <li\n//                         key={ index }\n//                         onMouseEnter={ () => { setHoverIndex(index) } }\n//                         onMouseLeave={ () => { setHoverIndex(-1) } }\n//                         style={{ background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\n//                     >\n//                         <a\n//                             href={link.path}\n//                             style={{ color: linkColor }}\n//                         >   \n//                             <i className={ link.icon } />\n//                             { link.text }\n//                             <Badges BadgeActive={link.BadgeActive}>{link.badgeText}</Badges>\n//                         </a>\n//                     </li>\n//                 )}\n//             </ul>\n//         </nav>\n//     )\n// }\n// export default ResponsiveNavigation","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js"],"names":["React","useState","LightVersion","Component","constructor","props","state","background","hoverBackground","linkColor","navLinks","logo","iconActive","menuIcon","BadgeActive","badgeText","render","Badges","statenavOpen","setNavOpen","navOpen","map","link","index","setHoverIndex","hoverIndex","path","color","icon","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n\nclass LightVersion extends Component {\n    constructor(props) {\n        super(props) \n            this.state = {\n                background: this.props.background,\n                hoverBackground: this.props.hoverBackground,\n                linkColor: this.props.linkColor,\n                navLinks: this.props.navLinks,\n                logo: this.props.logo,\n                iconActive: this.props.iconActive,\n                menuIcon: this.props.menuIcon,\n                BadgeActive: this.props.BadgeActive,\n                badgeText: this.props.badgeText\n            }   \n    }\n    render() {\n        Badges = (props) => {\n            if(props.BadgeActive === true) {\n                return <span>{props.badgeText}</span>\n            }else {\n                return null\n            }\n        }\n        return (\n            <nav\n            className=\"responsive-toolbar sidebar\"\n            style={{ background: background }}>\n            <ul\n                style={{ background: background }}\n                className={ this.statenavOpen ? 'active' : '' }\n            >\n                <figure className=\"image-logo\" onClick={ () => { setNavOpen(!navOpen) } }>\n                    <img src={ this.state.logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\n                </figure>\n                { this.state.navLinks.map((link, index) => \n                    <li\n                        key={ index }\n                        onMouseEnter={ () => { setHoverIndex(index) } }\n                        onMouseLeave={ () => { setHoverIndex(-1) } }\n                        style={{ background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\n                    >\n                        <a\n                            href={link.path}\n                            style={{ color: linkColor }}\n                        >   \n                            <i className={ link.icon } />\n                            { link.text }\n                            <Badges BadgeActive={link.BadgeActive}>{link.badgeText}</Badges>\n                        </a>\n                    </li>\n                )}\n            </ul>\n        </nav>\n        );\n    }\n}\n\nexport default LightVersion;\n// function ResponsiveNavigation({ background, hoverBackground, linkColor, navLinks, logo, iconActive, badgeText, BadgeActive}) {\n    \n//     const [ navOpen, setNavOpen ] = useState(0)\n//     const [ hoverIndex, setHoverIndex ] = useState(-1)\n//     const Badges = (props) => {\n//       if(props.BadgeActive === true) {\n//           return <span>{props.badgeText}</span>\n//       }else {\n//           return null\n//       }\n//   }\n    \n//     return (\n//         <nav\n//             className=\"responsive-toolbar sidebar\"\n//             style={{ background: background }}>\n//             <ul\n//                 style={{ background: background }}\n//                 className={ navOpen ? 'active' : '' }\n//             >\n//                 <figure className=\"image-logo\" onClick={ () => { setNavOpen(!navOpen) } }>\n//                     <img src={ logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\n//                 </figure>\n//                 { navLinks.map((link, index) => \n//                     <li\n//                         key={ index }\n//                         onMouseEnter={ () => { setHoverIndex(index) } }\n//                         onMouseLeave={ () => { setHoverIndex(-1) } }\n//                         style={{ background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\n//                     >\n//                         <a\n//                             href={link.path}\n//                             style={{ color: linkColor }}\n//                         >   \n//                             <i className={ link.icon } />\n//                             { link.text }\n//                             <Badges BadgeActive={link.BadgeActive}>{link.badgeText}</Badges>\n//                         </a>\n//                     </li>\n//                 )}\n//             </ul>\n//         </nav>\n//     )\n// }\n\n// export default ResponsiveNavigation"]},"metadata":{},"sourceType":"module"}