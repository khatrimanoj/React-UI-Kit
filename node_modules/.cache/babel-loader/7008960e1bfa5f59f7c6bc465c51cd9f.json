{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js\";\nimport React, { Component, useState } from 'react';\nimport UserAvatar from '../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml';\nimport AvitarIcon from '../../../images/avitar.png';\nimport more from \"../../../images/More_Vertical.svg\";\nimport { grid } from 'react-icons-kit/feather/grid';\nimport { Icon } from 'react-icons-kit';\n\nconst toggleCollectionProperty = ({\n  arrCollection,\n  targetId,\n  itemIdProp,\n  itemProp,\n  itemVal,\n  itemOppVal\n}) => {\n  const tplCollection = [...arrCollection];\n\n  for (let i = 0, l = tplCollection.length; i < l; i += 1) {\n    if (tplCollection[i][itemIdProp] === targetId) {\n      tplCollection[i][itemProp] = itemVal;\n    } else {\n      tplCollection[i][itemProp] = itemOppVal;\n    }\n  }\n\n  return tplCollection;\n};\n\nconst withActiveProp = Component => props => {\n  return props.active && React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nconst toggleText = (bool, val1, val2) => {\n  return bool ? val1 : val2;\n};\n\nconst ListComponent = ({\n  data: listData,\n  Component,\n  className\n}) => {\n  if (!listData) {\n    return false;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, Component && listData.map((item, itemIndex) => React.createElement(React.Fragment, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, Component(item, itemIndex))));\n};\n\nconst BoxContainer = ({\n  className,\n  children\n}) => {\n  return React.createElement(\"div\", {\n    class: `${className ? className : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, children);\n};\n\nconst TextAndButton = ({\n  className,\n  btnState,\n  brandName,\n  text,\n  handleClick\n}) => {\n  function BrandName(props) {\n    if (props.active == true) {\n      return React.createElement(\"h1\", {\n        className: `${toggleText(className, className, '')}--text`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, text);\n    } else {\n      return null;\n    }\n  }\n\n  let [Status = \"online\", setStatus] = useState('online');\n\n  let selectStatus = e => {\n    setStatus(e.target.value);\n  };\n\n  console.log(Status);\n  return React.createElement(\"div\", {\n    className: `${toggleText(className, className, '')}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    onClick: handleClick,\n    title: \"Benjamin Parker\",\n    subtitle: React.createElement(\"span\", {\n      className: `${Status} status`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: selectStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Online\"), React.createElement(\"option\", {\n      value: \"offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Offline\"), React.createElement(\"option\", {\n      value: \"away\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Away\"), React.createElement(\"option\", {\n      value: \"dnd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Don't disturb\"))),\n    avitar: AvitarIcon,\n    hasRound: true,\n    haslg: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"\",\n    src: AvitarIcon,\n    alt: \"User Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), toggleText(btnState)), React.createElement(\"div\", {\n    className: \"more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: more,\n    alt: \"More Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(BrandName, {\n    active: brandName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n};\n\nclass LightVersion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sideNav: {\n        active: true\n      },\n      pages: [{\n        name: 'Dashboard',\n        title: 'Dashboard',\n        itemIcon: grid,\n        active: false // items: [\n        //   {\n        //     name: 'item11',\n        //     active: true,\n        //   },\n        //   {\n        //     name: 'item12',\n        //     active: false,\n        //   },\n        //   {\n        //     name: 'item13',\n        //     active: false,\n        //   },\n        // ],\n\n      }, {\n        name: 'People',\n        title: 'People',\n        active: true // items: [\n        //   {\n        //     name: 'item21',\n        //     active: true,\n        //   },\n        //   {\n        //     name: 'item22',\n        //     active: false,\n        //   },\n        //   {\n        //     name: 'item23',\n        //     active: false,\n        //   },\n        // ],\n\n      }, {\n        name: 'Favorites',\n        title: 'Favorites',\n        active: false // items: [\n        //   {\n        //     name: 'item31',\n        //     active: true,\n        //   },\n        //   {\n        //     name: 'item32',\n        //     active: false,\n        //   },\n        //   {\n        //     name: 'item33',\n        //     active: false,\n        //   },\n        // ],\n\n      }, {\n        name: 'Updates',\n        title: 'Updates'\n      }, {\n        name: 'Uploads',\n        title: 'Uploads'\n      }, {\n        name: 'Settings',\n        title: 'Settings'\n      }],\n      myCollection: [{\n        name: 'my collections',\n        title: 'my collections',\n        items: [{\n          name: 'Mood Inspiration',\n          active: false\n        }, {\n          name: 'International Women’s Day — Editorial Selects',\n          active: false\n        }, {\n          name: 'Visual Assets for Marketers',\n          active: false\n        }]\n      }]\n    };\n    this.toggleSideNav = this.toggleSideNav.bind(this);\n    this.togglePages = this.togglePages.bind(this);\n  }\n\n  toggleSideNav() {\n    const {\n      sideNav\n    } = this.state;\n    sideNav.active = !this.state.sideNav.active;\n    this.setState({\n      sideNav\n    });\n  }\n\n  togglePages(collection, collTargetId, subpageIndex) {\n    let pages = '';\n\n    if (typeof subpageIndex !== 'number' && !subpageIndex) {\n      pages = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n    } else {\n      const subpages = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n      pages = this.state.pages;\n      pages[subpageIndex].items = subpages;\n    }\n\n    this.setState({\n      pages\n    });\n  }\n\n  render() {\n    const {\n      icon,\n      Lefticon,\n      Righticon\n    } = this.props;\n\n    function Lefticons(props) {\n      if (props.active == true) {\n        return React.createElement(\"span\", {\n          className: \"lefticon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, icon);\n      } else {\n        return null;\n      }\n    }\n\n    function Righticons(props) {\n      if (props.active == true) {\n        return React.createElement(\"span\", {\n          className: \"righticon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, icon);\n      } else {\n        return null;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(BoxContainer, {\n      className: `sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(TextAndButton, {\n      className: \"sidebar-head\",\n      btnState: this.state.sideNav.active,\n      handleClick: this.toggleSideNav,\n      text: \"Brand Name\",\n      brandName: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(ListComponent, {\n      data: this.state.pages,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `menu-item ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#/\",\n        onClick: () => this.togglePages(this.state.pages, item.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, item.title), item.items && React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(ListComponent, {\n        data: item.items,\n        Component: subitem => React.createElement(\"li\", {\n          className: `${toggleText(subitem.active, 'active', '')}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#/\",\n          onClick: () => this.togglePages(item.items, subitem.name, itemIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, subitem.name)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(ListComponent, {\n      data: this.state.myCollection,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `my-collection ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sub-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, item.title)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default LightVersion;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js"],"names":["React","Component","useState","UserAvatar","AvitarIcon","grid","Icon","toggleCollectionProperty","arrCollection","targetId","itemIdProp","itemProp","itemVal","itemOppVal","tplCollection","i","l","length","withActiveProp","props","active","toggleText","bool","val1","val2","ListComponent","data","listData","className","map","item","itemIndex","id","BoxContainer","children","TextAndButton","btnState","brandName","text","handleClick","BrandName","Status","setStatus","selectStatus","e","target","value","console","log","more","LightVersion","constructor","state","sideNav","pages","name","title","itemIcon","myCollection","items","toggleSideNav","bind","togglePages","setState","collection","collTargetId","subpageIndex","subpages","render","icon","Lefticon","Righticon","Lefticons","Righticons","subitem"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport UserAvatar from '../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml'\nimport AvitarIcon from '../../../images/avitar.png';\nimport more from '../../../images/More_Vertical.svg';\nimport {grid} from 'react-icons-kit/feather/grid';\nimport { Icon } from 'react-icons-kit';\n\nconst toggleCollectionProperty = ({\n    arrCollection, \n    targetId, \n    itemIdProp,\n    itemProp, \n    itemVal, \n    itemOppVal,\n  }) => {\n    const tplCollection = [...arrCollection];\n    for(let i = 0, l=tplCollection.length; i < l; i += 1) {\n      if(tplCollection[i][itemIdProp] === targetId) {\n        tplCollection[i][itemProp] = itemVal;\n      } else {\n        tplCollection[i][itemProp] = itemOppVal;\n      }\n    }\n    \n    return tplCollection;\n  };\n  \n  \n  const withActiveProp = Component => props => {\n    return (\n      props.active && <Component\n        {...props}\n      />\n    );\n  };\n    \n  const toggleText = (bool, val1, val2) => {\n    return bool ? val1 : val2;\n  };\n  \n  \n  const ListComponent = ({ data: listData, Component, className }) => {\n  \n    if (!listData) {\n  \n      return false;\n  \n    }\n  \n    return (\n      <React.Fragment>\n        {\n          \n          Component && listData.map((item, itemIndex) => (\n            <React.Fragment key={item.id}>\n              { Component(item, itemIndex) }\n            </React.Fragment>\n          ))\n        }\n      </React.Fragment>\n    );\n  \n  };\n  \n  \n  const BoxContainer = ({ className, children }) => {\n    return (\n      <div class={`${className?className:''}`}>\n        { children }\n      </div>\n    );\n  };\n  \n  const TextAndButton = ({ className, btnState, brandName, text, handleClick }) => {\n    function BrandName(props){\n      if(props.active == true){\n      return <h1 className={`${toggleText(className, className, '')}--text`}>{ text }</h1>\n      \n        }\n        else{\n          return null;\n        }\n    }\n    \n    let [Status=\"online\", setStatus] = useState('online');\n    let selectStatus = (e) => {\n      setStatus(e.target.value)\n    }\n    console.log(Status);\n    return (\n      <div className={`${toggleText(className, className, '')}`}>\n        <UserAvatar\n          onClick={handleClick}\n          title=\"Benjamin Parker\"  \n          subtitle={\n            <span className={`${Status} status`}>\n              <select onChange={selectStatus}>\n                <option value=\"online\">Online</option>\n                <option value=\"offline\">Offline</option>\n                <option value=\"away\">Away</option>\n                <option value=\"dnd\">Don't disturb</option>\n              </select>\n            </span>\n          }  \n          avitar={AvitarIcon} hasRound haslg> \n          <img className=\"\" src={AvitarIcon} alt=\"User Avatar\"/>\n          {\n            toggleText(btnState) \n          }\n        </UserAvatar> \n        <div className=\"more\">\n          <img src={more} alt=\"More Icon\"/>\n          {/* <button onClick={handleClick}>\n            {\n              toggleText(btnState, 'Close', 'Open') \n            }\n          </button> */}\n        </div>\n        <BrandName active={brandName} />\n        {/* <button onClick={handleClick}>\n          {\n            toggleText(btnState, 'Close', 'Open') \n          }\n        </button> */}\n      </div>\n    );\n  };\n  \nclass LightVersion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n          sideNav: {\n            active: true,\n          },\n          pages: [\n            {\n              name: 'Dashboard',\n              title: 'Dashboard',\n              itemIcon: grid,\n              active: false,\n              // items: [\n              //   {\n              //     name: 'item11',\n              //     active: true,\n              //   },\n              //   {\n              //     name: 'item12',\n              //     active: false,\n              //   },\n              //   {\n              //     name: 'item13',\n              //     active: false,\n              //   },\n              // ],\n            },\n            {\n              name: 'People',\n              title: 'People',\n              active: true,\n              // items: [\n              //   {\n              //     name: 'item21',\n              //     active: true,\n              //   },\n              //   {\n              //     name: 'item22',\n              //     active: false,\n              //   },\n              //   {\n              //     name: 'item23',\n              //     active: false,\n              //   },\n              // ],\n            },\n            {\n              name: 'Favorites',\n              title: 'Favorites',\n              active: false,\n              // items: [\n              //   {\n              //     name: 'item31',\n              //     active: true,\n              //   },\n              //   {\n              //     name: 'item32',\n              //     active: false,\n              //   },\n              //   {\n              //     name: 'item33',\n              //     active: false,\n              //   },\n              // ],\n            },\n            {\n              name: 'Updates',\n              title: 'Updates',\n            },\n            {\n              name: 'Uploads',\n              title: 'Uploads',\n            },\n            {\n              name: 'Settings',\n              title: 'Settings',\n            }\n          ],  \n          myCollection: [\n            {\n              name: 'my collections',\n              title: 'my collections',\n              items: [\n                {\n                  name: 'Mood Inspiration',\n                  active: false,\n                },\n                {\n                  name: 'International Women’s Day — Editorial Selects',\n                  active: false\n                },\n                {\n                  name: 'Visual Assets for Marketers',\n                  active: false\n                }\n              ]\n\n            }\n          ]\n        }; \n        \n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.togglePages = this.togglePages.bind(this);\n      }\n      \n      \n      toggleSideNav() {\n        const { sideNav } = this.state;\n        sideNav.active = !this.state.sideNav.active\n        this.setState({ sideNav });\n      }\n      \n \n      togglePages(collection, collTargetId, subpageIndex) {\n        let pages = '';\n        if (typeof subpageIndex !== 'number' && !subpageIndex) {\n          pages = toggleCollectionProperty ({\n            arrCollection: collection, \n            targetId: collTargetId, \n            itemIdProp: 'name',\n            itemProp: 'active', \n            itemVal: true, \n            itemOppVal: false,\n          });\n        } else {\n          const subpages = toggleCollectionProperty ({\n            arrCollection: collection, \n            targetId: collTargetId, \n            itemIdProp: 'name',\n            itemProp: 'active', \n            itemVal: true, \n            itemOppVal: false,\n          });\n          pages = this.state.pages;\n          pages[subpageIndex].items = subpages;   \n        }\n        \n        this.setState({ pages });\n      }\n    render() {\n      const {icon, Lefticon, Righticon} = this.props;\n      function Lefticons(props){\n        if(props.active == true){\n              return <span className=\"lefticon\">\n                            {icon}\n                        </span>\n          }\n          else{\n            return null;\n          }\n  \n      }\n      function Righticons(props){\n        if(props.active == true){\n              return <span className=\"righticon\">\n                            {icon}\n                        </span>\n          }\n          else{\n            return null;\n          }\n  \n      }\n        return (\n            <div className=\"sidebar\">\n                <BoxContainer className={`sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`}>\n                    {/* Brand and sidebar toggle button */}\n                    <TextAndButton\n                        className=\"sidebar-head\"\n                        btnState={this.state.sideNav.active}\n                        handleClick={this.toggleSideNav}  \n                        text=\"Brand Name\"\n                        brandName={false}\n\n                    />\n                    <div className=\"sidebar-content\">\n                      <ListComponent\n                        data={this.state.pages}\n                        Component={\n                          (item, itemIndex)=>(\n                            <div className={`menu-item ${toggleText(item.active, 'active', '')}`}>\n                              <a href=\"#/\"\n                                  onClick={()=>this.togglePages(this.state.pages, item.name)}\n                              >{ item.title }</a>\n                              {\n                                  item.items &&\n                                  <ul>\n                                      <ListComponent\n                                        data={item.items}\n                                        Component={\n                                            (subitem)=>(\n                                            <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                                <a href=\"#/\"\n                                                onClick={()=>this.togglePages(item.items, subitem.name, itemIndex)}\n                                                >{ subitem.name }</a>\n                                            </li>\n                                            )\n                                        }\n                                      />\n                                  </ul>\n                              }\n                            </div>\n                          )\n                        }\n                      />\n                      <ListComponent\n                        data={this.state.myCollection}\n                        Component={\n                          (item, itemIndex)=>(\n                            <div className={`my-collection ${toggleText(item.active, 'active', '')}`}>\n                              <span className=\"sub-title\">{ item.title }</span>\n                              {/* code for submenu \n                               {\n                                  item.items &&\n                                  <ul>\n                                      <ListComponent\n                                        data={item.items}\n                                        Component={\n                                            (subitem)=>(\n                                            <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                                <a href=\"#/\"\n                                                onClick={()=>this.togglePages(item.items, subitem.name, itemIndex)}\n                                                >{ subitem.name }</a>\n                                            </li>\n                                            )\n                                        }\n                                      />\n                                  </ul>\n                              } */}\n                            </div>\n                          )\n                        }\n                      />\n                    </div>\n                </BoxContainer>\n            </div>\n        );\n    }\n}\n\nexport default LightVersion;"]},"metadata":{},"sourceType":"module"}