{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/input/radionbtn/radiobtnhtml/Radiobtnhtml.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Radiobtnhtml extends Component {\n  render() {\n    const {\n      id,\n      label,\n      width,\n      height,\n      onChange,\n      value,\n      hasError,\n      ...inputProps\n    } = this.props;\n    const checkboxClassname = `\n        m-radio \n       \n          ${hasError && 'm-checkbox--has-error'}\n        `;\n    const inputClassname = `\n          m-radio__input\n         \n         \n          ${hasError && 'm-checkbox--has-error__input'}\n        `;\n    const labelClassname = `\n        m-radio__label\n      `;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: checkboxClassname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      type: \"radio\",\n      className: inputClassname,\n      ref: el => this.selector = el,\n      id: id,\n      value: this.props.value,\n      onChange: this.props.onChange.bind(this)\n    }, inputProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: labelClassname,\n      htmlFor: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, label)));\n  }\n\n}\n\nRadiobtnhtml.propTypes = {\n  hasError: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\nRadiobtnhtml.defaultProps = {\n  hasError: false\n};\nexport default Radiobtnhtml;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/input/radionbtn/radiobtnhtml/Radiobtnhtml.js"],"names":["React","Component","PropTypes","Radiobtnhtml","render","id","label","width","height","onChange","value","hasError","inputProps","props","checkboxClassname","inputClassname","labelClassname","el","selector","bind","propTypes","bool","string","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAYjCG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAYC,MAAAA,KAAZ;AAAkBC,MAAAA,MAAlB;AAAyBC,MAAAA,QAAzB;AAAkCC,MAAAA,KAAlC;AAA0CC,MAAAA,QAA1C;AAAoD,SAAGC;AAAvD,QAAsE,KAAKC,KAAjF;AACA,UAAMC,iBAAiB,GAAI;;;YAGvBH,QAAQ,IAAI,uBAAwB;SAHxC;AAMA,UAAMI,cAAc,GAAI;;;;YAIpBJ,QAAQ,IAAI,8BAA+B;SAJ/C;AAOA,UAAMK,cAAc,GAAI;;OAAxB;AAGA,WACI,0CAEA;AAAK,MAAA,SAAS,EAAEF,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAEC,cAFb;AAGE,MAAA,GAAG,EAAEE,EAAE,IAAK,KAAKC,QAAL,GAAgBD,EAH9B;AAIE,MAAA,EAAE,EAAEZ,EAJN;AAKE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWH,KALpB;AAME,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWJ,QAAX,CAAoBU,IAApB,CAAyB,IAAzB;AANZ,OAOMP,UAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFH,EAWG;AAAO,MAAA,SAAS,EAAEI,cAAlB;AAAkC,MAAA,OAAO,EAAEX,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDC,KAAhD,CAXH,CAFA,CADJ;AAmBH;;AAjDgC;;AAA/BH,Y,CACKiB,S,GAAY;AACfT,EAAAA,QAAQ,EAAET,SAAS,CAACmB,IADL;AAEfhB,EAAAA,EAAE,EAAEH,SAAS,CAACoB,MAAV,CAAiBC,UAFN;AAGfjB,EAAAA,KAAK,EAAEJ,SAAS,CAACoB,MAAV,CAAiBC;AAHT,C;AADjBpB,Y,CAMOqB,Y,GAAe;AACpBb,EAAAA,QAAQ,EAAE;AADU,C;AA8C5B,eAAeR,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Radiobtnhtml extends Component {\n    static propTypes = {\n        hasError: PropTypes.bool,\n        id: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n      };\n      static defaultProps = {\n        hasError: false,\n        \n      };\n\n    \n    render() {\n        const { id, label,width,height,onChange,value,  hasError, ...inputProps } = this.props;\n        const checkboxClassname = `\n        m-radio \n       \n          ${hasError && 'm-checkbox--has-error'}\n        `;\n        \n        const inputClassname = `\n          m-radio__input\n         \n         \n          ${hasError && 'm-checkbox--has-error__input'}\n        `;\n        \n        const labelClassname = `\n        m-radio__label\n      `;\n        return (\n            <>\n              \n            <div className={checkboxClassname}>\n           \n               <input\n                 type=\"radio\"\n                 className={inputClassname}\n                 ref={el => (this.selector = el)}\n                 id={id}\n                 value={this.props.value}\n                 onChange={this.props.onChange.bind(this)}\n                 {...inputProps}\n               />\n               <label className={labelClassname} htmlFor={id}>{label}</label>      \n            </div>\n          \n       </>\n        );\n    }\n}\n\nexport default Radiobtnhtml;"]},"metadata":{},"sourceType":"module"}