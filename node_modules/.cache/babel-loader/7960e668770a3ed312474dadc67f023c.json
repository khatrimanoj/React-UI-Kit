{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Carousel/Arrows.js\";\nimport React, { Component } from 'react';\n\nclass Arrows extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderArrowWithAddedHandler = (element, onClick, name, disable = false) => React.createElement(\"div\", {\n      className: classnames('Carousel__customArrows', {\n        'Carousel__arrow--disable': disable\n      }, `Carousel__custom-${name}`),\n      ref: el => this[`${name}Node`] = el,\n      onClick: this.getProp('addArrowClickHandler') ? onClick : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, element);\n\n    this.renderArrowLeft = () => {\n      const value = this.getCurrentValue();\n      const disabled = value <= 0 && !this.getProp('infinite');\n\n      if (this.getProp('arrowLeft')) {\n        if (!disabled) {\n          return this.renderArrowWithAddedHandler(this.getProp('arrowLeft'), this.prevSlide, 'arrowLeft');\n        }\n\n        const arrow = this.getProp('arrowLeftDisabled') ? this.getProp('arrowLeftDisabled') : this.getProp('arrowLeft');\n        return this.renderArrowWithAddedHandler(arrow, this.prevSlide, 'arrowLeft', disabled);\n      }\n\n      if (this.getProp('arrows')) {\n        return React.createElement(\"button\", {\n          className: \"Carousel__arrows Carousel__arrowLeft\",\n          onClick: this.prevSlide,\n          ref: el => this.arrowLeftNode = el,\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"prev\"));\n      }\n\n      return null;\n    };\n\n    this.renderArrowRight = () => {\n      const slides = this.getChildren();\n      const value = this.getCurrentValue();\n      const lastSlideIndex = slides.length - 1;\n      const disabled = value === lastSlideIndex && !this.getProp('infinite');\n\n      if (this.getProp('arrowRight')) {\n        if (!disabled) {\n          return this.renderArrowWithAddedHandler(this.getProp('arrowRight'), this.nextSlide, 'arrowRight');\n        }\n\n        const arrow = this.getProp('arrowRightDisabled') ? this.getProp('arrowRightDisabled') : this.getProp('arrowRight');\n        return this.renderArrowWithAddedHandler(arrow, this.nextSlide, 'arrowRight', disabled);\n      }\n\n      if (this.getProp('arrows')) {\n        return React.createElement(\"button\", {\n          className: \"Carousel__arrows Carousel__arrowRight\",\n          onClick: this.nextSlide,\n          ref: el => this.arrowRightNode = el,\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"next\"));\n      }\n\n      return null;\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.arrowLeftNode, this.arrowRightNode);\n  }\n\n}\n\nexport default Arrows;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Carousel/Arrows.js"],"names":["React","Component","Arrows","renderArrowWithAddedHandler","element","onClick","name","disable","classnames","el","getProp","renderArrowLeft","value","getCurrentValue","disabled","prevSlide","arrow","arrowLeftNode","renderArrowRight","slides","getChildren","lastSlideIndex","length","nextSlide","arrowRightNode","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Arrows extends Component {\n    /**\n   * Adds onClick handler to the arrow if possible (if it does not already have one)\n   * @param {ReactElement} element to render\n   * @param {function} onClick handler to be added to element\n   * @param {string} name of an element\n   * @param {boolean} disable info whether the arrow is disabled\n   * @return {ReactElement} element with added handler\n   */\n  renderArrowWithAddedHandler = (element, onClick, name, disable = false) => (\n    <div\n      className={\n        classnames(\n          'Carousel__customArrows',\n          {\n            'Carousel__arrow--disable': disable,\n          },\n          `Carousel__custom-${name}`,\n        )\n      }\n      ref={el => this[`${name}Node`] = el}\n      onClick={this.getProp('addArrowClickHandler') ? onClick : null}\n    >\n      {element}\n    </div>\n  );\n    /**\n   * Renders arrow left\n   * @return {ReactElement} element\n   */\n  renderArrowLeft = () => {\n    const value = this.getCurrentValue();\n    const disabled = value <= 0 && !this.getProp('infinite');\n\n    if (this.getProp('arrowLeft')) {\n      if (!disabled) {\n        return this.renderArrowWithAddedHandler(this.getProp('arrowLeft'), this.prevSlide, 'arrowLeft');\n      }\n      const arrow = this.getProp('arrowLeftDisabled') ? this.getProp('arrowLeftDisabled') : this.getProp('arrowLeft');\n      return this.renderArrowWithAddedHandler(arrow, this.prevSlide, 'arrowLeft', disabled);\n    }\n    if (this.getProp('arrows')) {\n      return (\n        <button\n          className=\"Carousel__arrows Carousel__arrowLeft\"\n          onClick={this.prevSlide}\n          ref={el => this.arrowLeftNode = el}\n          disabled={disabled}\n        >\n          <span>prev</span>\n        </button>\n      );\n    }\n    return null;\n  };\n\n  /**\n   * Renders arrow right\n   * @return {ReactElement} element\n   */\n  renderArrowRight = () => {\n    const slides = this.getChildren();\n    const value = this.getCurrentValue();\n    const lastSlideIndex = slides.length - 1;\n    const disabled = value === lastSlideIndex && !this.getProp('infinite');\n\n    if (this.getProp('arrowRight')) {\n      if (!disabled) {\n        return this.renderArrowWithAddedHandler(this.getProp('arrowRight'), this.nextSlide, 'arrowRight');\n      }\n      const arrow = this.getProp('arrowRightDisabled') ? this.getProp('arrowRightDisabled') : this.getProp('arrowRight');\n      return this.renderArrowWithAddedHandler(arrow, this.nextSlide, 'arrowRight', disabled);\n    }\n    if (this.getProp('arrows')) {\n      return (\n        <button\n          className=\"Carousel__arrows Carousel__arrowRight\"\n          onClick={this.nextSlide}\n          ref={el => this.arrowRightNode = el}\n          disabled={disabled}\n        >\n          <span>next</span>\n        </button>\n      );\n    }\n    return null;\n  };\n    render() {\n        return (\n            <>\n                {this.arrowLeftNode}\n                {this.arrowRightNode}\n            </>\n        );\n    }\n}\n\nexport default Arrows;"]},"metadata":{},"sourceType":"module"}