{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/Dropdownprop/dropdownmenu/dropdownmenu.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../../button/buttonprop/buttonprop';\n\nclass dropdownmenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        searchString: e.target.value\n      });\n    };\n\n    this.state = {\n      jsxData: [],\n      submenu: [],\n      searchString: ''\n    };\n    this.inputRef = React.createRef();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      jsxData: this.createMenuJSX()\n    });\n  }\n\n  menuClickEvent(i) {\n    let submenu = this.state.submenu;\n    let tmpmenu = submenu[i];\n    let sub = tmpmenu.sub.current;\n    let caret = tmpmenu.caret.current;\n\n    if (tmpmenu.active === false) {\n      tmpmenu.active = true;\n    } else {\n      tmpmenu.active = false;\n    }\n\n    submenu[i] = tmpmenu;\n    this.setState({\n      submenu: submenu\n    });\n  }\n\n  createMenuJSX(menu = this.props.menu) {\n    let link = [];\n\n    for (let i in menu) {\n      let m = menu[i];\n      let number = null;\n      let title = null;\n      let subtitle = null;\n      let icon = null;\n\n      if (typeof m.count !== 'undefined') {\n        number = /*#__PURE__*/React.createElement(\"span\", {\n          className: `pull-right ` + this.props.countstyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 22\n          }\n        }, m.count);\n      }\n\n      if (typeof m.title !== 'undefined') {\n        title = /*#__PURE__*/React.createElement(\"a\", {\n          href: m.link,\n          className: \"d-headeing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }\n        }, icon, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 70\n          }\n        }, m.title));\n      }\n\n      if (typeof m.subtitle !== 'undefined') {\n        subtitle = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"dropdown-subtitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 24\n          }\n        }, m.subtitle);\n      }\n\n      if (typeof m.icon !== 'undefined') {\n        icon = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"dicon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 20\n          }\n        }, m.icon);\n      }\n\n      if (typeof m.menu === 'undefined') {\n        link.push( /*#__PURE__*/React.createElement(\"li\", {\n          value: m.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: m.link,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }\n        }, icon, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, m.name, subtitle), number)));\n      } else if (typeof m.menu === 'object') {\n        let tmpSubmenu = this.state.submenu;\n        tmpSubmenu.push({\n          'id': m.link,\n          'active': false,\n          'caret': React.createRef(),\n          'sub': React.createRef()\n        });\n        link.push( /*#__PURE__*/React.createElement(\"li\", {\n          className: \"headingdropdown\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        }, title, /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"Dropdown-sub-ul\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }\n        }, this.createMenuJSX(m.menu))));\n        this.setState({\n          submenu: tmpSubmenu\n        });\n      }\n    }\n\n    return link;\n  }\n\n  render() {\n    const {\n      btnstyle,\n      btnlable,\n      btnicon\n    } = this.props;\n\n    function Searchhtml(props) {\n      if (props.active == true) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"dropdownsearch\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          value: props.values,\n          onChange: props.change,\n          placeholder: \"Type here...\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 54\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 148\n          }\n        })));\n      } else {\n        return null;\n      }\n    }\n\n    function Buttonhtml(props) {\n      if (props.active == true) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"no-padding-bottom no-hover-bg d-btnli\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          style: btnstyle,\n          label: btnlable,\n          Lefticon: true,\n          icon: btnicon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 77\n          }\n        }));\n      } else {\n        return null;\n      }\n    }\n    /* searching code start here*/\n\n\n    let libraries = this.state.jsxData,\n        searchString = this.state.searchString.trim().toLowerCase();\n\n    if (searchString.length > 0) {\n      libraries = libraries.filter(function (i) {\n        return i.name.toLowerCase().match(searchString);\n      });\n    }\n    /*searching script end here*/\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown open lg-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"dropdown-menu p-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Searchhtml, {\n      active: this.props.search,\n      values: this.state.searchString,\n      change: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }), libraries, this.props.children, /*#__PURE__*/React.createElement(Buttonhtml, {\n      active: this.props.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 20\n      }\n    })));\n  }\n\n}\n\ndropdownmenu.propTypes = {\n  search: PropTypes.string.isRequired\n};\ndropdownmenu.defaultProps = {\n  search: false\n};\nexport default dropdownmenu;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/Dropdownprop/dropdownmenu/dropdownmenu.js"],"names":["React","Component","PropTypes","Button","dropdownmenu","constructor","props","handleChange","e","setState","searchString","target","value","state","jsxData","submenu","inputRef","createRef","bind","componentDidMount","createMenuJSX","menuClickEvent","i","tmpmenu","sub","current","caret","active","menu","link","m","number","title","subtitle","icon","count","countstyle","push","id","name","tmpSubmenu","render","btnstyle","btnlable","btnicon","Searchhtml","values","change","Buttonhtml","libraries","trim","toLowerCase","length","filter","match","search","children","button","propTypes","string","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../../button/buttonprop/buttonprop';\n\n\nclass dropdownmenu extends Component {\n  static propTypes = {\n    search: PropTypes.string.isRequired\n   \n};\nstatic defaultProps = {\n  search: false,\n};\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          jsxData: [],\n          submenu: [],\n          searchString: ''\n\n        };\n        this.inputRef = React.createRef();\n        this.handleChange = this.handleChange.bind(this);\n      }\n      \n      componentDidMount() {\n        this.setState({jsxData: this.createMenuJSX()});\n      }\n      menuClickEvent(i) {\n        let submenu = this.state.submenu;\n        let tmpmenu = submenu[i];\n        let sub     = tmpmenu.sub.current;\n        let caret   = tmpmenu.caret.current;\n    \n        if (tmpmenu.active === false) {\n          tmpmenu.active = true;\n        } else {\n          tmpmenu.active = false;\n        }\n        \n        submenu[i] = tmpmenu;\n        \n        this.setState({submenu: submenu});\n      }\n      createMenuJSX(menu = this.props.menu) {\n        let link = [];\n        \n    \n        for (let i in menu) {\n          let m  = menu[i];\n          let number = null;\n          let title = null;\n          let subtitle = null;\n          let icon = null;\n\n\n          if (typeof m.count !== 'undefined') {\n            number = <span className={`pull-right ` + this.props.countstyle}>{m.count}</span>;\n          }\n          \n\n          if (typeof m.title !== 'undefined') {\n              title = <a href={m.link} className=\"d-headeing\" >{icon}<span>{m.title}</span></a>;\n          }\n\n          if (typeof m.subtitle !== 'undefined') {\n            subtitle = <span className=\"dropdown-subtitle\">{m.subtitle}</span>;\n           }\n\n          \n          if (typeof m.icon !== 'undefined') {\n            icon = <span className=\"dicon\">{m.icon}</span>;\n          }\n    \n          if (typeof m.menu === 'undefined') {\n            link.push(\n              <li value={m.id}>\n                <a href={m.link}>\n                  {icon}\n            <span>{m.name}{subtitle}</span>  \n                           {number} \n                </a>\n              </li>\n            );\n          } else if (typeof m.menu === 'object') {\n            let tmpSubmenu = this.state.submenu;\n    \n            tmpSubmenu.push({\n              'id': m.link,\n              'active': false,\n              'caret': React.createRef(),\n              'sub': React.createRef()\n            });\n    \n            link.push(\n              <li className=\"headingdropdown\" >\n                  {title}\n                <ul className=\"Dropdown-sub-ul\" >\n                  {this.createMenuJSX(m.menu)}\n                </ul>\n              </li>\n            );\n    \n            this.setState({submenu: tmpSubmenu});\n          }\n          \n        }\n    \n        return link;\n      }\n      handleChange = (e) => {\n        this.setState({ searchString:e.target.value });\n      }\n    render() {\n        \n      const { btnstyle,btnlable,btnicon } = this.props;\n\n\n      function Searchhtml(props){\n        if(props.active == true){\n              return <li><div class=\"dropdownsearch\"><input type=\"text\" value={props.values} onChange={props.change} placeholder=\"Type here...\"  /><button></button></div></li>\n          }\n          else{\n            return null;\n          }\n       }\n       function Buttonhtml(props){\n        if(props.active == true){\n              return <li  className=\"no-padding-bottom no-hover-bg d-btnli\"><Button\n              style={btnstyle} \n              label={btnlable} \n              Lefticon={true}\n              icon={btnicon}\n               /></li>\n          }\n          else{\n            return null;\n          }\n       }\n         /* searching code start here*/ \n         let libraries = this.state.jsxData,\n         searchString = this.state.searchString.trim().toLowerCase();\n     if (searchString.length > 0) {\n       libraries = libraries.filter(function(i) {\n         return i.name.toLowerCase().match( searchString );\n       });\n     }\n       /*searching script end here*/ \n       \n        return (\n            <div className=\"dropdown open lg-dropdown\">\n              \n                <ul className=\"dropdown-menu p-relative\">\n                  <Searchhtml active={this.props.search} values={this.state.searchString} change={this.handleChange}  />\n                {/* {this.state.jsxData} */}\n                {libraries}\n                {this.props.children}\n                   <Buttonhtml active={this.props.button} />\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default dropdownmenu;"]},"metadata":{},"sourceType":"module"}