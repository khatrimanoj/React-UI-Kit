{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/editableSlider.js\";\nimport React, { Component } from 'react';\n\nclass EditableSlider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderWidth: 0,\n      offsetSliderWidht: 0,\n      min: 0,\n      max: 200,\n      minValueBetween: 10,\n      currentMin: 55,\n      inputMin: 55,\n      currentMax: 100,\n      inputMax: 100\n    };\n\n    this.setMin = e => {\n      const {\n        min,\n        max,\n        currentMax,\n        minValueBetween\n      } = this.state;\n      const inputMin = e.target.value;\n      this.setState({\n        inputMin\n      });\n\n      if (inputMin >= min && inputMin <= currentMax - minValueBetween) {\n        this.setState({\n          currentMin: parseInt(inputMin)\n        });\n        this.minValue.style.width = inputMin * 100 / max + \"%\";\n      }\n    };\n\n    this.changeMinValue = e => {\n      e.preventDefault();\n      document.addEventListener('mousemove', this.onMouseMoveMin);\n      document.addEventListener('mouseup', this.onMouseUpMin);\n      document.addEventListener('touchmove', this.onMouseMoveMin);\n      document.addEventListener('touchend', this.onMouseUpMin);\n    };\n\n    this.onMouseMoveMin = e => {\n      const {\n        min,\n        max,\n        currentMax,\n        minValueBetween,\n        sliderWidth,\n        offsetSliderWidht\n      } = this.state;\n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = dragedWidht * 100 / sliderWidth;\n      const currentMin = Math.abs(parseInt(max * dragedWidhtInPercent / 100));\n      console.log(e.pageX, e.clientX, offsetSliderWidht);\n      console.log(currentMin, currentMax - minValueBetween);\n      console.log(max * dragedWidhtInPercent / 100);\n\n      if (currentMin >= min && currentMin <= currentMax - minValueBetween) {\n        this.minValue.style.width = dragedWidhtInPercent + \"%\";\n        this.minValue.dataset.content = currentMin;\n        this.setState({\n          currentMin,\n          inputMin: currentMin\n        });\n      }\n    };\n\n    this.onMouseUpMin = () => {\n      document.removeEventListener('mouseup', this.onMouseUpMin);\n      document.removeEventListener('mousemove', this.onMouseMoveMin);\n      document.removeEventListener('touchend', this.onMouseMoveMin);\n      document.removeEventListener('touchmove', this.onMouseUpMin);\n    };\n\n    this.setMax = e => {\n      const {\n        min,\n        max,\n        currentMin,\n        currentMax,\n        minValueBetween\n      } = this.state;\n      const inputMax = e.target.value;\n      this.setState({\n        inputMax\n      });\n\n      if (inputMax >= currentMin + minValueBetween && inputMax <= max) {\n        this.setState({\n          currentMax: parseInt(inputMax)\n        });\n        this.maxValue.style.width = inputMax * 100 / max + \"%\";\n      }\n    };\n\n    this.changeMaxValue = e => {\n      e.preventDefault();\n      document.addEventListener('mousemove', this.onMouseMoveMax);\n      document.addEventListener('mouseup', this.onMouseUpMax);\n      document.addEventListener('touchmove', this.onMouseMoveMax);\n      document.addEventListener('touchend', this.onMouseUpMax);\n    };\n\n    this.onMouseMoveMax = e => {\n      const {\n        max,\n        currentMin,\n        minValueBetween,\n        sliderWidth,\n        offsetSliderWidht\n      } = this.state;\n      const maxWalueThumb = this.maxValue;\n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = dragedWidht * 100 / sliderWidth;\n      const currentMax = Math.abs(parseInt(max * dragedWidhtInPercent / 100));\n\n      if (currentMax >= currentMin + minValueBetween && currentMax <= max) {\n        maxWalueThumb.style.width = dragedWidhtInPercent + \"%\";\n        maxWalueThumb.dataset.content = currentMax;\n        this.setState({\n          currentMax,\n          inputMax: currentMax\n        });\n      }\n    };\n\n    this.onMouseUpMax = () => {\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('mousemove', this.onMouseMoveMax);\n      document.removeEventListener('touchend', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onMouseMoveMax);\n    };\n\n    this.maxForMin = () => {\n      const {\n        currentMax,\n        minValueBetween\n      } = this.state;\n      return currentMax - minValueBetween;\n    };\n\n    this.minForMax = () => {\n      const {\n        currentMin,\n        minValueBetween\n      } = this.state;\n      return currentMin + minValueBetween;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentMin,\n      currentMax,\n      max\n    } = this.state;\n    this.minValue.style.width = currentMin * 100 / max + \"%\";\n    this.maxValue.style.width = currentMax * 100 / max + \"%\";\n    this.setState({\n      sliderWidth: this.slider.offsetWidth,\n      offsetSliderWidht: this.slider.offsetLeft\n    });\n  }\n\n  render() {\n    const {\n      min,\n      max,\n      currentMin,\n      inputMin,\n      currentMax,\n      inputMax,\n      minValueBetween\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"current-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"min-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Min: \"), React.createElement(\"input\", {\n      id: \"min-input\",\n      type: \"number\",\n      onChange: this.setMin,\n      value: inputMin,\n      min: min,\n      max: this.maxForMin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"max-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Max: \"), React.createElement(\"input\", {\n      id: \"max-input\",\n      type: \"number\",\n      onChange: this.setMax,\n      value: inputMax,\n      min: this.minForMax,\n      max: max,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"values\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, min), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, max)), React.createElement(\"div\", {\n      ref: ref => this.slider = ref,\n      id: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.minValue = ref,\n      id: \"min\",\n      \"data-content\": currentMin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.minValueDrag = ref,\n      id: \"min-drag\",\n      onMouseDown: this.changeMinValue,\n      onTouchStart: this.changeMinValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ref: ref => this.maxValue = ref,\n      id: \"max\",\n      \"data-content\": currentMax,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.maxValueDrag = ref,\n      id: \"max-drag\",\n      onMouseDown: this.changeMaxValue,\n      onTouchStart: this.changeMaxValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default EditableSlider;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/editableSlider.js"],"names":["React","Component","EditableSlider","state","sliderWidth","offsetSliderWidht","min","max","minValueBetween","currentMin","inputMin","currentMax","inputMax","setMin","e","target","value","setState","parseInt","minValue","style","width","changeMinValue","preventDefault","document","addEventListener","onMouseMoveMin","onMouseUpMin","dragedWidht","clientX","dragedWidhtInPercent","Math","abs","console","log","pageX","dataset","content","removeEventListener","setMax","maxValue","changeMaxValue","onMouseMoveMax","onMouseUpMax","maxWalueThumb","onMouseUp","maxForMin","minForMax","componentDidMount","slider","offsetWidth","offsetLeft","render","ref","minValueDrag","maxValueDrag"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nclass EditableSlider extends Component {\n    state = {\n      sliderWidth: 0,\n      offsetSliderWidht: 0,\n      min: 0,\n      max: 200,\n      minValueBetween: 10,\n      \n      currentMin: 55,\n      inputMin: 55,\n      \n      currentMax: 100,\n      inputMax: 100\n    };\n  \n   componentDidMount() {\n     const { currentMin, currentMax, max } = this.state;\n     \n     this.minValue.style.width = (currentMin*100)/max + \"%\";\n     this.maxValue.style.width = (currentMax*100)/max + \"%\";\n     \n     this.setState({\n       sliderWidth: this.slider.offsetWidth,\n       offsetSliderWidht: this.slider.offsetLeft,\n     })\n   }\n  \n    setMin = (e) => {\n      const { min, max, currentMax, minValueBetween } = this.state;\n      const inputMin = e.target.value;\n      \n      this.setState({\n          inputMin\n      });\n      \n      if((inputMin >= min) && (inputMin <= (currentMax-minValueBetween))){\n        this.setState({\n          currentMin: parseInt(inputMin)\n        }); \n  \n        this.minValue.style.width = (inputMin*100)/max + \"%\";\n      }\n    }\n  \n    changeMinValue = (e) => {\n      e.preventDefault();\n  \n      document.addEventListener('mousemove', this.onMouseMoveMin);\n      document.addEventListener('mouseup', this.onMouseUpMin);\n      \n      document.addEventListener('touchmove', this.onMouseMoveMin);\n      document.addEventListener('touchend', this.onMouseUpMin);\n    }\n  \n    onMouseMoveMin = (e) => {\n      const { min, max, currentMax, minValueBetween, sliderWidth, offsetSliderWidht } = this.state;\n      \n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = (dragedWidht*100)/sliderWidth;\n      const currentMin = Math.abs(parseInt((max * dragedWidhtInPercent)/100));\n      \n      console.log(e.pageX, e.clientX, offsetSliderWidht);\n      \n      console.log(currentMin , (currentMax-minValueBetween));\n      \n      console.log((max * dragedWidhtInPercent)/100);\n   \n      if( (currentMin >= min) && (currentMin <= (currentMax-minValueBetween))){\n        this.minValue.style.width = dragedWidhtInPercent + \"%\";\n        this.minValue.dataset.content = currentMin;\n  \n        this.setState({\n          currentMin,\n          inputMin: currentMin\n        })\n      }\n    }\n  \n    onMouseUpMin = () => {\n      document.removeEventListener('mouseup', this.onMouseUpMin);\n      document.removeEventListener('mousemove', this.onMouseMoveMin);\n      \n      document.removeEventListener('touchend', this.onMouseMoveMin);\n      document.removeEventListener('touchmove', this.onMouseUpMin);\n    }\n    \n    \n    setMax = (e) => {\n      const { min, max, currentMin, currentMax, minValueBetween } = this.state;\n  \n      const inputMax = e.target.value;\n      \n      this.setState({\n          inputMax\n      });\n  \n      if((inputMax >= currentMin + minValueBetween) && (inputMax <= max)){\n        \n        this.setState({\n          currentMax: parseInt(inputMax)\n        });\n        this.maxValue.style.width = (inputMax*100)/max + \"%\";\n      }\n        \n    }\n    \n    changeMaxValue = (e) => {\n      e.preventDefault();\n  \n      document.addEventListener('mousemove', this.onMouseMoveMax);\n      document.addEventListener('mouseup', this.onMouseUpMax);\n      \n      document.addEventListener('touchmove', this.onMouseMoveMax);\n      document.addEventListener('touchend', this.onMouseUpMax);\n    }\n  \n    onMouseMoveMax = (e) => {\n      const { max, currentMin, minValueBetween, sliderWidth, offsetSliderWidht} = this.state; \n      const maxWalueThumb = this.maxValue;\n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = (dragedWidht*100)/sliderWidth;\n      const currentMax = Math.abs(parseInt((max * dragedWidhtInPercent)/100));\n      \n      if( (currentMax >= (currentMin + minValueBetween)) && (currentMax <= max)){\n        \n        maxWalueThumb.style.width = dragedWidhtInPercent + \"%\";\n        maxWalueThumb.dataset.content = currentMax;\n        this.setState({\n          currentMax,\n          inputMax: currentMax\n        })\n      }\n    }\n  \n    onMouseUpMax = () => {\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('mousemove', this.onMouseMoveMax);\n      \n      document.removeEventListener('touchend', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onMouseMoveMax);\n    }\n    \n    maxForMin = () => {\n      const { currentMax, minValueBetween} = this.state; \n      return currentMax - minValueBetween;\n    }\n    \n    minForMax = () => {\n      const { currentMin, minValueBetween} = this.state; \n      return currentMin + minValueBetween;\n    }\n  \n  \n    render() {\n      const { min, max, currentMin, inputMin, currentMax, inputMax, minValueBetween } = this.state;\n      \n      return (\n        <>\n          <div className=\"current-value\">\n            <label htmlFor=\"min-input\">Min: </label>\n            <input \n              id=\"min-input\" \n              type=\"number\" \n              onChange={this.setMin} \n              value={inputMin}\n              min={min}\n              max={this.maxForMin}/>\n            \n            <br/>\n            <label htmlFor=\"max-input\">Max: </label>\n            <input \n              id=\"max-input\" \n              type=\"number\" \n              onChange={this.setMax} \n              value={inputMax}\n              min={this.minForMax}\n              max={max}/>\n            \n          </div>\n          \n          <div className=\"values\">\n            <div>{ min }</div>\n            <div>{ max }</div>\n          </div>\n            \n          <div ref={ref => this.slider = ref} id=\"slider\">\n  \n            <div ref={ref => this.minValue = ref} id=\"min\" data-content={currentMin}>\n              <div ref={ref => this.minValueDrag = ref} id=\"min-drag\" onMouseDown ={this.changeMinValue} onTouchStart={this.changeMinValue}></div>\n            </div>\n  \n            <div ref={ref => this.maxValue = ref} id=\"max\" data-content={currentMax}>\n              <div ref={ref => this.maxValueDrag = ref} id=\"max-drag\" onMouseDown={this.changeMaxValue} onTouchStart={this.changeMaxValue}></div>\n            </div>\n  \n          </div>\n        </>\n      )\n    }\n}\n\nexport default EditableSlider;"]},"metadata":{},"sourceType":"module"}