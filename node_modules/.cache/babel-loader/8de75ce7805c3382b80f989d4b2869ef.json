{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ProgressIndicators/Types/CircularIndicators.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst CircularIndicators = props => {\n  const [offset, setOffset] = useState(0);\n  const {\n    size,\n    progress,\n    strokeWidth,\n    circleOneStroke,\n    circleTwoStroke,\n    className\n  } = props;\n  const center = size / 2;\n  const radius = size / 2 - strokeWidth / 2;\n  const circumference = 2 * Math.PI * radius;\n  useEffect(() => {\n    const progressOffset = (100 - progress) / 100 * circumference;\n    setOffset(progressOffset);\n  }, [setOffset, progress, circumference, offset]);\n  return React.createElement(\"svg\", {\n    className: className,\n    width: size,\n    height: size,\n    fill: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    className: \"circular-bg\",\n    stroke: circleOneStroke,\n    cx: center,\n    cy: center,\n    r: radius,\n    strokeWidth: strokeWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"circle\", {\n    className: \"circle-bar\",\n    stroke: circleTwoStroke,\n    cx: center,\n    cy: center,\n    r: radius,\n    strokeWidth: strokeWidth,\n    strokeDasharray: circumference,\n    strokeDashoffset: offset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nexport default CircularIndicators;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ProgressIndicators/Types/CircularIndicators.js"],"names":["React","useEffect","useState","CircularIndicators","props","offset","setOffset","size","progress","strokeWidth","circleOneStroke","circleTwoStroke","className","center","radius","circumference","Math","PI","progressOffset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AACFK,IAAAA,IADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,eAJE;AAKFC,IAAAA,eALE;AAMFC,IAAAA;AANE,MAOFR,KAPJ;AASA,QAAMS,MAAM,GAAGN,IAAI,GAAG,CAAtB;AACA,QAAMO,MAAM,GAAGP,IAAI,GAAE,CAAN,GAAUE,WAAW,GAAG,CAAvC;AACA,QAAMM,aAAa,GAAG,IAAIC,IAAI,CAACC,EAAT,GAAcH,MAApC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,cAAc,GAAI,CAAC,MAAMV,QAAP,IAAmB,GAApB,GAA2BO,aAAlD;AACAT,IAAAA,SAAS,CAACY,cAAD,CAAT;AACH,GAHQ,EAGN,CAACZ,SAAD,EAAYE,QAAZ,EAAsBO,aAAtB,EAAqCV,MAArC,CAHM,CAAT;AAKA,SACI;AACI,IAAA,SAAS,EAAEO,SADf;AAEI,IAAA,KAAK,EAAEL,IAFX;AAGI,IAAA,MAAM,EAAEA,IAHZ;AAII,IAAA,IAAI,EAAC,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AACI,IAAA,SAAS,EAAC,aADd;AAEI,IAAA,MAAM,EAAEG,eAFZ;AAGI,IAAA,EAAE,EAAEG,MAHR;AAII,IAAA,EAAE,EAAEA,MAJR;AAKI,IAAA,CAAC,EAAEC,MALP;AAMI,IAAA,WAAW,EAAEL,WANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAeI;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,MAAM,EAAEE,eAFZ;AAGI,IAAA,EAAE,EAAEE,MAHR;AAII,IAAA,EAAE,EAAEA,MAJR;AAKI,IAAA,CAAC,EAAEC,MALP;AAMI,IAAA,WAAW,EAAEL,WANjB;AAOI,IAAA,eAAe,EAAEM,aAPrB;AAQI,IAAA,gBAAgB,EAAEV,MARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADJ;AA8BH,CAlDD;;AAmDA,eAAeF,kBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CircularIndicators = props => {\n    const [offset, setOffset] = useState(0);\n    const {\n        size,\n        progress,\n        strokeWidth,\n        circleOneStroke,\n        circleTwoStroke,\n        className,\n    } = props;\n\n    const center = size / 2;\n    const radius = size/ 2 - strokeWidth / 2;\n    const circumference = 2 * Math.PI * radius;\n\n    useEffect(() => {\n        const progressOffset = ((100 - progress) / 100) * circumference;\n        setOffset(progressOffset);\n    }, [setOffset, progress, circumference, offset]);\n\n    return (\n        <svg \n            className={className}\n            width={size}\n            height={size}\n            fill=\"transparent\"\n        >\n            <circle\n                className=\"circular-bg\"\n                stroke={circleOneStroke}\n                cx={center}\n                cy={center}\n                r={radius}\n                strokeWidth={strokeWidth}\n            >\n            </circle>\n            <circle\n                className=\"circle-bar\"\n                stroke={circleTwoStroke}\n                cx={center}\n                cy={center}\n                r={radius}\n                strokeWidth={strokeWidth}\n                strokeDasharray={circumference}\n                strokeDashoffset={offset}\n            >\n                \n            </circle>\n        </svg>\n    );\n}\nexport default CircularIndicators;"]},"metadata":{},"sourceType":"module"}