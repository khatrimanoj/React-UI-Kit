{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/doubleSlider.js\";\nimport React, { Component } from 'react';\n\nclass doubleSlider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sliderWidth: 0,\n      offsetSliderWidht: 0,\n      min: 0,\n      max: 100,\n      minValueBetween: 10,\n      currentMin: 35,\n      inputMin: 35,\n      currentMax: 65,\n      inputMax: 65\n    };\n\n    this.setMin = e => {\n      const {\n        min,\n        max,\n        currentMax,\n        minValueBetween\n      } = this.state;\n      const inputMin = e.target.value;\n      this.setState({\n        inputMin\n      });\n\n      if (inputMin >= min && inputMin <= currentMax - minValueBetween) {\n        this.setState({\n          currentMin: parseInt(inputMin)\n        });\n        this.minValue.style.width = inputMin * 100 / max + \"%\";\n      }\n    };\n\n    this.changeMinValue = e => {\n      e.preventDefault();\n      document.addEventListener('mousemove', this.onMouseMoveMin);\n      document.addEventListener('mouseup', this.onMouseUpMin);\n      document.addEventListener('touchmove', this.onMouseMoveMin);\n      document.addEventListener('touchend', this.onMouseUpMin);\n    };\n\n    this.onMouseMoveMin = e => {\n      const {\n        min,\n        max,\n        currentMax,\n        minValueBetween,\n        sliderWidth,\n        offsetSliderWidht\n      } = this.state;\n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = dragedWidht * 100 / sliderWidth;\n      const currentMin = Math.abs(parseInt(max * dragedWidhtInPercent / 100)); // console.log(e.pageX, e.clientX, offsetSliderWidht);\n      // console.log(currentMin , (currentMax-minValueBetween));\n      // console.log((max * dragedWidhtInPercent)/100);\n\n      if (currentMin >= min && currentMin <= currentMax - minValueBetween) {\n        this.minValue.style.width = dragedWidhtInPercent + \"%\";\n        this.minValue.dataset.content = currentMin;\n        this.setState({\n          currentMin,\n          inputMin: currentMin\n        });\n      }\n    };\n\n    this.onMouseUpMin = () => {\n      document.removeEventListener('mouseup', this.onMouseUpMin);\n      document.removeEventListener('mousemove', this.onMouseMoveMin);\n      document.removeEventListener('touchend', this.onMouseMoveMin);\n      document.removeEventListener('touchmove', this.onMouseUpMin);\n    };\n\n    this.setMax = e => {\n      const {\n        min,\n        max,\n        currentMin,\n        currentMax,\n        minValueBetween\n      } = this.state;\n      const inputMax = e.target.value;\n      this.setState({\n        inputMax\n      });\n\n      if (inputMax >= currentMin + minValueBetween && inputMax <= max) {\n        this.setState({\n          currentMax: parseInt(inputMax)\n        });\n        this.maxValue.style.width = inputMax * 100 / max + \"%\";\n      }\n    };\n\n    this.changeMaxValue = e => {\n      e.preventDefault();\n      document.addEventListener('mousemove', this.onMouseMoveMax);\n      document.addEventListener('mouseup', this.onMouseUpMax);\n      document.addEventListener('touchmove', this.onMouseMoveMax);\n      document.addEventListener('touchend', this.onMouseUpMax);\n    };\n\n    this.onMouseMoveMax = e => {\n      const {\n        max,\n        currentMin,\n        minValueBetween,\n        sliderWidth,\n        offsetSliderWidht\n      } = this.state;\n      const maxWalueThumb = this.maxValue;\n      const dragedWidht = e.clientX - offsetSliderWidht;\n      const dragedWidhtInPercent = dragedWidht * 100 / sliderWidth;\n      const currentMax = Math.abs(parseInt(max * dragedWidhtInPercent / 100));\n\n      if (currentMax >= currentMin + minValueBetween && currentMax <= max) {\n        maxWalueThumb.style.width = dragedWidhtInPercent + \"%\";\n        maxWalueThumb.dataset.content = currentMax;\n        this.setState({\n          currentMax,\n          inputMax: currentMax\n        });\n      }\n    };\n\n    this.onMouseUpMax = () => {\n      document.removeEventListener('mouseup', this.onMouseUp);\n      document.removeEventListener('mousemove', this.onMouseMoveMax);\n      document.removeEventListener('touchend', this.onMouseUp);\n      document.removeEventListener('touchmove', this.onMouseMoveMax);\n    };\n\n    this.maxForMin = () => {\n      const {\n        currentMax,\n        minValueBetween\n      } = this.state;\n      return currentMax - minValueBetween;\n    };\n\n    this.minForMax = () => {\n      const {\n        currentMin,\n        minValueBetween\n      } = this.state;\n      return currentMin + minValueBetween;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentMin,\n      currentMax,\n      max\n    } = this.state;\n    this.minValue.style.width = currentMin * 100 / max + \"%\";\n    this.maxValue.style.width = currentMax * 100 / max + \"%\";\n    this.setState({\n      sliderWidth: this.slider.offsetWidth,\n      offsetSliderWidht: this.slider.offsetLeft\n    });\n  }\n\n  render() {\n    const {\n      min,\n      max,\n      currentMin,\n      inputMin,\n      currentMax,\n      inputMax,\n      minValueBetween\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"current-value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"min-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Min: \"), React.createElement(\"input\", {\n      id: \"min-input\",\n      type: \"number\",\n      onChange: this.setMin,\n      value: inputMin,\n      min: min,\n      max: this.maxForMin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"max-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Max: \"), React.createElement(\"input\", {\n      id: \"max-input\",\n      type: \"number\",\n      onChange: this.setMax,\n      value: inputMax,\n      min: this.minForMax,\n      max: max,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ref: ref => this.slider = ref,\n      id: \"slider\",\n      className: \"double-range-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.minValue = ref,\n      id: \"min\",\n      \"data-content\": currentMin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.minValueDrag = ref,\n      id: \"min-drag\",\n      onMouseDown: this.changeMinValue,\n      onTouchStart: this.changeMinValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      ref: ref => this.maxValue = ref,\n      id: \"max\",\n      \"data-content\": currentMax,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: ref => this.maxValueDrag = ref,\n      id: \"max-drag\",\n      onMouseDown: this.changeMaxValue,\n      onTouchStart: this.changeMaxValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default doubleSlider;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/doubleSlider.js"],"names":["React","Component","doubleSlider","state","sliderWidth","offsetSliderWidht","min","max","minValueBetween","currentMin","inputMin","currentMax","inputMax","setMin","e","target","value","setState","parseInt","minValue","style","width","changeMinValue","preventDefault","document","addEventListener","onMouseMoveMin","onMouseUpMin","dragedWidht","clientX","dragedWidhtInPercent","Math","abs","dataset","content","removeEventListener","setMax","maxValue","changeMaxValue","onMouseMoveMax","onMouseUpMax","maxWalueThumb","onMouseUp","maxForMin","minForMax","componentDidMount","slider","offsetWidth","offsetLeft","render","ref","minValueDrag","maxValueDrag"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass doubleSlider extends Component {\n    state = {\n        sliderWidth: 0,\n        offsetSliderWidht: 0,\n        min: 0,\n        max: 100,\n        minValueBetween: 10,\n        \n        currentMin: 35,\n        inputMin: 35,\n        \n        currentMax: 65,\n        inputMax: 65\n    };\n\n    componentDidMount() {\n        const { currentMin, currentMax, max } = this.state;\n        \n        this.minValue.style.width = (currentMin*100)/max + \"%\";\n        this.maxValue.style.width = (currentMax*100)/max + \"%\";\n        \n        this.setState({\n            sliderWidth: this.slider.offsetWidth,\n            offsetSliderWidht: this.slider.offsetLeft,\n        })\n    }\n\n    setMin = (e) => {\n        const { min, max, currentMax, minValueBetween } = this.state;\n        const inputMin = e.target.value;\n        \n        this.setState({\n            inputMin\n        });\n        \n        if((inputMin >= min) && (inputMin <= (currentMax-minValueBetween))){\n        this.setState({\n            currentMin: parseInt(inputMin)\n        }); \n\n        this.minValue.style.width = (inputMin*100)/max + \"%\";\n        }\n    }\n\n    changeMinValue = (e) => {\n        e.preventDefault();\n\n        document.addEventListener('mousemove', this.onMouseMoveMin);\n        document.addEventListener('mouseup', this.onMouseUpMin);\n        \n        document.addEventListener('touchmove', this.onMouseMoveMin);\n        document.addEventListener('touchend', this.onMouseUpMin);\n    }\n\n    onMouseMoveMin = (e) => {\n        const { min, max, currentMax, minValueBetween, sliderWidth, offsetSliderWidht } = this.state;\n        \n        const dragedWidht = e.clientX - offsetSliderWidht;\n        const dragedWidhtInPercent = (dragedWidht*100)/sliderWidth;\n        const currentMin = Math.abs(parseInt((max * dragedWidhtInPercent)/100));\n        \n        // console.log(e.pageX, e.clientX, offsetSliderWidht);\n        \n        // console.log(currentMin , (currentMax-minValueBetween));\n        \n        // console.log((max * dragedWidhtInPercent)/100);\n    \n        if( (currentMin >= min) && (currentMin <= (currentMax-minValueBetween))){\n            this.minValue.style.width = dragedWidhtInPercent + \"%\";\n            this.minValue.dataset.content = currentMin;\n\n            this.setState({\n                currentMin,\n                inputMin: currentMin\n            })\n        }\n    }\n\n    onMouseUpMin = () => {\n        document.removeEventListener('mouseup', this.onMouseUpMin);\n        document.removeEventListener('mousemove', this.onMouseMoveMin);\n        \n        document.removeEventListener('touchend', this.onMouseMoveMin);\n        document.removeEventListener('touchmove', this.onMouseUpMin);\n    }\n    \n    \n    setMax = (e) => {\n        const { min, max, currentMin, currentMax, minValueBetween } = this.state;\n\n        const inputMax = e.target.value;\n        \n        this.setState({\n            inputMax\n        });\n\n        if((inputMax >= currentMin + minValueBetween) && (inputMax <= max)){\n        \n            this.setState({\n                currentMax: parseInt(inputMax)\n            });\n            this.maxValue.style.width = (inputMax*100)/max + \"%\";\n        }\n        \n    }\n    \n    changeMaxValue = (e) => {\n        e.preventDefault();\n\n        document.addEventListener('mousemove', this.onMouseMoveMax);\n        document.addEventListener('mouseup', this.onMouseUpMax);\n        \n        document.addEventListener('touchmove', this.onMouseMoveMax);\n        document.addEventListener('touchend', this.onMouseUpMax);\n    }\n\n    onMouseMoveMax = (e) => {\n        const { max, currentMin, minValueBetween, sliderWidth, offsetSliderWidht} = this.state; \n        const maxWalueThumb = this.maxValue;\n        const dragedWidht = e.clientX - offsetSliderWidht;\n        const dragedWidhtInPercent = (dragedWidht*100)/sliderWidth;\n        const currentMax = Math.abs(parseInt((max * dragedWidhtInPercent)/100));\n        \n        if( (currentMax >= (currentMin + minValueBetween)) && (currentMax <= max)){\n        \n            maxWalueThumb.style.width = dragedWidhtInPercent + \"%\";\n            maxWalueThumb.dataset.content = currentMax;\n            this.setState({\n                currentMax,\n                inputMax: currentMax\n            })\n        }\n    }\n\n    onMouseUpMax = () => {\n        document.removeEventListener('mouseup', this.onMouseUp);\n        document.removeEventListener('mousemove', this.onMouseMoveMax);\n        \n        document.removeEventListener('touchend', this.onMouseUp);\n        document.removeEventListener('touchmove', this.onMouseMoveMax);\n    }\n    \n    maxForMin = () => {\n        const { currentMax, minValueBetween} = this.state; \n        return currentMax - minValueBetween;\n    }\n    \n    minForMax = () => {\n        const { currentMin, minValueBetween} = this.state; \n        return currentMin + minValueBetween;\n    }\n    render() {\n        const { min, max, currentMin, inputMin, currentMax, inputMax, minValueBetween } = this.state;\n        return (\n            <>\n                <div className=\"current-value\">\n                    <label htmlFor=\"min-input\">Min: </label>\n                    <input \n                        id=\"min-input\" \n                        type=\"number\" \n                        onChange={this.setMin} \n                        value={inputMin}\n                        min={min}\n                        max={this.maxForMin}/>\n                    \n                    <br/>\n                    <label htmlFor=\"max-input\">Max: </label>\n                    <input \n                        id=\"max-input\" \n                        type=\"number\" \n                        onChange={this.setMax} \n                        value={inputMax}\n                        min={this.minForMax}\n                        max={max}/>\n                    \n                </div>\n                <div ref={ref => this.slider = ref} id=\"slider\" className=\"double-range-slider\">\n                    <div ref={ref => this.minValue = ref} id=\"min\" data-content={currentMin}>\n                        <div ref={ref => this.minValueDrag = ref} id=\"min-drag\" onMouseDown ={this.changeMinValue} onTouchStart={this.changeMinValue}></div>\n                    </div>\n\n                    <div ref={ref => this.maxValue = ref} id=\"max\" data-content={currentMax}>\n                        <div ref={ref => this.maxValueDrag = ref} id=\"max-drag\" onMouseDown={this.changeMaxValue} onTouchStart={this.changeMaxValue}></div>\n                    </div>\n\n                </div> \n            </>\n        );\n    }\n}\n\nexport default doubleSlider;"]},"metadata":{},"sourceType":"module"}