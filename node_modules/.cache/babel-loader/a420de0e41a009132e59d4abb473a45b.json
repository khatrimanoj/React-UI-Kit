{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAvatar from '../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml';\nimport AvitarIcon from '../../../images/avitar.png';\nimport more from \"../../../images/More_Vertical.svg\";\n\nconst toggleCollectionProperty = ({\n  arrCollection,\n  targetId,\n  itemIdProp,\n  itemProp,\n  itemVal,\n  itemOppVal\n}) => {\n  const tplCollection = [...arrCollection];\n\n  for (let i = 0, l = tplCollection.length; i < l; i += 1) {\n    if (tplCollection[i][itemIdProp] === targetId) {\n      tplCollection[i][itemProp] = itemVal;\n    } else {\n      tplCollection[i][itemProp] = itemOppVal;\n    }\n  }\n\n  return tplCollection;\n};\n\nconst withActiveProp = Component => props => {\n  return props.active && React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nconst toggleText = (bool, val1, val2) => {\n  return bool ? val1 : val2;\n};\n\nconst ListComponent = ({\n  data: listData,\n  Component,\n  className\n}) => {\n  if (!listData) {\n    return false;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, Component && listData.map((item, itemIndex) => React.createElement(React.Fragment, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, Component(item, itemIndex))));\n};\n\nconst BoxContainer = ({\n  className,\n  children\n}) => {\n  return React.createElement(\"div\", {\n    class: `panel ${className ? className : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, children);\n};\n\nconst TextAndButton = ({\n  className,\n  btnState,\n  text,\n  handleClick\n}) => {\n  return React.createElement(\"div\", {\n    className: `${toggleText(className, className, '')}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    title: \"Benjamin Parker\",\n    subtitle: React.createElement(\"span\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Online\"), React.createElement(\"option\", {\n      value: \"offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Offline\"), React.createElement(\"option\", {\n      value: \"away\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Away\"), React.createElement(\"option\", {\n      value: \"dnd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Don't disturb\"))),\n    avitar: AvitarIcon,\n    hasRound: true,\n    haslg: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"\",\n    src: AvitarIcon,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: more,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    className: `${toggleText(className, className, '')}--text`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, text));\n};\n\nclass LightVersion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sideNav: {\n        active: true\n      },\n      pages: [{\n        name: 'item1',\n        title: 'item1',\n        active: true,\n        items: [{\n          name: 'item11',\n          active: true\n        }, {\n          name: 'item12',\n          active: false\n        }, {\n          name: 'item13',\n          active: false\n        }]\n      }, {\n        name: 'item2',\n        title: 'item2',\n        active: false,\n        items: [{\n          name: 'item21',\n          active: true\n        }, {\n          name: 'item22',\n          active: false\n        }, {\n          name: 'item23',\n          active: false\n        }]\n      }, {\n        name: 'item3',\n        title: 'item3',\n        active: false,\n        items: [{\n          name: 'item31',\n          active: true\n        }, {\n          name: 'item32',\n          active: false\n        }, {\n          name: 'item33',\n          active: false\n        }]\n      }]\n    };\n    this.toggleSideNav = this.toggleSideNav.bind(this);\n    this.togglePages = this.togglePages.bind(this);\n  }\n\n  toggleSideNav() {\n    const {\n      sideNav\n    } = this.state;\n    sideNav.active = !this.state.sideNav.active;\n    this.setState({\n      sideNav\n    });\n  }\n\n  togglePages(collection, collTargetId, subpageIndex) {\n    let pages = '';\n\n    if (typeof subpageIndex !== 'number' && !subpageIndex) {\n      pages = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n    } else {\n      const subpages = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n      pages = this.state.pages;\n      pages[subpageIndex].items = subpages;\n    }\n\n    this.setState({\n      pages\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(BoxContainer, {\n      className: `sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(TextAndButton, {\n      className: \"sidebar-head\",\n      btnState: this.state.sideNav.active,\n      handleClick: this.toggleSideNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(ListComponent, {\n      data: this.state.pages,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `menu-item ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#/\",\n        onClick: () => this.togglePages(this.state.pages, item.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, item.title), item.items && React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(ListComponent, {\n        data: item.items,\n        Component: subitem => React.createElement(\"li\", {\n          className: `${toggleText(subitem.active, 'active', '')}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#/\",\n          onClick: () => this.togglePages(item.items, subitem.name, itemIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, subitem.name)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default LightVersion;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion.js"],"names":["React","Component","Link","UserAvatar","AvitarIcon","toggleCollectionProperty","arrCollection","targetId","itemIdProp","itemProp","itemVal","itemOppVal","tplCollection","i","l","length","withActiveProp","props","active","toggleText","bool","val1","val2","ListComponent","data","listData","className","map","item","itemIndex","id","BoxContainer","children","TextAndButton","btnState","text","handleClick","more","LightVersion","constructor","state","sideNav","pages","name","title","items","toggleSideNav","bind","togglePages","setState","collection","collTargetId","subpageIndex","subpages","render","subitem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport UserAvatar from '../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml'\nimport AvitarIcon from '../../../images/avitar.png';\nimport more from '../../../images/More_Vertical.svg'\n\nconst toggleCollectionProperty = ({\n    arrCollection, \n    targetId, \n    itemIdProp,\n    itemProp, \n    itemVal, \n    itemOppVal,\n  }) => {\n    const tplCollection = [...arrCollection];\n    for(let i = 0, l=tplCollection.length; i < l; i += 1) {\n      if(tplCollection[i][itemIdProp] === targetId) {\n        tplCollection[i][itemProp] = itemVal;\n      } else {\n        tplCollection[i][itemProp] = itemOppVal;\n      }\n    }\n    \n    return tplCollection;\n  };\n  \n  \n  const withActiveProp = Component => props => {\n    return (\n      props.active && <Component\n        {...props}\n      />\n    );\n  };\n    \n  const toggleText = (bool, val1, val2) => {\n    return bool ? val1 : val2;\n  };\n  \n  \n  const ListComponent = ({ data: listData, Component, className }) => {\n  \n    if (!listData) {\n  \n      return false;\n  \n    }\n  \n    return (\n      <React.Fragment>\n        {\n          \n          Component && listData.map((item, itemIndex) => (\n            <React.Fragment key={item.id}>\n              { Component(item, itemIndex) }\n            </React.Fragment>\n          ))\n        }\n      </React.Fragment>\n    );\n  \n  };\n  \n  \n  const BoxContainer = ({ className, children }) => {\n    return (\n      <div class={`panel ${className?className:''}`}>\n        { children }\n      </div>\n    );\n  };\n  \n  const TextAndButton = ({ className, btnState, text, handleClick }) => {\n    return (\n      <div className={`${toggleText(className, className, '')}`}>\n        <UserAvatar \n          title=\"Benjamin Parker\"  \n          subtitle={\n            <span className=\"status\">\n              <select>\n                <option value=\"online\">Online</option>\n                <option value=\"offline\">Offline</option>\n                <option value=\"away\">Away</option>\n                <option value=\"dnd\">Don't disturb</option>\n              </select>\n            </span>\n          }  \n          avitar={AvitarIcon} hasRound haslg> \n          <img className=\"\" src={AvitarIcon} alt=\"\"/>\n          \n        </UserAvatar> \n        <div className=\"more\">\n          <img src={more} />\n        </div>\n        <h1 className={`${toggleText(className, className, '')}--text`}>{ text }</h1>\n        {/* <button onClick={handleClick}>\n          {\n            toggleText(btnState, 'Close', 'Open') \n          }\n        </button> */}\n      </div>\n    );\n  };\n  \nclass LightVersion extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n          sideNav: {\n            active: true,\n          },\n          pages: [\n            {\n              name: 'item1',\n              title: 'item1',\n              active: true,\n              items: [\n                {\n                  name: 'item11',\n                  active: true,\n                },\n                {\n                  name: 'item12',\n                  active: false,\n                },\n                {\n                  name: 'item13',\n                  active: false,\n                },\n              ],\n            },\n            {\n              name: 'item2',\n              title: 'item2',\n              active: false,\n              items: [\n                {\n                  name: 'item21',\n                  active: true,\n                },\n                {\n                  name: 'item22',\n                  active: false,\n                },\n                {\n                  name: 'item23',\n                  active: false,\n                },\n              ],\n            },\n            {\n              name: 'item3',\n              title: 'item3',\n              active: false,\n              items: [\n                {\n                  name: 'item31',\n                  active: true,\n                },\n                {\n                  name: 'item32',\n                  active: false,\n                },\n                {\n                  name: 'item33',\n                  active: false,\n                },\n              ],\n            },\n          ],  \n        }; \n        \n        this.toggleSideNav = this.toggleSideNav.bind(this);\n        this.togglePages = this.togglePages.bind(this);\n      }\n      \n\n      toggleSideNav() {\n        const { sideNav } = this.state;\n        sideNav.active = !this.state.sideNav.active\n        this.setState({ sideNav });\n      }\n      \n \n      togglePages(collection, collTargetId, subpageIndex) {\n        let pages = '';\n        if (typeof subpageIndex !== 'number' && !subpageIndex) {\n          pages = toggleCollectionProperty ({\n            arrCollection: collection, \n            targetId: collTargetId, \n            itemIdProp: 'name',\n            itemProp: 'active', \n            itemVal: true, \n            itemOppVal: false,\n          });\n        } else {\n          const subpages = toggleCollectionProperty ({\n            arrCollection: collection, \n            targetId: collTargetId, \n            itemIdProp: 'name',\n            itemProp: 'active', \n            itemVal: true, \n            itemOppVal: false,\n          });\n          pages = this.state.pages;\n          pages[subpageIndex].items = subpages;   \n        }\n        \n        this.setState({ pages });\n      }\n    render() {\n        return (\n            <div className=\"sidebar\">\n                <BoxContainer className={`sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`}>\n                    {\n                        /* Brand and sidebar toggle button */\n                    }\n                    <TextAndButton\n                        className=\"sidebar-head\"\n                        btnState={this.state.sideNav.active}\n                        handleClick={this.toggleSideNav}\n                    />\n                    \n                    <ListComponent\n                        data={this.state.pages}\n                        Component={\n                        (item, itemIndex)=>(\n                            <div className={`menu-item ${toggleText(item.active, 'active', '')}`}>\n                            <a href=\"#/\"\n                                onClick={()=>this.togglePages(this.state.pages, item.name)}\n                            >{ item.title }</a>\n                            {\n                                item.items &&\n                                <ul>\n                                    <ListComponent\n                                    data={item.items}\n                                    Component={\n                                        (subitem)=>(\n                                        <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                            <a href=\"#/\"\n                                            onClick={()=>this.togglePages(item.items, subitem.name, itemIndex)}\n                                            >{ subitem.name }</a>\n                                        </li>\n                                        )\n                                    }\n                                    />\n                                </ul>\n                            }\n                            </div>\n                        )\n                        }\n                    />\n                </BoxContainer>\n            </div>\n        );\n    }\n}\n\nexport default LightVersion;"]},"metadata":{},"sourceType":"module"}