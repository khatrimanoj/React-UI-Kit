{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Carousel/Indicatore.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Dot(props) {\n  state = {\n    backgroundColor: this.st\n  };\n  return React.createElement(\"span\", {\n    style: {\n      display: 'inline-block',\n      height: '8px',\n      width: '8px',\n      borderRadius: '4px',\n      backgroundColor: this.props.backgroundColor,\n      margin: '7px 5px',\n      opacity: props.selected ? '1' : '0.3',\n      transitionDuration: '300ms'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  });\n}\n\nexport default function IndicatorDots(props) {\n  const wrapperStyle = {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '0px',\n    textAlign: 'center'\n  };\n\n  if (props.total < 2) {\n    // Hide dots when there is only one dot.\n    return React.createElement(\"div\", {\n      style: wrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      style: wrapperStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, Array.apply(null, Array(props.total)).map((x, i) => {\n      return React.createElement(Dot, {\n        key: i,\n        selected: props.index === i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }));\n  }\n}\nIndicatorDots.propTypes = {\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Carousel/Indicatore.js"],"names":["React","PropTypes","Dot","props","state","backgroundColor","st","display","height","width","borderRadius","margin","opacity","selected","transitionDuration","IndicatorDots","wrapperStyle","position","zIndex","bottom","textAlign","total","Array","apply","map","x","i","index","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,GAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,KAAK,GAAG;AACJC,IAAAA,eAAe,EAAE,KAAKC;AADlB,GAAR;AAGF,SACE;AAAM,IAAA,KAAK,EAAE;AACXC,MAAAA,OAAO,EAAE,cADE;AAEXC,MAAAA,MAAM,EAAE,KAFG;AAGXC,MAAAA,KAAK,EAAE,KAHI;AAIXC,MAAAA,YAAY,EAAE,KAJH;AAKXL,MAAAA,eAAe,EAAE,KAAKF,KAAL,CAAWE,eALjB;AAMXM,MAAAA,MAAM,EAAE,SANG;AAOXC,MAAAA,OAAO,EAAET,KAAK,CAACU,QAAN,GAAiB,GAAjB,GAAuB,KAPrB;AAQXC,MAAAA,kBAAkB,EAAE;AART,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD;;AAED,eAAe,SAASC,aAAT,CAAwBZ,KAAxB,EAA+B;AAC5C,QAAMa,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,UADS;AAEnBR,IAAAA,KAAK,EAAE,MAFY;AAGnBS,IAAAA,MAAM,EAAE,KAHW;AAInBC,IAAAA,MAAM,EAAE,KAJW;AAKnBC,IAAAA,SAAS,EAAE;AALQ,GAArB;;AAQA,MAAIjB,KAAK,CAACkB,KAAN,GAAc,CAAlB,EAAqB;AACnB;AACA,WAAO;AAAK,MAAA,KAAK,EAAEL,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD,MAGO;AACL,WACE;AAAK,MAAA,KAAK,EAAEA,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEM,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBD,KAAK,CAACnB,KAAK,CAACkB,KAAP,CAAvB,EAAsCG,GAAtC,CAA0C,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClD,aAAO,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,QAAQ,EAAEvB,KAAK,CAACwB,KAAN,KAAgBD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,CADF,CADF;AAOD;AACF;AAEDX,aAAa,CAACa,SAAd,GAA0B;AACxBD,EAAAA,KAAK,EAAE1B,SAAS,CAAC4B,MAAV,CAAiBC,UADA;AAExBT,EAAAA,KAAK,EAAEpB,SAAS,CAAC4B,MAAV,CAAiBC;AAFA,CAA1B","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Dot (props) {\n    state = {\n        backgroundColor: this.st\n    }\n  return (\n    <span style={{\n      display: 'inline-block',\n      height: '8px',\n      width: '8px',\n      borderRadius: '4px',\n      backgroundColor: this.props.backgroundColor,\n      margin: '7px 5px',\n      opacity: props.selected ? '1' : '0.3',\n      transitionDuration: '300ms'\n    }} />\n  )\n}\n\nexport default function IndicatorDots (props) {\n  const wrapperStyle = {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '0px',\n    textAlign: 'center'\n  }\n\n  if (props.total < 2) {\n    // Hide dots when there is only one dot.\n    return <div style={wrapperStyle} />\n  } else {\n    return (\n      <div style={wrapperStyle}>{\n        Array.apply(null, Array(props.total)).map((x, i) => {\n          return <Dot key={i} selected={props.index === i} />\n        })\n      }</div>\n    )\n  }\n}\n\nIndicatorDots.propTypes = {\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n}"]},"metadata":{},"sourceType":"module"}