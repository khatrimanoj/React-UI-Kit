{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownstructure/dropdownmarge/dropdownmarge.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdowncontainer from '../dropdowncontainer/dropdownconatiner';\nimport Input from '../dropdownsearch/dropdownsearch';\n\nclass dropdownmarge extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkType = value => {\n      this.setState({\n        typeDropdown: value\n      });\n    };\n\n    this.chooseItem = value => {\n      if (this.state.labelItem !== value) {\n        this.setState({\n          labelItem: value\n        });\n      }\n    };\n\n    this.transformJSON = (data, value) => {\n      let newObj = [];\n\n      (function filterJSON(obj, searchValue) {\n        if (obj.name && obj.name.toString().toLowerCase().indexOf(searchValue) > -1) {\n          newObj.push(obj);\n          return;\n        }\n\n        for (var key in obj) {\n          if (typeof obj[key] == \"object\" && obj[key] !== null) {\n            filterJSON(obj[key], searchValue);\n          }\n        }\n      })(data, value);\n\n      return newObj;\n    };\n\n    this.showDropdown = () => {\n      this.setState({\n        isOpen: true\n      });\n      document.addEventListener(\"click\", this.hideDropdown);\n      this.inputRef.current.focus();\n    };\n\n    this.hideDropdown = () => {\n      this.setState({\n        isOpen: false\n      });\n      document.removeEventListener(\"click\", this.hideDropdown);\n    };\n\n    this.handleInput = event => {\n      this.state = {\n        value: event.target.value.toLowerCase()\n      };\n      this.setState({\n        data: this.transformJSON(this.props.data, event.target.value.toLowerCase())\n      });\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.showDropdown = this.showDropdown.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.state = {\n      data: this.props.data,\n      labelItem: null,\n      typeDropdown: null,\n      selected: null\n    };\n  }\n\n  componentWillMount() {\n    const {\n      name\n    } = this.props.data[0];\n    let firstItem = null;\n\n    if (typeof name != 'undefined') {\n      this.checkType(false);\n      firstItem = name;\n    } else {\n      this.checkType(true);\n      firstItem = this.props.data[0];\n    }\n\n    this.setState({\n      labelItem: firstItem\n    });\n  }\n\n  onSelect(option) {\n    this.setState({\n      selected: option,\n      opened: false\n    }, () => {//console.info(this.state);\n    });\n  }\n\n  render() {\n    let selected = this.state.selected ? this.state.selected.value : 'Select';\n    const {\n      data,\n      searching\n    } = this.props;\n    const {\n      value,\n      label\n    } = this.state.typeDropdown;\n    const {\n      size,\n      border\n    } = this.props;\n    const dropdownClassname = `\n        dropdown\n        ${size === 'lg' && 'lg-dropdown'}\n        `;\n    const dropdowntoggleclass = `\n        dropdown-toggle\n        ${border === 'false' && 'bordernone'}\n        `;\n    let searchinput;\n\n    if (searching === true) {\n      searchinput = React.createElement(Input, {\n        handleChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    } else {\n      searchinput = null;\n    }\n\n    return React.createElement(\"div\", {\n      className: ` ${dropdownClassname} ${this.state.isOpen ? 'open' : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: dropdowntoggleclass,\n      type: \"button\",\n      onClick: this.showDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.labelItem), React.createElement(Dropdowncontainer, {\n      style: \"dropdown-menu\",\n      data: this.props.data,\n      onClick: () => this.chooseItem(),\n      number: this.props.totals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, searchinput, React.createElement(\"div\", {\n      className: \"searchvalue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.value ? \"Searching for:\" + this.state.value : null)));\n  }\n\n}\n\ndropdownmarge.propTypes = {\n  data: PropTypes.array.isRequired\n};\ndropdownmarge.defaultProps = {\n  data: []\n};\nexport default dropdownmarge;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownstructure/dropdownmarge/dropdownmarge.js"],"names":["React","Component","PropTypes","Dropdowncontainer","Input","dropdownmarge","constructor","props","checkType","value","setState","typeDropdown","chooseItem","state","labelItem","transformJSON","data","newObj","filterJSON","obj","searchValue","name","toString","toLowerCase","indexOf","push","key","showDropdown","isOpen","document","addEventListener","hideDropdown","inputRef","current","focus","removeEventListener","handleInput","event","target","bind","onSelect","selected","componentWillMount","firstItem","option","opened","render","searching","label","size","border","dropdownClassname","dropdowntoggleclass","searchinput","totals","propTypes","array","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdowncontainer from '../dropdowncontainer/dropdownconatiner';\nimport Input from '../dropdownsearch/dropdownsearch';\n\nclass dropdownmarge extends Component {\n    static propTypes = {\n        data: PropTypes.array.isRequired\n      };\n      static defaultProps = {\n        data: []\n      };\n    constructor(props) {\n        super(props);\n        this.handleInput=this.handleInput.bind(this);\n        this.showDropdown = this.showDropdown.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.state={\n            data:this.props.data,\n            labelItem: null,\n            typeDropdown: null,\n            selected: null,\n\n        };\n    }\n    componentWillMount() {\n        const { name } = this.props.data[0];\n        let firstItem = null;    \n        if (typeof name != 'undefined') {\n          this.checkType(false);\n          firstItem = name;\n        } else {\n          this.checkType(true);\n          firstItem = this.props.data[0];\n        }        \n        this.setState({\n            labelItem: firstItem\n        });    \n      }\n    \n      checkType = (value) => {\n        this.setState({\n            typeDropdown: value\n        });    \n      };\n      chooseItem = (value) => {    \n        if (this.state.labelItem !== value) {\n          this.setState({\n            labelItem: value      \n          })\n        }    \n      };\n    transformJSON=(data, value)=>{\n    let newObj=[];\n        (function filterJSON(obj, searchValue)\n        {\n            if(obj.name && (obj.name.toString().toLowerCase().indexOf(searchValue) >-1)){\n                newObj.push(obj);\n                return\n            }\n            for (var key in obj)\n            {\n                if (typeof obj[key] == \"object\" && obj[key] !== null){\n                    filterJSON(obj[key],searchValue);\n                }\n            }\n        })(data, value);\n        return newObj;\n    };\n    showDropdown = () => {\n        this.setState({ isOpen: true });\n        document.addEventListener(\"click\", this.hideDropdown);\n        this.inputRef.current.focus();\n      };\n      hideDropdown = () => {\n        this.setState({ isOpen: false });\n        document.removeEventListener(\"click\", this.hideDropdown);\n      };\n    handleInput=(event) =>{\n      this.state={\n            value:event.target.value.toLowerCase()\n        };\n        this.setState({data: this.transformJSON(this.props.data,event.target.value.toLowerCase())});\n    };\n    onSelect(option){\n      this.setState({\n        selected: option,\n        opened: false\n      }, ()=> {\n        //console.info(this.state);\n      });\n    }\n    render() {\n      let selected = this.state.selected ? this.state.selected.value : 'Select';\n        const {data,searching} = this.props ;\n        const {value, label} = this.state.typeDropdown\n        const { size,border } = this.props; \n        const dropdownClassname = `\n        dropdown\n        ${size === 'lg' && 'lg-dropdown'}\n        `;   \n        const  dropdowntoggleclass = `\n        dropdown-toggle\n        ${border === 'false' && 'bordernone'}\n        `;   \n        \n        let searchinput;\n        if (searching === true) {\n          searchinput = <Input handleChange={this.handleInput}/>;\n        } else {\n          searchinput = null;\n        }\n        return (\n            <div className={ ` ${dropdownClassname} ${this.state.isOpen ? 'open' : ''}`} >\n                \n                <button  className={dropdowntoggleclass} type=\"button\" onClick={this.showDropdown}>\n               {this.state.labelItem}\n              \n            </button>\n                \n                <Dropdowncontainer style=\"dropdown-menu\" data={this.props.data} onClick={() => this.chooseItem()} number={this.props.totals}>\n                  {searchinput}\n                 \n                <div className=\"searchvalue\">{this.state.value? (\"Searching for:\"+this.state.value):null}</div>\n\n                </Dropdowncontainer>\n                \n            </div>\n        );\n    }\n}\n\nexport default dropdownmarge;"]},"metadata":{},"sourceType":"module"}