{"ast":null,"code":"import React from'react';function Dot(props){return React.createElement(\"span\",{className:\"\".concat(props.selected?'current dots':'dots'),style:{display:'inline-block',height:'8px',width:'8px',borderRadius:'4px',backgroundColor:props.backgroundColor,margin:'7px 5px',opacity:props.selected?'1':'0.3',transitionDuration:'300ms'}});}export default function IndicatorDots(props){var wrapperStyle={position:'absolute',width:'100%',zIndex:'100',bottom:'0px',textAlign:'center'};if(props.total<2){// Hide dots when there is only one dot.\nreturn React.createElement(\"div\",{style:wrapperStyle});}else{return React.createElement(\"div\",{style:wrapperStyle},Array.apply(null,Array(props.total)).map(function(x,i){return React.createElement(Dot,{key:i,selected:props.index===i});}));}}","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Carousel/Indicatore.js"],"names":["React","Dot","props","selected","display","height","width","borderRadius","backgroundColor","margin","opacity","transitionDuration","IndicatorDots","wrapperStyle","position","zIndex","bottom","textAlign","total","Array","apply","map","x","i","index"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,QAASC,CAAAA,GAAT,CAAcC,KAAd,CAAqB,CACnB,MACE,6BAAM,SAAS,WAAKA,KAAK,CAACC,QAAN,CAAiB,cAAjB,CAAkC,MAAvC,CAAf,CAAgE,KAAK,CAAE,CACrEC,OAAO,CAAE,cAD4D,CAErEC,MAAM,CAAE,KAF6D,CAGrEC,KAAK,CAAE,KAH8D,CAIrEC,YAAY,CAAE,KAJuD,CAKrEC,eAAe,CAAEN,KAAK,CAACM,eAL8C,CAMrEC,MAAM,CAAE,SAN6D,CAOrEC,OAAO,CAAER,KAAK,CAACC,QAAN,CAAiB,GAAjB,CAAuB,KAPqC,CAQrEQ,kBAAkB,CAAE,OARiD,CAAvE,EADF,CAYD,CAED,cAAe,SAASC,CAAAA,aAAT,CAAwBV,KAAxB,CAA+B,CAE5C,GAAMW,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,UADS,CAEnBR,KAAK,CAAE,MAFY,CAGnBS,MAAM,CAAE,KAHW,CAInBC,MAAM,CAAE,KAJW,CAKnBC,SAAS,CAAE,QALQ,CAArB,CAQA,GAAIf,KAAK,CAACgB,KAAN,CAAc,CAAlB,CAAqB,CACnB;AACA,MAAO,4BAAK,KAAK,CAAEL,YAAZ,EAAP,CACD,CAHD,IAGO,CACL,MACE,4BAAK,KAAK,CAAEA,YAAZ,EACEM,KAAK,CAACC,KAAN,CAAY,IAAZ,CAAkBD,KAAK,CAACjB,KAAK,CAACgB,KAAP,CAAvB,EAAsCG,GAAtC,CAA0C,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAClD,MAAO,qBAAC,GAAD,EAAK,GAAG,CAAEA,CAAV,CAAa,QAAQ,CAAErB,KAAK,CAACsB,KAAN,GAAgBD,CAAvC,EAAP,CACD,CAFD,CADF,CADF,CAOD,CACF","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Dot (props) {\n  return (\n    <span className={`${props.selected ? 'current dots' : 'dots'}`} style={{\n      display: 'inline-block',\n      height: '8px',\n      width: '8px',\n      borderRadius: '4px',\n      backgroundColor: props.backgroundColor,\n      margin: '7px 5px',\n      opacity: props.selected ? '1' : '0.3',\n      transitionDuration: '300ms'\n    }} />\n  )\n}\n\nexport default function IndicatorDots (props) {\n\n  const wrapperStyle = {\n    position: 'absolute',\n    width: '100%',\n    zIndex: '100',\n    bottom: '0px',\n    textAlign: 'center'\n  }\n\n  if (props.total < 2) {\n    // Hide dots when there is only one dot.\n    return <div style={wrapperStyle} />\n  } else {\n    return (\n      <div style={wrapperStyle}>{\n        Array.apply(null, Array(props.total)).map((x, i) => {\n          return <Dot key={i} selected={props.index === i} />\n        })\n      }</div>\n    )\n  }\n}\n\nIndicatorDots.propTypes = {\n  index: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n}"]},"metadata":{},"sourceType":"module"}