{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/newInputSlider.js\";\nimport React from 'react';\nvar Slider = React.createClass({\n  displayName: \"Slider\",\n  propTypes: {\n    outerWidth: React.PropTypes.number,\n    width: React.PropTypes.number.isRequired,\n    leftwidth: React.PropTypes.number.isRequired,\n    rightwidth: React.PropTypes.number.isRequired,\n    leftNumber: React.PropTypes.number.isRequired,\n    rightNumber: React.PropTypes.number,\n    initialLeftNumber: React.PropTypes.number,\n    initialRightNumber: React.PropTypes.number,\n    scalingFunction: React.PropTypes.func,\n    inverseScalingFunction: React.PropTypes.func,\n    onSliderUpdate: React.PropTypes.func,\n    onlyUpdateOnRelease: React.PropTypes.bool,\n    unit: React.PropTypes.string,\n    subset: React.PropTypes.bool\n  },\n  getDefaultProps: function () {\n    return {\n      unit: '',\n      leftwidth: 0,\n      rightwidth: 0,\n      subset: false,\n      scalingFunction: function (x, constantBase) {\n        return Math.pow(x, 2) / Math.pow(constantBase, 2);\n      },\n      inverseScalingFunction: function (x, constantBase) {\n        return Math.sqrt(x) / Math.sqrt(constantBase);\n      },\n      onSliderUpdate: function () {}\n    };\n  },\n  getInitialState: function () {\n    // invariant: left <= right\n    return {\n      left: 0,\n      right: 0,\n      leftNumber: this.props.leftNumber,\n      rightNumber: this.props.rightNumber,\n      storedState: undefined,\n      storedNumber: this.props.leftNumber,\n      leftActive: false,\n      rightActive: false,\n      isTouch: 'ontouchstart' in document,\n      sliderStartX: undefined,\n      sliderEndX: undefined\n    };\n  },\n  componentWillReceiveProps: function (nextProps) {\n    var that = this;\n\n    if (this.state.rightNumber === undefined || this.state.leftNumber === undefined) {\n      var stateObject = {\n        leftNumber: nextProps.leftNumber,\n        rightNumber: nextProps.rightNumber\n      };\n      this.setState(stateObject);\n    }\n  },\n  getOtherDirection: function (thisDirection) {\n    var directions = [\"left\", \"right\"];\n    var otherIndex = (directions.indexOf(thisDirection) + 1) % 2;\n    return directions[otherIndex];\n  },\n  sliderUpdater: function () {\n    if (this.props.onlyUpdateOnRelease && (this.state.leftActive || this.state.rightActive)) {\n      this.props.onSliderUpdate({\n        leftNumber: this.state.leftNumber,\n        rightNumber: this.state.rightNumber\n      }, true);\n    }\n\n    this.setState({\n      leftActive: false,\n      rightActive: false\n    });\n    document.removeEventListener(\"mousemove\", this.mouseDownHelper);\n    document.removeEventListener(\"touchmove\", this.mouseDownHelper);\n  },\n  componentDidMount: function () {\n    document.addEventListener(\"mouseup\", this.sliderUpdater);\n    document.addEventListener(\"touchend\", this.sliderUpdater);\n    var stateObject = {};\n    stateObject.leftNumber = parseInt(this.props.initialLeftNumber || this.props.leftNumber, 10);\n    var setRightNumber;\n\n    if (this.props.initialRightNumber) {\n      setRightNumber = Math.min(this.props.initialRightNumber, this.props.rightNumber);\n    } else {\n      setRightNumber = this.props.rightNumber;\n    }\n\n    stateObject.rightNumber = parseInt(setRightNumber, 10);\n    var addedState = this.addPositionsFromNumbers(stateObject, this.props.rightNumber);\n    this.setState(addedState);\n  },\n  componentWillUnmount: function () {\n    document.removeEventListener(\"mouseup\", this.sliderUpdater);\n    document.removeEventListener(\"touchend\", this.sliderUpdater);\n  },\n  // a function of props and state\n  moveConditionsMet: function (state) {\n    var leftWithinBounds = state.left >= 0 && state.left < this.props.width;\n    var rightWithinBounds = state.right >= 0 && state.right < this.props.width;\n    var leftNotCrossing = state.left + this.props.leftwidth <= this.props.width - state.right;\n    var rightNotCrossing = this.props.width - state.right - this.props.rightwidth >= state.left;\n    return leftWithinBounds && rightWithinBounds && leftNotCrossing && rightNotCrossing;\n  },\n  // Typed conditions cannot go out of bounds, but they can cross\n  typedConditionsMet: function (state) {\n    return state.leftNumber <= state.rightNumber;\n  },\n  handleBlur: function (e) {\n    var stateObject = {};\n    var targetClassName = e.target.className;\n    if (e.target.value.substr(1) === \"\") stateObject[targetClassName] = this.state.storedNumber;\n    this.setState(stateObject);\n  },\n  addPositionsFromNumbers: function (state, rightNumber) {\n    rightNumber = rightNumber || this.props.rightNumber;\n    state.left = Math.floor(this.props.inverseScalingFunction(state.leftNumber - this.props.leftNumber, rightNumber) * this.props.width);\n    state.right = this.props.width - this.props.inverseScalingFunction(state.rightNumber, rightNumber) * this.props.width; //inverse - from the other side\n\n    return state;\n  },\n  buildNextState: function (updateDirection, updateLocation) {\n    var nextState = {},\n        otherDirection = this.getOtherDirection(updateDirection),\n        updateLocation = Math.max(0, updateLocation),\n        absoluteLocation = updateDirection === 'left' ? updateLocation : this.props.width - updateLocation;\n    nextState[updateDirection] = updateLocation;\n    nextState[updateDirection + 'Number'] = Math.ceil(this.props.scalingFunction(absoluteLocation, this.props.width) * (this.props.rightNumber - this.props.leftNumber) + this.props.leftNumber);\n    nextState[otherDirection] = this.state[otherDirection];\n    nextState[otherDirection + 'Number'] = this.state[otherDirection + 'Number'];\n    return nextState;\n  },\n  handleSliderClick: function (re) {\n    var clickX = re.clientX;\n    var sliderBar = this.refs.sliderBar.getDOMNode();\n    var that = this;\n    var stateObject = {};\n\n    if (!(this.state.sliderStartX || this.state.sliderEndX)) {\n      var rect = sliderBar.getBoundingClientRect();\n      stateObject.sliderStartX = rect.left;\n      stateObject.sliderEndX = rect.left + rect.width;\n    }\n\n    this.setState(stateObject, function () {\n      var relativeClickX = clickX - that.state.sliderStartX;\n      var leftDistance = Math.abs(relativeClickX - that.state.left);\n      var rightDistance = Math.abs(relativeClickX - (that.props.width - that.state.right));\n      var closer = leftDistance < rightDistance ? 'left' : 'right';\n      var updateLocation = closer === 'left' ? relativeClickX : this.props.width - relativeClickX;\n      var nextState = that.buildNextState(closer, updateLocation); // A state generated by a click is guaranteed to be valid\n\n      that.setState(nextState, function () {\n        that.props.onSliderUpdate({\n          leftNumber: nextState.leftNumber,\n          rightNumber: nextState.rightNumber\n        });\n      });\n    });\n  },\n  handleFocus: function (e) {\n    var stateObject = {},\n        targetClassName = e.target.className,\n        direction = targetClassName.match(/(\\w+)Number/)[1],\n        value = e.target.value;\n    stateObject[targetClassName] = '';\n    stateObject.storedNumber = this.state[targetClassName];\n    this.setState(stateObject);\n  },\n  handleChange: function (e) {\n    var stateObject = {},\n        targetClassName = e.target.className,\n        direction = targetClassName.match(/(\\w+)Number/)[1],\n        otherDirection = this.getOtherDirection(direction),\n        inputValue = e.target.value,\n        truncate = this.props.unit.length,\n        targetValue = inputValue.charAt(0) === '>' ? inputValue.substr(truncate + 1) : inputValue.substr(truncate); // Restrictions on entered values. Storage of temporary value when user clears\n    // input field.\n\n    if (targetValue.match(/^\\d+$/) && targetValue <= this.props.rightNumber && targetValue >= this.props.leftNumber) stateObject[targetClassName] = parseInt(targetValue);else if (targetValue === \"\") {\n      stateObject[targetClassName] = \"\";\n      stateObject.storedNumber = this.state[targetClassName];\n      this.setState(stateObject);\n      return;\n    } else return;\n    var otherNumber = otherDirection + \"Number\";\n    stateObject[otherNumber] = this.state[otherNumber];\n    if (!this.typedConditionsMet(stateObject)) stateObject[otherNumber] = stateObject[targetClassName];\n    stateObject = this.addPositionsFromNumbers(stateObject);\n    this.setState(stateObject);\n    this.props.onSliderUpdate(stateObject, true);\n  },\n  handleMouseMove: function (event, targetClass, initialX, originalPosition) {\n    var that = this;\n    event.preventDefault();\n    var newX = (that.state.isTouch ? event.originalEvent.touches[0] : event).clientX;\n    var scaling = targetClass === \"left\" ? 1 : -1;\n    var otherDirection = that.getOtherDirection(targetClass);\n    var nextState = that.buildNextState(targetClass, originalPosition + scaling * (newX - initialX));\n\n    if (that.moveConditionsMet(nextState)) {\n      that.setState(nextState, function () {\n        if (!that.props.onlyUpdateOnRelease) {\n          that.props.onSliderUpdate({\n            leftNumber: nextState.leftNumber,\n            rightNumber: nextState.rightNumber\n          });\n        }\n      });\n    }\n  },\n  handleMouseDown: function (re) {\n    // N.B. e is a React event, while event below is a browser event\n    var targetClass = re.target.className.split(' ')[0],\n        that = this,\n        initialX = (this.state.isTouch ? re.touches[0] : re).clientX,\n        originalPosition = this.state[targetClass];\n    var activeState = {};\n    activeState[targetClass + \"Active\"] = true; //set active state on mousedown\n\n    this.setState(activeState);\n\n    this.mouseDownHelper = function (event) {\n      that.handleMouseMove(event, targetClass, initialX, originalPosition);\n    };\n\n    document.addEventListener(\"mousemove\", this.mouseDownHelper);\n    document.addEventListener(\"touchmove\", this.mouseDownHelper);\n  },\n  render: function () {\n    var leftActive = this.state.leftActive ? \"active\" : \"\";\n    var rightActive = this.state.rightActive ? \"active\" : \"\";\n    var rightUnit = this.state.rightNumber >= this.props.rightNumber && this.props.subset ? '>' + this.props.unit : this.props.unit;\n    return React.createElement(\"div\", {\n      className: \"slider-container clearfix\",\n      style: {\n        width: this.props.outerWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"numerical-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"numerical-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"leftNumber\",\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onChange: this.handleChange,\n      value: this.props.unit + this.state.leftNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"slider-control-container clearfix\",\n      style: {\n        width: this.props.width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-slider\",\n      ref: \"sliderBar\",\n      onClick: this.handleSliderClick,\n      style: {\n        width: this.props.width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider\",\n      style: {\n        left: this.state.left,\n        width: this.props.width - this.state.left - this.state.right\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"handle-container clearfix\",\n      style: {\n        width: this.props.width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: \"leftSlider\",\n      className: \"left \" + leftActive,\n      style: {\n        left: this.state.left\n      },\n      onTouchStart: this.handleMouseDown,\n      onMouseDown: this.handleMouseDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      ref: \"rightSlider\",\n      className: \"right \" + rightActive,\n      style: {\n        right: this.state.right\n      },\n      onTouchStart: this.handleMouseDown,\n      onTouchMove: this.handleTouchMove,\n      onMouseDown: this.handleMouseDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"numerical-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"numerical-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"rightNumber\",\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onChange: this.handleChange,\n      value: rightUnit + this.state.rightNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }))));\n  }\n});\nexport default Slider;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sliders/Types/newInputSlider.js"],"names":["React","Slider","createClass","propTypes","outerWidth","PropTypes","number","width","isRequired","leftwidth","rightwidth","leftNumber","rightNumber","initialLeftNumber","initialRightNumber","scalingFunction","func","inverseScalingFunction","onSliderUpdate","onlyUpdateOnRelease","bool","unit","string","subset","getDefaultProps","x","constantBase","Math","pow","sqrt","getInitialState","left","right","props","storedState","undefined","storedNumber","leftActive","rightActive","isTouch","document","sliderStartX","sliderEndX","componentWillReceiveProps","nextProps","that","state","stateObject","setState","getOtherDirection","thisDirection","directions","otherIndex","indexOf","sliderUpdater","removeEventListener","mouseDownHelper","componentDidMount","addEventListener","parseInt","setRightNumber","min","addedState","addPositionsFromNumbers","componentWillUnmount","moveConditionsMet","leftWithinBounds","rightWithinBounds","leftNotCrossing","rightNotCrossing","typedConditionsMet","handleBlur","e","targetClassName","target","className","value","substr","floor","buildNextState","updateDirection","updateLocation","nextState","otherDirection","max","absoluteLocation","ceil","handleSliderClick","re","clickX","clientX","sliderBar","refs","getDOMNode","rect","getBoundingClientRect","relativeClickX","leftDistance","abs","rightDistance","closer","handleFocus","direction","match","handleChange","inputValue","truncate","length","targetValue","charAt","otherNumber","handleMouseMove","event","targetClass","initialX","originalPosition","preventDefault","newX","originalEvent","touches","scaling","handleMouseDown","split","activeState","render","rightUnit","handleTouchMove"],"mappings":"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","sourcesContent":["import React from 'react';\n\nvar Slider = React.createClass({\n    propTypes: {\n      outerWidth: React.PropTypes.number,\n      width: React.PropTypes.number.isRequired,\n      leftwidth: React.PropTypes.number.isRequired,\n      rightwidth: React.PropTypes.number.isRequired,\n      leftNumber: React.PropTypes.number.isRequired,\n      rightNumber: React.PropTypes.number,\n      initialLeftNumber: React.PropTypes.number,\n      initialRightNumber: React.PropTypes.number,\n      scalingFunction: React.PropTypes.func,\n      inverseScalingFunction: React.PropTypes.func,\n      onSliderUpdate: React.PropTypes.func,\n      onlyUpdateOnRelease: React.PropTypes.bool,\n      unit: React.PropTypes.string,\n      subset: React.PropTypes.bool\n    },\n    getDefaultProps: function() {\n      return {\n        unit: '',\n        leftwidth: 0,\n        rightwidth: 0,\n        subset: false,\n        scalingFunction: function(x, constantBase) {\n          return Math.pow(x, 2) / Math.pow(constantBase, 2);\n        },\n        inverseScalingFunction: function(x, constantBase) {\n          return Math.sqrt(x) / Math.sqrt(constantBase);\n        },\n        onSliderUpdate: function() {}\n      }\n    },\n    getInitialState: function() {\n      // invariant: left <= right\n      return {\n        left: 0,\n        right: 0,\n        leftNumber: this.props.leftNumber,\n        rightNumber: this.props.rightNumber,\n        storedState: undefined,\n        storedNumber: this.props.leftNumber,\n        leftActive: false,\n        rightActive: false,\n        isTouch: 'ontouchstart' in document,\n        sliderStartX: undefined,\n        sliderEndX: undefined\n      }\n    },\n    componentWillReceiveProps: function(nextProps) {\n      var that = this;\n      if (this.state.rightNumber === undefined || this.state.leftNumber === undefined) {\n        var stateObject = {\n          leftNumber: nextProps.leftNumber,\n          rightNumber: nextProps.rightNumber\n        };\n        this.setState(stateObject);\n      }\n    },\n    getOtherDirection: function(thisDirection) {\n      var directions = [\"left\", \"right\"];\n      var otherIndex = (directions.indexOf(thisDirection) + 1) % 2;\n      return directions[otherIndex];\n    },\n  \n    sliderUpdater: function() {\n      if (this.props.onlyUpdateOnRelease && (this.state.leftActive || this.state.rightActive)) {\n        this.props.onSliderUpdate({\n          leftNumber: this.state.leftNumber,\n          rightNumber: this.state.rightNumber\n        }, true);\n      }\n      this.setState({\n        leftActive: false,\n        rightActive: false\n      });\n      document.removeEventListener(\"mousemove\", this.mouseDownHelper);\n      document.removeEventListener(\"touchmove\", this.mouseDownHelper);\n    },\n  \n    componentDidMount: function() {\n      document.addEventListener(\"mouseup\", this.sliderUpdater);\n      document.addEventListener(\"touchend\", this.sliderUpdater);\n      var stateObject = {};\n      stateObject.leftNumber = parseInt(this.props.initialLeftNumber || this.props.leftNumber, 10);\n      var setRightNumber;\n      if (this.props.initialRightNumber) {\n        setRightNumber = Math.min(this.props.initialRightNumber, this.props.rightNumber);\n      } else {\n        setRightNumber = this.props.rightNumber;\n      }\n      stateObject.rightNumber = parseInt(setRightNumber, 10);\n      var addedState = this.addPositionsFromNumbers(stateObject, this.props.rightNumber);\n      this.setState(addedState);\n    },\n    componentWillUnmount: function() {\n      document.removeEventListener(\"mouseup\", this.sliderUpdater);\n      document.removeEventListener(\"touchend\", this.sliderUpdater);\n    },\n    // a function of props and state\n    moveConditionsMet: function(state) {\n      var leftWithinBounds  = state.left >= 0 && state.left < this.props.width;\n      var rightWithinBounds = state.right >= 0 && state.right < this.props.width;\n      var leftNotCrossing   = (state.left + this.props.leftwidth) <= (this.props.width - state.right);\n      var rightNotCrossing  = (this.props.width - state.right - this.props.rightwidth) >= state.left;\n      return leftWithinBounds && rightWithinBounds && leftNotCrossing && rightNotCrossing;\n    },\n    // Typed conditions cannot go out of bounds, but they can cross\n    typedConditionsMet: function(state) {\n      return state.leftNumber <= state.rightNumber;\n    },\n    handleBlur: function(e) {\n      var stateObject = {};\n      var targetClassName = e.target.className;\n      if (e.target.value.substr(1) === \"\")\n        stateObject[targetClassName] = this.state.storedNumber;\n      this.setState(stateObject);\n    },\n    addPositionsFromNumbers: function(state, rightNumber) {\n      rightNumber = rightNumber || this.props.rightNumber;\n      state.left = Math.floor(this.props.inverseScalingFunction(state.leftNumber - this.props.leftNumber, rightNumber) * this.props.width);\n      state.right = this.props.width - (this.props.inverseScalingFunction(state.rightNumber, rightNumber) * this.props.width); //inverse - from the other side\n      return state;\n    },\n  \n    buildNextState: function(updateDirection, updateLocation) {\n      var  nextState = {},\n      otherDirection = this.getOtherDirection(updateDirection),\n      updateLocation = Math.max(0, updateLocation),\n    absoluteLocation = updateDirection === 'left' ? updateLocation : this.props.width - updateLocation;\n  \n      nextState[updateDirection] = updateLocation;\n      nextState[updateDirection + 'Number'] = Math.ceil(this.props.scalingFunction(absoluteLocation, this.props.width) * (this.props.rightNumber - this.props.leftNumber) + this.props.leftNumber);\n      nextState[otherDirection] = this.state[otherDirection];\n      nextState[otherDirection + 'Number'] = this.state[otherDirection + 'Number'];\n  \n      return nextState;\n    },\n  \n    handleSliderClick: function(re) {\n      var clickX = re.clientX;\n      var sliderBar = this.refs.sliderBar.getDOMNode();\n      var that = this;\n      var stateObject = {};\n      if (!(this.state.sliderStartX || this.state.sliderEndX)) {\n        var rect = sliderBar.getBoundingClientRect();\n        stateObject.sliderStartX = rect.left;\n        stateObject.sliderEndX = rect.left + rect.width;\n      }\n      this.setState(stateObject, function() {\n        var relativeClickX = clickX - that.state.sliderStartX;\n        var leftDistance = Math.abs(relativeClickX - that.state.left);\n        var rightDistance = Math.abs(relativeClickX - (that.props.width - that.state.right));\n        var closer = (leftDistance < rightDistance) ? 'left' : 'right';\n        var updateLocation = closer === 'left' ? relativeClickX : this.props.width - relativeClickX;\n  \n        var nextState = that.buildNextState(closer, updateLocation);\n        // A state generated by a click is guaranteed to be valid\n        that.setState(nextState, function() {\n          that.props.onSliderUpdate({\n            leftNumber: nextState.leftNumber,\n            rightNumber: nextState.rightNumber\n          });\n        })\n      })\n    },\n  \n    handleFocus: function(e) {\n      var   stateObject = {},\n        targetClassName = e.target.className,\n              direction = targetClassName.match(/(\\w+)Number/)[1],\n                  value = e.target.value;\n      stateObject[targetClassName] = '';\n      stateObject.storedNumber = this.state[targetClassName];\n      this.setState(stateObject);\n    },\n  \n    handleChange: function(e) {\n      var   stateObject = {},\n        targetClassName = e.target.className,\n              direction = targetClassName.match(/(\\w+)Number/)[1],\n         otherDirection = this.getOtherDirection(direction),\n             inputValue = e.target.value,\n               truncate = this.props.unit.length,\n            targetValue = inputValue.charAt(0) === '>' ? inputValue.substr(truncate + 1) : inputValue.substr(truncate);\n  \n      // Restrictions on entered values. Storage of temporary value when user clears\n      // input field.\n      if (targetValue.match(/^\\d+$/) && targetValue <= this.props.rightNumber && targetValue >= this.props.leftNumber)\n        stateObject[targetClassName] = parseInt(targetValue);\n      else if (targetValue === \"\") {\n        stateObject[targetClassName] = \"\";\n        stateObject.storedNumber = this.state[targetClassName];\n        this.setState(stateObject);\n        return;\n      } else\n        return;\n  \n      var otherNumber = otherDirection + \"Number\";\n      stateObject[otherNumber] = this.state[otherNumber];\n      if (!this.typedConditionsMet(stateObject))\n        stateObject[otherNumber] = stateObject[targetClassName];\n  \n      stateObject = this.addPositionsFromNumbers(stateObject);\n      this.setState(stateObject);\n      this.props.onSliderUpdate(stateObject, true);\n  \n    },\n  \n    handleMouseMove: function(event, targetClass, initialX, originalPosition) {\n      var that = this;\n      event.preventDefault();\n      var newX = (that.state.isTouch ? event.originalEvent.touches[0] : event).clientX;\n  \n      var scaling = targetClass === \"left\" ? 1 : -1;\n      var otherDirection = that.getOtherDirection(targetClass);\n      var nextState = that.buildNextState(targetClass, originalPosition + scaling * (newX - initialX));\n      if (that.moveConditionsMet(nextState)) {\n        that.setState(nextState, function() {\n          if (!that.props.onlyUpdateOnRelease) {\n            that.props.onSliderUpdate({\n              leftNumber: nextState.leftNumber,\n              rightNumber: nextState.rightNumber\n            });\n          }\n        });\n      }\n    },\n  \n    handleMouseDown: function(re) {\n      // N.B. e is a React event, while event below is a browser event\n      var targetClass = re.target.className.split(' ')[0],\n                 that = this,\n             initialX = (this.state.isTouch ? re.touches[0] : re).clientX,\n     originalPosition = this.state[targetClass];\n  \n      var activeState = {};\n      activeState[targetClass + \"Active\"] = true; //set active state on mousedown\n      this.setState(activeState);\n  \n      this.mouseDownHelper = function(event) {\n        that.handleMouseMove(event, targetClass, initialX, originalPosition);\n      }\n  \n      document.addEventListener(\"mousemove\", this.mouseDownHelper);\n      document.addEventListener(\"touchmove\", this.mouseDownHelper);\n    },\n  \n    render: function() {\n      var leftActive = this.state.leftActive ? \"active\" : \"\";\n      var rightActive = this.state.rightActive ? \"active\" : \"\";\n      var rightUnit = (this.state.rightNumber >= this.props.rightNumber && this.props.subset) ? '>' + this.props.unit : this.props.unit;\n      return <div className=\"slider-container clearfix\" style={{width: this.props.outerWidth}}>\n      <div className=\"numerical-container\">\n        <div className=\"numerical-left\">\n          <input type=\"text\"\n                 className=\"leftNumber\"\n                 onFocus={this.handleFocus}\n                 onBlur={this.handleBlur}\n                 onChange={this.handleChange}\n                 value={this.props.unit + this.state.leftNumber}></input>\n        </div>\n      </div>\n      <div className=\"slider-control-container clearfix\" style={{width: this.props.width}}>\n        <div className=\"full-slider\"\n             ref=\"sliderBar\"\n             onClick={this.handleSliderClick} style={{width: this.props.width}}>\n          <div className=\"slider\"\n               style={{left: this.state.left, width: this.props.width - this.state.left - this.state.right}}></div>\n        </div>\n        <div className=\"handle-container clearfix\" style={{width: this.props.width}}>\n          <div ref=\"leftSlider\" className={\"left \" + leftActive}\n               style={{left: this.state.left}}\n               onTouchStart={this.handleMouseDown}\n               onMouseDown={this.handleMouseDown}>\n          </div>\n          <div ref=\"rightSlider\" className={\"right \" + rightActive}\n               style={{right: this.state.right}}\n               onTouchStart={this.handleMouseDown}\n               onTouchMove={this.handleTouchMove}\n               onMouseDown={this.handleMouseDown}>\n          </div>\n        </div>\n      </div>\n      <div className=\"numerical-container\">\n        <div className=\"numerical-right\">\n          <input type=\"text\"\n                 className=\"rightNumber\"\n                 onFocus={this.handleFocus}\n                 onBlur={this.handleBlur}\n                 onChange={this.handleChange}\n                 value={rightUnit + this.state.rightNumber}></input>\n        </div>\n      </div>\n    </div>\n    }\n  })\n  \nexport default Slider;"]},"metadata":{},"sourceType":"module"}