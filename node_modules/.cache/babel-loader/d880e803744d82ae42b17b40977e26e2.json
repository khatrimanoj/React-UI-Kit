{"ast":null,"code":"import _classCallCheck from\"/home/mindbox/Documents/manoj/nexus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mindbox/Documents/manoj/nexus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mindbox/Documents/manoj/nexus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mindbox/Documents/manoj/nexus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/mindbox/Documents/manoj/nexus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Icon}from'react-icons-kit';// const Default = ['form-group input-chips default-chips left-icon'];\n// const outline = ['form-group input-chips outline-chips left-icon'];\n// const filled = ['form-group input-chips filled-chips left-icon'];\n// const filter = ['', 'disabled', 'focus'];\nvar inputChips=/*#__PURE__*/function(_Component){_inherits(inputChips,_Component);function inputChips(){var _getPrototypeOf2;var _this;_classCallCheck(this,inputChips);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(inputChips)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={DivclassName:_this.props.DivclassName,inputClass:_this.props.inputClass,LeftIcon:_this.props.LeftIcon,LeftIconSize:_this.props.LeftIconSize,Title:_this.props.Title,disabled:_this.props.disabled,autoFocus:_this.props.autoFocus,id:_this.props.id,RightIcon:_this.props.RightIcon,RightIconSize:_this.props.RightIconSize};return _this;}_createClass(inputChips,[{key:\"deleteChips\",value:function deleteChips(e){// const inputChips = this.state.id;\n// inputChips.splice(chipsIndex, 1);\nthis.setState({value:e.target.id});}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:this.state.DivclassName},React.createElement(\"i\",{className:\"inputicon\"},React.createElement(Icon,{icon:this.state.LeftIcon,size:this.state.LeftIconSize})),React.createElement(\"input\",{name:\"selection\",type:\"text\",className:this.state.inputClass,value:this.state.Title,autoFocus:this.state.autoFocus,readOnly:true,id:this.state.id}),React.createElement(\"i\",{className:\"cross-icon\",onClick:function onClick(){return _this2.deleteChips();}},React.createElement(Icon,{icon:this.state.RightIcon,size:this.state.rightIconSize}))));}}]);return inputChips;}(Component);export default inputChips;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/inputChips.js"],"names":["React","Component","Icon","inputChips","state","DivclassName","props","inputClass","LeftIcon","LeftIconSize","Title","disabled","autoFocus","id","RightIcon","RightIconSize","e","setState","value","target","deleteChips","rightIconSize"],"mappings":"gxBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,iBAArB,CAEA;AACA;AACA;AACA;GAEMC,CAAAA,U,+YACFC,K,CAAQ,CACJC,YAAY,CAAE,MAAKC,KAAL,CAAWD,YADrB,CAEJE,UAAU,CAAE,MAAKD,KAAL,CAAWC,UAFnB,CAGJC,QAAQ,CAAE,MAAKF,KAAL,CAAWE,QAHjB,CAIJC,YAAY,CAAE,MAAKH,KAAL,CAAWG,YAJrB,CAKJC,KAAK,CAAE,MAAKJ,KAAL,CAAWI,KALd,CAMJC,QAAQ,CAAE,MAAKL,KAAL,CAAWK,QANjB,CAOJC,SAAS,CAAE,MAAKN,KAAL,CAAWM,SAPlB,CAQJC,EAAE,CAAE,MAAKP,KAAL,CAAWO,EARX,CASJC,SAAS,CAAE,MAAKR,KAAL,CAAWQ,SATlB,CAUJC,aAAa,CAAE,MAAKT,KAAL,CAAWS,aAVtB,C,sFAeIC,C,CAAG,CACX;AAEA;AACA,KAAKC,QAAL,CAAc,CAAEC,KAAK,CAAEF,CAAC,CAACG,MAAF,CAASN,EAAlB,CAAd,EACH,C,uCAEQ,iBACL,MACI,yCACI,2BAAK,SAAS,CAAE,KAAKT,KAAL,CAAWC,YAA3B,EACI,yBAAG,SAAS,CAAC,WAAb,EAAyB,oBAAC,IAAD,EAAM,IAAI,CAAE,KAAKD,KAAL,CAAWI,QAAvB,CAAiC,IAAI,CAAE,KAAKJ,KAAL,CAAWK,YAAlD,EAAzB,CADJ,CAEI,6BAAO,IAAI,CAAC,WAAZ,CAAwB,IAAI,CAAC,MAA7B,CAAoC,SAAS,CAAE,KAAKL,KAAL,CAAWG,UAA1D,CAAsE,KAAK,CAAE,KAAKH,KAAL,CAAWM,KAAxF,CAA+F,SAAS,CAAE,KAAKN,KAAL,CAAWQ,SAArH,CAAgI,QAAQ,KAAxI,CAAyI,EAAE,CAAE,KAAKR,KAAL,CAAWS,EAAxJ,EAFJ,CAGI,yBAAG,SAAS,CAAC,YAAb,CAA0B,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACO,WAAL,EAAJ,EAAnC,EAA2D,oBAAC,IAAD,EAAM,IAAI,CAAE,KAAKhB,KAAL,CAAWU,SAAvB,CAAkC,IAAI,CAAE,KAAKV,KAAL,CAAWiB,aAAnD,EAA3D,CAHJ,CADJ,CADJ,CASH,C,wBAjCoBpB,S,EAoCzB,cAAeE,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\n\n// const Default = ['form-group input-chips default-chips left-icon'];\n// const outline = ['form-group input-chips outline-chips left-icon'];\n// const filled = ['form-group input-chips filled-chips left-icon'];\n// const filter = ['', 'disabled', 'focus'];\n\nclass inputChips extends Component {\n    state = {\n        DivclassName: this.props.DivclassName,\n        inputClass: this.props.inputClass,\n        LeftIcon: this.props.LeftIcon,\n        LeftIconSize: this.props.LeftIconSize,\n        Title: this.props.Title,\n        disabled: this.props.disabled,\n        autoFocus: this.props.autoFocus,\n        id: this.props.id,\n        RightIcon: this.props.RightIcon,\n        RightIconSize: this.props.RightIconSize\n\n\n    }\n    \n    deleteChips(e) {\n        // const inputChips = this.state.id;\n\n        // inputChips.splice(chipsIndex, 1);\n        this.setState({ value: e.target.id });\n    }\n\n    render() {\n        return (\n            <>\n                <div className={this.state.DivclassName}> \n                    <i className=\"inputicon\"><Icon icon={this.state.LeftIcon} size={this.state.LeftIconSize} /></i>\n                    <input name=\"selection\" type=\"text\" className={this.state.inputClass} value={this.state.Title} autoFocus={this.state.autoFocus} readOnly id={this.state.id} />\n                    <i className=\"cross-icon\" onClick={()=>this.deleteChips()}><Icon icon={this.state.RightIcon} size={this.state.rightIconSize}/></i>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default inputChips;"]},"metadata":{},"sourceType":"module"}