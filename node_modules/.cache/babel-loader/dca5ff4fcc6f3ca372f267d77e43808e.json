{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion/UserSidebar.js\";\nimport React, { Component, useState } from 'react';\nimport UserAvatar from '../../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml';\nimport AvitarIcon from '../../../../images/avitar.png';\nimport more from \"../../../../images/More_Vertical.svg\";\nimport { grid } from 'react-icons-kit/feather/grid';\nimport { Icon } from 'react-icons-kit';\n\nconst toggleCollectionProperty = ({\n  arrCollection,\n  targetId,\n  itemIdProp,\n  itemProp,\n  itemVal,\n  itemOppVal\n}) => {\n  const tplCollection = [...arrCollection];\n\n  for (let i = 0, l = tplCollection.length; i < l; i += 1) {\n    if (tplCollection[i][itemIdProp] === targetId) {\n      tplCollection[i][itemProp] = itemVal;\n    } else {\n      tplCollection[i][itemProp] = itemOppVal;\n    }\n  }\n\n  return tplCollection;\n};\n\nconst withActiveProp = Component => props => {\n  return props.active && React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nconst toggleText = (bool, val1, val2) => {\n  return bool ? val1 : val2;\n};\n\nconst ListComponent = ({\n  data: listData,\n  Component,\n  className\n}) => {\n  if (!listData) {\n    return false;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, Component && listData.map((item, itemIndex) => React.createElement(React.Fragment, {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, Component(item, itemIndex))));\n};\n\nconst BoxContainer = ({\n  className,\n  children\n}) => {\n  return React.createElement(\"div\", {\n    className: `${className ? className : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, children);\n};\n\nconst TextAndButton = ({\n  className,\n  btnState,\n  brandName,\n  text,\n  handleClick\n}) => {\n  function BrandName(props) {\n    if (props.active == true) {\n      return React.createElement(\"h1\", {\n        className: `${toggleText(className, className, '')}--text`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, text);\n    } else {\n      return null;\n    }\n  }\n\n  let [Status = \"online\", setStatus] = useState('online');\n\n  let selectStatus = e => {\n    setStatus(e.target.value);\n  }; // console.log(Status);\n\n\n  return React.createElement(\"div\", {\n    className: `${toggleText(className, className, '')}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(UserAvatar, {\n    onClick: handleClick,\n    title: \"Benjamin Parker\",\n    subtitle: React.createElement(\"span\", {\n      className: `${Status} status`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: selectStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"online\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Online\"), React.createElement(\"option\", {\n      value: \"offline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Offline\"), React.createElement(\"option\", {\n      value: \"away\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Away\"), React.createElement(\"option\", {\n      value: \"dnd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Don't disturb\"))),\n    avitar: AvitarIcon,\n    hasRound: true,\n    haslg: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"\",\n    src: AvitarIcon,\n    alt: \"User Avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), toggleText(btnState)), React.createElement(\"div\", {\n    className: \"more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: more,\n    alt: \"More Icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(BrandName, {\n    active: brandName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n};\n\nclass UserSidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sideNav: {\n        active: true\n      },\n      pages: [{\n        name: 'Dashboard',\n        title: 'Dashboard',\n        itemIcon: grid,\n        IconActive: true,\n        active: false //   items: [\n        //     {\n        //       name: 'item11',\n        //       active: true,\n        //     },\n        //     {\n        //       name: 'item12',\n        //       active: false,\n        //     },\n        //     {\n        //       name: 'item13',\n        //       active: false,\n        //     },\n        //   ],\n\n      }, {\n        name: 'People',\n        title: 'People',\n        active: true\n      }, {\n        name: 'Favorites',\n        title: 'Favorites',\n        active: false\n      }, {\n        name: 'Updates',\n        title: 'Updates',\n        badgeText: '+10',\n        BadgeActive: true,\n        active: false\n      }, {\n        name: 'Uploads',\n        title: 'Uploads'\n      }, {\n        name: 'Settings',\n        title: 'Settings'\n      }],\n      myCollection: [{\n        name: 'my collections',\n        title: 'my collections',\n        items: [{\n          name: 'Mood Inspiration',\n          active: false\n        }, {\n          name: 'International Women’s Day — Editorial Selects',\n          active: false\n        }, {\n          name: 'Visual Assets for Marketers',\n          active: false\n        }]\n      }]\n    };\n    this.toggleSideNav = this.toggleSideNav.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.toggleMenu2 = this.toggleMenu2.bind(this);\n  }\n\n  toggleSideNav() {\n    const {\n      sideNav\n    } = this.state;\n    sideNav.active = !this.state.sideNav.active;\n    this.setState({\n      sideNav\n    });\n  }\n\n  toggleMenu(collection, collTargetId, submenuIndex) {\n    let Menu = '';\n\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n    } else {\n      const submenu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;\n    }\n\n    this.setState({\n      Menu\n    });\n  }\n\n  toggleMenu2(collection, collTargetId, submenuIndex) {\n    let Menu = '';\n\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n    } else {\n      const submenu = toggleCollectionProperty({\n        arrCollection: collection,\n        targetId: collTargetId,\n        itemIdProp: 'name',\n        itemProp: 'active',\n        itemVal: true,\n        itemOppVal: false\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;\n    }\n\n    this.setState({\n      Menu\n    });\n  }\n\n  render() {\n    // const {itemIcon} = this.state.pages.map((icon) => <span>{icon.itemIcon}</span>);\n    // const BadgeValue = () => {\n    //   return <span> {this.state.pages.map((value,i) => <span>{value.badgeText}</span>)}</span>\n    // }\n    // function MenuIcon(props) {\n    //   if(props.IconActive === true) {\n    //       return <span className=\"menu-icon\"><img src={itemIcon} alt=\"menu icon\"/></span>\n    //   }else {\n    //       return null\n    //   }\n    // }\n    // function Badges(props) {\n    //     if(props.BadgeActive === true) {\n    //         return <span className=\"badge\">{BadgeValue}</span>\n    //     }else {\n    //         return null\n    //     }\n    // }\n    return React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(BoxContainer, {\n      className: `sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(TextAndButton, {\n      className: \"sidebar-head\",\n      btnState: this.state.sideNav.active,\n      handleClick: this.toggleSideNav,\n      text: \"Brand Name\",\n      brandName: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(ListComponent, {\n      data: this.state.pages,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `menu-item ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#/\",\n        onClick: () => this.toggleMenu(this.state.pages, item.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        IconActive: item.IconActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), item.title, \" \", React.createElement(Badges, {\n        BadgeActive: item.BadgeActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, item.title))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(ListComponent, {\n      data: this.state.myCollection,\n      Component: (item, itemIndex) => React.createElement(\"div\", {\n        className: `my-collection ${toggleText(item.active, 'active', '')}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sub-title\",\n        onClick: () => this.toggleMenu2(this.state.myCollection, item.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, item.title), item.items && React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(ListComponent, {\n        data: item.items,\n        Component: subitem => React.createElement(\"li\", {\n          className: `${toggleText(subitem.active, 'active', '')}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#/\",\n          onClick: () => this.toggleMenu2(item.items, subitem.name, itemIndex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, subitem.name)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default UserSidebar;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Sidebar/Types/LightVersion/UserSidebar.js"],"names":["React","Component","useState","UserAvatar","AvitarIcon","grid","Icon","toggleCollectionProperty","arrCollection","targetId","itemIdProp","itemProp","itemVal","itemOppVal","tplCollection","i","l","length","withActiveProp","props","active","toggleText","bool","val1","val2","ListComponent","data","listData","className","map","item","itemIndex","id","BoxContainer","children","TextAndButton","btnState","brandName","text","handleClick","BrandName","Status","setStatus","selectStatus","e","target","value","more","UserSidebar","constructor","state","sideNav","pages","name","title","itemIcon","IconActive","badgeText","BadgeActive","myCollection","items","toggleSideNav","bind","toggleMenu","toggleMenu2","setState","collection","collTargetId","submenuIndex","Menu","submenu","render","subitem"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport UserAvatar from '../../../Notification/avitar/avitar-dropdown/avitar_dropdownhtml';\nimport AvitarIcon from '../../../../images/avitar.png';\nimport more from '../../../../images/More_Vertical.svg';\nimport {grid} from 'react-icons-kit/feather/grid';\nimport { Icon } from 'react-icons-kit';\n\nconst toggleCollectionProperty = ({\n  arrCollection, \n  targetId, \n  itemIdProp,\n  itemProp, \n  itemVal, \n  itemOppVal,\n}) => {\n  const tplCollection = [...arrCollection];\n  for(let i = 0, l=tplCollection.length; i < l; i += 1) {\n    if(tplCollection[i][itemIdProp] === targetId) {\n      tplCollection[i][itemProp] = itemVal;\n    } else {\n      tplCollection[i][itemProp] = itemOppVal;\n    }\n  }\n  \n  return tplCollection;\n};\n  \n  \nconst withActiveProp = Component => props => {\n  return (\n    props.active && <Component\n      {...props}\n    />\n  );\n};\n  \nconst toggleText = (bool, val1, val2) => {\n  return bool ? val1 : val2;\n};\n  \n  \nconst ListComponent = ({ data: listData, Component, className }) => {\n\n  if (!listData) {\n\n    return false;\n\n  }\n\n  return (\n    <React.Fragment>\n      {\n        \n        Component && listData.map((item, itemIndex) => (\n          <React.Fragment key={item.id}>\n            { Component(item, itemIndex) }\n          </React.Fragment>\n        ))\n      }\n    </React.Fragment>\n  );\n\n};\n  \n  \nconst BoxContainer = ({ className, children }) => {\n  return (\n    <div className={`${className?className:''}`}>\n      { children }\n    </div>\n  );\n};\n  \nconst TextAndButton = ({ className, btnState, brandName, text, handleClick }) => {\n  function BrandName(props){\n    if(props.active == true){\n    return <h1 className={`${toggleText(className, className, '')}--text`}>{ text }</h1>\n    \n      }\n      else{\n        return null;\n      }\n  }\n  \n  let [Status=\"online\", setStatus] = useState('online');\n  let selectStatus = (e) => {\n    setStatus(e.target.value)\n  }\n  // console.log(Status);\n  return (\n    <div className={`${toggleText(className, className, '')}`}>\n      <UserAvatar\n        onClick={handleClick}\n        title=\"Benjamin Parker\"  \n        subtitle={\n          <span className={`${Status} status`}>\n            <select onChange={selectStatus}>\n              <option value=\"online\">Online</option>\n              <option value=\"offline\">Offline</option>\n              <option value=\"away\">Away</option>\n              <option value=\"dnd\">Don't disturb</option>\n            </select>\n          </span>\n        }  \n        avitar={AvitarIcon} hasRound haslg> \n        <img className=\"\" src={AvitarIcon} alt=\"User Avatar\"/>\n        {\n          toggleText(btnState) \n        }\n      </UserAvatar> \n      <div className=\"more\">\n        <img src={more} alt=\"More Icon\"/>\n        {/* <button onClick={handleClick}>\n          {\n            toggleText(btnState, 'Close', 'Open') \n          }\n        </button> */}\n      </div>\n      <BrandName active={brandName} />\n      {/* <button onClick={handleClick}>\n        {\n          toggleText(btnState, 'Close', 'Open') \n        }\n      </button> */}\n    </div>\n  );\n};\nclass UserSidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      sideNav: {\n        active: true,\n      },\n      pages: [\n        {\n          name: 'Dashboard',\n          title: 'Dashboard',\n          itemIcon: grid,\n          IconActive: true,\n          active: false,\n        //   items: [\n        //     {\n        //       name: 'item11',\n        //       active: true,\n        //     },\n        //     {\n        //       name: 'item12',\n        //       active: false,\n        //     },\n        //     {\n        //       name: 'item13',\n        //       active: false,\n        //     },\n        //   ],\n        },\n        {\n          name: 'People',\n          title: 'People',\n          active: true,\n        },\n        {\n          name: 'Favorites',\n          title: 'Favorites',\n          active: false,\n        },\n        {\n          name: 'Updates',\n          title: 'Updates',\n          badgeText: '+10',\n          BadgeActive: true,\n          active: false\n        },\n        {\n          name: 'Uploads',\n          title: 'Uploads',\n        },\n        {\n          name: 'Settings',\n          title: 'Settings',\n        }\n      ],  \n      myCollection: [\n        {\n          name: 'my collections',\n          title: 'my collections',\n          items: [\n            {\n              name: 'Mood Inspiration',\n              active: false,\n            },\n            {\n              name: 'International Women’s Day — Editorial Selects',\n              active: false\n            },\n            {\n              name: 'Visual Assets for Marketers',\n              active: false\n            }\n          ]\n\n        }\n      ]\n    }; \n    this.toggleSideNav = this.toggleSideNav.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.toggleMenu2 = this.toggleMenu2.bind(this);\n  }\n      \n      \n  toggleSideNav() {\n    const { sideNav } = this.state;\n    sideNav.active = !this.state.sideNav.active\n    this.setState({ sideNav });\n  }\n      \n \n  toggleMenu(collection, collTargetId, submenuIndex) {\n    let Menu = '';\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n    } else {\n      const submenu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;   \n    }\n    \n    this.setState({ Menu });\n  }\n  toggleMenu2 (collection, collTargetId, submenuIndex) {\n    let Menu = '';\n    if (typeof submenuIndex !== 'number' && !submenuIndex) {\n      Menu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n    } else {\n      const submenu = toggleCollectionProperty ({\n        arrCollection: collection, \n        targetId: collTargetId, \n        itemIdProp: 'name',\n        itemProp: 'active', \n        itemVal: true, \n        itemOppVal: false,\n      });\n      Menu = this.state.pages;\n      Menu[submenuIndex].items = submenu;   \n    }\n    \n    this.setState({ Menu });\n  }\n  \n  render() {\n    // const {itemIcon} = this.state.pages.map((icon) => <span>{icon.itemIcon}</span>);\n    // const BadgeValue = () => {\n    //   return <span> {this.state.pages.map((value,i) => <span>{value.badgeText}</span>)}</span>\n    // }\n    // function MenuIcon(props) {\n    //   if(props.IconActive === true) {\n    //       return <span className=\"menu-icon\"><img src={itemIcon} alt=\"menu icon\"/></span>\n    //   }else {\n    //       return null\n    //   }\n    // }\n    // function Badges(props) {\n    //     if(props.BadgeActive === true) {\n    //         return <span className=\"badge\">{BadgeValue}</span>\n    //     }else {\n    //         return null\n    //     }\n    // }\n    return (\n      <div className=\"sidebar\">\n        <BoxContainer className={`sidebar-menu ${toggleText(this.state.sideNav.active, 'active', '')}`}>\n            {/* Brand and sidebar toggle button */}\n            <TextAndButton\n              className=\"sidebar-head\"\n              btnState={this.state.sideNav.active}\n              handleClick={this.toggleSideNav}  \n              text=\"Brand Name\"\n              brandName={false}\n            />\n            <div className=\"sidebar-content\">\n              <ListComponent\n                data={this.state.pages}\n                Component={\n                  (item, itemIndex)=>(\n                    <div className={`menu-item ${toggleText(item.active, 'active', '')}`}>\n                      <a href=\"#/\"\n                          onClick={()=>this.toggleMenu(this.state.pages, item.name)}\n                      ><MenuIcon IconActive={item.IconActive}></MenuIcon>{ item.title } <Badges BadgeActive={item.BadgeActive}>{item.title}</Badges></a>\n                        {/* {\n                          item.items &&\n                          <ul className=\"sub-menu\">\n                              <ListComponent\n                                data={item.items}\n                                Component={\n                                    (subitem)=>(\n                                    <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                        <a href=\"#/\"\n                                        onClick={()=>this.toggleMenu(item.items, subitem.name, itemIndex)}\n                                        >{ subitem.name }</a>\n                                    </li>\n                                    )\n                                }\n                              />\n                          </ul>\n                      } */}\n                    </div>\n                  )\n                }\n              />\n              <ListComponent\n                data={this.state.myCollection}\n                Component={\n                  (item, itemIndex)=>(\n                    <div className={`my-collection ${toggleText(item.active, 'active', '')}`}>\n                      <span className=\"sub-title\" onClick={()=>this.toggleMenu2(this.state.myCollection, item.name)}>{ item.title }</span>\n                        {\n                          item.items &&\n                          <ul>\n                              <ListComponent\n                                data={item.items}\n                                Component={\n                                    (subitem)=>(\n                                    <li className={`${toggleText(subitem.active, 'active', '')}`}>\n                                        <a href=\"#/\"\n                                        onClick={()=>this.toggleMenu2(item.items, subitem.name, itemIndex)}\n                                        >{ subitem.name }</a>\n                                    </li>\n                                    )\n                                }\n                              />\n                          </ul>\n                      }\n                    </div>\n                  )\n                }\n              />\n            </div>\n        </BoxContainer>\n      </div>\n    );\n  }\n}\n\nexport default UserSidebar;"]},"metadata":{},"sourceType":"module"}