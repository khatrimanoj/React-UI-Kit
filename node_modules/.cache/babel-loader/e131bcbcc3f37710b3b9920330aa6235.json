{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/nolableChips.js\";\nimport React, { Component } from 'react';\n\nclass nolableChips extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.state.id,\n      FillColor: this.state.FillColor,\n      checked: this.state.checked\n    };\n  }\n\n  // constructor(props)\n  // {\n  //     super(props)\n  //     this.state = {\n  //         colorChips: [\n  //             {\n  //                 id: 1,\n  //                 color: 'red',\n  //                 checked: true\n  //             },\n  //             {\n  //                 id: 2,\n  //                 color: 'yellow',\n  //                 checked: true\n  //             },\n  //             {\n  //                 id: 3,\n  //                 color: 'green',\n  //                 checked: true\n  //             },\n  //             {\n  //                 id: 4,\n  //                 color: 'pelorous',\n  //                 checked: true\n  //             },\n  //             {\n  //                 id: 5,\n  //                 color: 'smoke',\n  //                 checked: true\n  //             }\n  //         ]\n  //     }\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"input-chips-wrapper no-label-chips\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.colorChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: \"form-group input-chips squared\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: chipsList.checked,\n      id: chipsList.id,\n      className: chipsList.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: chipsList.color,\n      htmlFor: chipsList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.colorChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: \"form-group input-chips squared\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: chipsList.checked,\n      id: chipsList.id,\n      className: chipsList.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: `${chipsList.color} rounded`,\n      htmlFor: chipsList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.colorChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: \"form-group input-chips squared\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: chipsList.checked,\n      id: chipsList.id,\n      className: chipsList.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: `${chipsList.color} sm`,\n      htmlFor: chipsList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.colorChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: \"form-group input-chips squared\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: chipsList.checked,\n      id: chipsList.id,\n      className: chipsList.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: `${chipsList.color} rounded sm`,\n      htmlFor: chipsList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default nolableChips;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/nolableChips.js"],"names":["React","Component","nolableChips","state","id","FillColor","checked","render","colorChips","map","chipsList","i","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass nolableChips extends Component {\n    state = {\n        id: this.state.id,\n        FillColor: this.state.FillColor,\n        checked: this.state.checked\n    }\n    // constructor(props)\n    // {\n    //     super(props)\n    //     this.state = {\n    //         colorChips: [\n    //             {\n    //                 id: 1,\n    //                 color: 'red',\n    //                 checked: true\n    //             },\n    //             {\n    //                 id: 2,\n    //                 color: 'yellow',\n    //                 checked: true\n    //             },\n    //             {\n    //                 id: 3,\n    //                 color: 'green',\n    //                 checked: true\n    //             },\n    //             {\n    //                 id: 4,\n    //                 color: 'pelorous',\n    //                 checked: true\n    //             },\n    //             {\n    //                 id: 5,\n    //                 color: 'smoke',\n    //                 checked: true\n    //             }\n    //         ]\n    //     }\n    // }\n    render() {\n        return (\n            <div className=\"input-chips-wrapper no-label-chips\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <div className=\"flex-div\">\n                            {this.state.colorChips.map((chipsList, i) => \n                                <div className=\"form-group input-chips squared\" key={i}> \n                                    <input  type=\"checkbox\" checked={chipsList.checked}  id={chipsList.id} className={chipsList.color}/>\n                                    <label className={chipsList.color} htmlFor={chipsList.id}></label>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"flex-div\">\n                            {this.state.colorChips.map((chipsList, i) => \n                                <div className=\"form-group input-chips squared\" key={i}> \n                                    <input  type=\"checkbox\" checked={chipsList.checked}  id={chipsList.id} className={chipsList.color}/>\n                                    <label className={`${chipsList.color} rounded`} htmlFor={chipsList.id}></label>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"flex-div\">\n                            {this.state.colorChips.map((chipsList, i) => \n                                <div className=\"form-group input-chips squared\" key={i}> \n                                    <input  type=\"checkbox\" checked={chipsList.checked}  id={chipsList.id} className={chipsList.color}/>\n                                    <label className={`${chipsList.color} sm`} htmlFor={chipsList.id}></label>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"flex-div\">\n                            {this.state.colorChips.map((chipsList, i) => \n                                <div className=\"form-group input-chips squared\" key={i}> \n                                    <input  type=\"checkbox\" checked={chipsList.checked}  id={chipsList.id} className={chipsList.color}/>\n                                    <label className={`${chipsList.color} rounded sm`} htmlFor={chipsList.id}></label>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default nolableChips;"]},"metadata":{},"sourceType":"module"}