{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/inputChips.js\";\nimport React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit'; // const Default = ['form-group input-chips default-chips left-icon'];\n// const outline = ['form-group input-chips outline-chips left-icon'];\n// const filled = ['form-group input-chips filled-chips left-icon'];\n// const filter = ['', 'disabled', 'focus'];\n\nclass inputChips extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DivclassName: this.props.DivclassName,\n      LeftIcon: this.state.LeftIcon,\n      LeftIconSize: this.props.LeftIconSize,\n      inputTitle: this.props.inputValue,\n      disabled: this.props.disabled,\n      autoFocus: this.props.autoFocus,\n      id: this.state.id,\n      RightIcon: this.props.RightIcon,\n      RightIconSize: this.props.RightIconSize\n    };\n\n    this.deleteChips = chipsIndex => {\n      const inputChips = this.state.inputChips;\n      inputChips.splice(chipsIndex, 1);\n      this.setState({\n        inputChips: inputChips\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: this.state.DivclassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: this.state.LeftIcon,\n      size: this.state.LeftIconSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: this.state.inputTitle,\n      disabled: this.state.disabled,\n      autoFocus: this.state.autoFocus,\n      readOnly: true,\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: this.state.RightIcon,\n      size: this.state.rightIconSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })))) // {/* <div className=\"input-chips-wrapper\">\n    //     <div className=\"row\">\n    //         <div className=\"col-md-4\">\n    //             <div className=\"default\">\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${Default} ${filter[i]}`} key={i}> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} autoFocus={filter[i]} readOnly id={i.id} />\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${Default} ${filter[i]}`} key={i} id={chipsList.id}> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled}  readOnly id={i.id} className=\"rounded\"/>\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //             </div>\n    //         </div> \n    //         <div className=\"col-md-4\">\n    //             <div className=\"outline\">\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${outline} ${filter[i]}`} key={i} id=\"outline\"> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //                 {this.state.inputChips.map((chipsList, i) => \n    //                     <div className={`${outline} ${filter[i]}`} key={i} id={chipsList.id}> \n    //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n    //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                     </div>\n    //                 )}\n    //             </div>\n    //         </div>\n    //         <div className=\"col-md-4\">\n    //             {this.state.inputChips.map((chipsList, i) => \n    //                 <div className={`${filled} ${filter[i]}`} key={i} id=\"filled\"> \n    //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n    //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                 </div>\n    //             )}\n    //             {this.state.inputChips.map((chipsList, i) => \n    //                 <div className={`${filled} ${filter[i]}`} key={i} id={chipsList.id}> \n    //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n    //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n    //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n    //                 </div>\n    //             )}\n    //         </div> \n    //     </div>\n    // </div> */}\n    ;\n  }\n\n}\n\nexport default inputChips;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/inputChips.js"],"names":["React","Component","Icon","inputChips","state","DivclassName","props","LeftIcon","LeftIconSize","inputTitle","inputValue","disabled","autoFocus","id","RightIcon","RightIconSize","deleteChips","chipsIndex","splice","setState","render","rightIconSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACJC,MAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWD,YADrB;AAEJE,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAFjB;AAGJC,MAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAHrB;AAIJC,MAAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,UAJnB;AAKJC,MAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QALjB;AAMJC,MAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWM,SANlB;AAOJC,MAAAA,EAAE,EAAE,KAAKT,KAAL,CAAWS,EAPX;AAQJC,MAAAA,SAAS,EAAE,KAAKR,KAAL,CAAWQ,SARlB;AASJC,MAAAA,aAAa,EAAE,KAAKT,KAAL,CAAWS;AATtB,KADuB;;AAAA,SAe/BC,WAf+B,GAehBC,UAAD,IAAgB;AAC1B,YAAMd,UAAU,GAAG,KAAKC,KAAL,CAAWD,UAA9B;AAEAA,MAAAA,UAAU,CAACe,MAAX,CAAkBD,UAAlB,EAA8B,CAA9B;AACA,WAAKE,QAAL,CAAc;AAAEhB,QAAAA,UAAU,EAAEA;AAAd,OAAd;AACH,KApB8B;AAAA;;AAsB/BiB,EAAAA,MAAM,GAAG;AACL,WACI,0CACI;AAAK,MAAA,SAAS,EAAE,KAAKhB,KAAL,CAAWC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,QAAvB;AAAiC,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CADJ,EAEI;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,IAAI,EAAC,MAA7B;AAAoC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,UAAtD;AAAkE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWO,QAAvF;AAAiG,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWQ,SAAvH;AAAkI,MAAA,QAAQ,MAA1I;AAA2I,MAAA,EAAE,EAAE,KAAKR,KAAL,CAAWS,EAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,MAAA,OAAO,EAAE,MAAI,KAAKG,WAAL,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2D,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWU,SAAvB;AAAkC,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWiB,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3D,CAHJ,CADJ,CADJ,CAQI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DJ;AAiEH;;AAxF8B;;AA2FnC,eAAelB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\n\n// const Default = ['form-group input-chips default-chips left-icon'];\n// const outline = ['form-group input-chips outline-chips left-icon'];\n// const filled = ['form-group input-chips filled-chips left-icon'];\n// const filter = ['', 'disabled', 'focus'];\n\nclass inputChips extends Component {\n    state = {\n        DivclassName: this.props.DivclassName,\n        LeftIcon: this.state.LeftIcon,\n        LeftIconSize: this.props.LeftIconSize,\n        inputTitle: this.props.inputValue,\n        disabled: this.props.disabled,\n        autoFocus: this.props.autoFocus,\n        id: this.state.id,\n        RightIcon: this.props.RightIcon,\n        RightIconSize: this.props.RightIconSize\n\n\n    }\n\n    deleteChips = (chipsIndex) => {\n        const inputChips = this.state.inputChips;\n\n        inputChips.splice(chipsIndex, 1);\n        this.setState({ inputChips: inputChips });\n    }\n\n    render() {\n        return (\n            <>\n                <div className={this.state.DivclassName}> \n                    <i className=\"inputicon\"><Icon icon={this.state.LeftIcon} size={this.state.LeftIconSize} /></i>\n                    <input name=\"selection\" type=\"text\" value={this.state.inputTitle} disabled={this.state.disabled} autoFocus={this.state.autoFocus} readOnly id={this.state.id} />\n                    <i className=\"cross-icon\" onClick={()=>this.deleteChips()}><Icon icon={this.state.RightIcon} size={this.state.rightIconSize}/></i>\n                </div>\n            </>\n            // {/* <div className=\"input-chips-wrapper\">\n            //     <div className=\"row\">\n            //         <div className=\"col-md-4\">\n            //             <div className=\"default\">\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${Default} ${filter[i]}`} key={i}> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} autoFocus={filter[i]} readOnly id={i.id} />\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${Default} ${filter[i]}`} key={i} id={chipsList.id}> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled}  readOnly id={i.id} className=\"rounded\"/>\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //             </div>\n            //         </div> \n            //         <div className=\"col-md-4\">\n            //             <div className=\"outline\">\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${outline} ${filter[i]}`} key={i} id=\"outline\"> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //                 {this.state.inputChips.map((chipsList, i) => \n            //                     <div className={`${outline} ${filter[i]}`} key={i} id={chipsList.id}> \n            //                         <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                         <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n            //                         <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                     </div>\n            //                 )}\n            //             </div>\n            //         </div>\n            //         <div className=\"col-md-4\">\n            //             {this.state.inputChips.map((chipsList, i) => \n            //                 <div className={`${filled} ${filter[i]}`} key={i} id=\"filled\"> \n            //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n            //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                 </div>\n            //             )}\n            //             {this.state.inputChips.map((chipsList, i) => \n            //                 <div className={`${filled} ${filter[i]}`} key={i} id={chipsList.id}> \n            //                     <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n            //                     <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n            //                     <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n            //                 </div>\n            //             )}\n            //         </div> \n            //     </div>\n            // </div> */}\n        );\n    }\n}\n\nexport default inputChips;"]},"metadata":{},"sourceType":"module"}